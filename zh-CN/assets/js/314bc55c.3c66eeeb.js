"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[29872],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),u=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=u(a),k=n,c=m["".concat(p,".").concat(k)]||m[k]||d[k]||l;return a?r.createElement(c,o(o({ref:t},s),{},{components:a})):r.createElement(c,o({ref:t},s))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=k;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:n,o[1]=i;for(var u=2;u<l;u++)o[u]=a[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},86233:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=a(87462),n=(a(67294),a(3905));const l={title:"Grove Serial Bluetooth",nointro:null,keywords:["docs","docusaurus"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"01/29/2022",author:"jianjing Huang"}},o=void 0,i={unversionedId:"Sensor/Grove/Grove_Sensors_Network/Bluetooth/Grove-Serial_Bluetooth",id:"Sensor/Grove/Grove_Sensors_Network/Bluetooth/Grove-Serial_Bluetooth",title:"Grove Serial Bluetooth",description:"Grove - Serial Bluetooth is an easy to use module compatible with the existing Grove Base Shield, and designed for transparent wireless serial connection setup. The serial port Bluetooth module is fully qualified Bluetooth V2.0+EDR(Enhanced Data Rate) 2Mbps Modulation with complete 2.4GHz radio transceiver and baseband. It uses CSR Bluecore 04-External single chip Bluetooth system with CMOS technology and with AFH(Adaptive Frequency Hopping Feature). It has the smallest footprint of 12.7mm x 27mm. Hope it will simplify your overall design/development cycle.",source:"@site/docs/Sensor/Grove/Grove_Sensors_Network/Bluetooth/Grove-Serial_Bluetooth.md",sourceDirName:"Sensor/Grove/Grove_Sensors_Network/Bluetooth",slug:"/Sensor/Grove/Grove_Sensors_Network/Bluetooth/Grove-Serial_Bluetooth",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Sensors_Network/Bluetooth/Grove-Serial_Bluetooth",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Sensor/Grove/Grove_Sensors_Network/Bluetooth/Grove-Serial_Bluetooth.md",tags:[],version:"current",lastUpdatedBy:"jianjing Huang",lastUpdatedAt:1643414400,formattedLastUpdatedAt:"2022\u5e741\u670829\u65e5",frontMatter:{title:"Grove Serial Bluetooth",nointro:null,keywords:["docs","docusaurus"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"01/29/2022",author:"jianjing Huang"}},sidebar:"ProductSidebar",previous:{title:"Grove BLE v1",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Sensors_Network/Bluetooth/Grove-BLE_v1"},next:{title:"Grove - UART Wi-Fi",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Sensors_Network/Wi-Fi/Grove-UART_Wifi"}},p={},u=[{value:"Specifications",id:"specifications",level:2},{value:"Demonstration",id:"demonstration",level:2},{value:"Reference",id:"reference",level:2},{value:"Flowchat",id:"flowchat",level:4},{value:"Commands to change default configuration",id:"commands-to-change-default-configuration",level:3},{value:"Commands for Normal Operation",id:"commands-for-normal-operation",level:3},{value:"1.Inquire",id:"1inquire",level:4},{value:"Schematic Online Viewer",id:"schematic-online-viewer",level:2},{value:"Resources",id:"resources",level:2},{value:"Tech Support",id:"tech-support",level:2}],s={toc:u};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Serial_Bluetooth/img/Twigbt00.jpg",alt:null})),(0,n.kt)("p",null,"Grove - Serial Bluetooth is an easy to use module compatible with the existing Grove Base Shield, and designed for transparent wireless serial connection setup. The serial port Bluetooth module is fully qualified Bluetooth V2.0+EDR(Enhanced Data Rate) 2Mbps Modulation with complete 2.4GHz radio transceiver and baseband. It uses CSR Bluecore 04-External single chip Bluetooth system with CMOS technology and with AFH(Adaptive Frequency Hopping Feature). It has the smallest footprint of 12.7mm x 27mm. Hope it will simplify your overall design/development cycle."),(0,n.kt)("p",null,"Model:",(0,n.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/depot/grove-serial-bluetooth-p-795.html?cPath=139_142"},"WLS31746P")),(0,n.kt)("h2",{id:"specifications"},"Specifications"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Operating Voltage: 5.0VDC")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Data Rate: 2Mbps")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"RF Transmit Power (Max): +4dBm")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Sensitivity: -80dBm")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Fully Qualified Bluetooth V2.0+EDR 3Mbps Modulation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Selectable baud rate")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Auto-reconnect in 30 min when disconnected as a result of beyond the range of connection"))),(0,n.kt)("h2",{id:"demonstration"},"Demonstration"),(0,n.kt)("p",null,"In this library we packed are two demos for your project to work in Master mode and Slave mode.\nTwo Bluetooth modules work as shown below:\n",(0,n.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Serial_Bluetooth/img/Bluetooth-1.jpg",alt:null})),(0,n.kt)("p",null,"Connect the module to D6 Port of ",(0,n.kt)("a",{parentName:"p",href:"https://seeeddoc.github.io/Grove-Base_Shield/"},"Grove - Base Shield")," :\n",(0,n.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Serial_Bluetooth/img/Grove-Serial-Bluetooth.JPG",alt:null})),(0,n.kt)("p",null,'Install the library in the "Resources" section. If you want to run the project in Master mode, find the demo by the path: File - Examples - Bluetooth_demo_code - Master. And you can find the demo for Slave mode in the same path.'),(0,n.kt)("p",null,"When the Grove - Serial Bluetooth module is in pairing status, the green and red LED links in interval. If connection succeeds, the green LED will blink every 2s. If connection fails, the red LED will blink every 0.5s."),(0,n.kt)("h2",{id:"reference"},"Reference"),(0,n.kt)("h4",{id:"flowchat"},"Flowchat"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Serial_Bluetooth/img/Bluetooth-2.jpg",alt:null})),(0,n.kt)("h3",{id:"commands-to-change-default-configuration"},"Commands to change default configuration"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"1.Set working MODE")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STWMOD=0\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STWMOD=1\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Note:")," ",(0,n.kt)("strong",{parentName:"p"},"\\r\\n")," is necessary for operation and the value of are ",(0,n.kt)("strong",{parentName:"p"},"0x0D 0x0A")," in Hex. ",(0,n.kt)("strong",{parentName:"p"},"\\r")," and ",(0,n.kt)("strong",{parentName:"p"},"\\n")," represent ",(0,n.kt)("strong",{parentName:"p"},"carriage-return")," and ",(0,n.kt)("strong",{parentName:"p"},"line-feed"),"(or next line),"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"2.Set BAUDRATE")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STBD=115200\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Supported baudrate:9600,19200,38400,57600,115200,230400,460800.")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"3.Set Device NAME")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STNA=abcdefg\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"4.Auto-connect the last paired device on power")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STAUTO=0\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STAUTO=1\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"5.Permit Paired device to connect me")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STOAUT=0\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STOAUT=1\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"6.Set PINCODE")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+STPIN=2222\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"7.Delete PINCODE(input PINCODE by MCU)")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+DLPIN\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"8.Read local ADDRESS CODE")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+RTADDR\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"9.Auto-reconnecting when master device is beyond the valid range (slave device will auto-reconnect in 30 min when it is beyond the valid range)")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+LOSSRECONN=0\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+LOSSRECONN=1\\r\\n")))),(0,n.kt)("h3",{id:"commands-for-normal-operation"},"Commands for Normal Operation"),(0,n.kt)("h4",{id:"1inquire"},"1.Inquire"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"a) Master")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+INQ=0\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+INQ=1\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"b) Slave")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+INQ=0\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+INQ=1\\r\\n")))),(0,n.kt)("p",null,"When ",(0,n.kt)("strong",{parentName:"p"},"+INQ=1")," command is successful, the  ",(0,n.kt)("strong",{parentName:"p"},"red"),"  and ",(0,n.kt)("strong",{parentName:"p"},"green")," LEDS blink alternatively."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"2.Bluetooth module returns inquiring result")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+RTINQ=aa,bb,cc,dd,ee,ff;name\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Serial Bluetooth device with the address \u201caa,bb,cc,dd,ee,ff\u201d and the name \u201cname\u201d is inquired")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"3.Connect device")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+CONN=aa,bb,cc,dd,ee,ff\\r\\n")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"4.Bluetooth module requests inputting PINCODE")),(0,n.kt)("p",null,"\\r\\n+INPIN\\r\\n"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"5.Input PINCODE")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"\\r\\n+RTPIN=code\\r\\n")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Example: RTPIN=0000")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"6.Disconnect device")," Pulling PIO0 high will disconnect current working Bluetooth device."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"7.Return status")," \\r\\n+BTSTA:",(0,n.kt)("strong",{parentName:"p"},"xx"),"\\r\\n\n",(0,n.kt)("strong",{parentName:"p"},"xx")," status:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"0 - Initializing")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"1 - Ready")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"2 - Inquiring")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"3 - Connecting")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"4 - Connected"))),(0,n.kt)("p",null,"(",(0,n.kt)("strong",{parentName:"p"},"Note:")," This is not a command, but the information returned from the module after every command)"),(0,n.kt)("h2",{id:"schematic-online-viewer"},"Schematic Online Viewer"),(0,n.kt)("div",{className:"altium-ecad-viewer","data-project-src":"res/Grove-Serial_Bluetooth_eagle_file.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,n.kt)("h2",{id:"resources"},"Resources"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-Serial_Bluetooth/res/Bluetooth_demo_code.zip"},"Serial Bluetooth Library")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-Serial_Bluetooth/res/Grove-Serial_Bluetooth_eagle_file.zip"},"Serial Bluetooth Eagle File")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-Serial_Bluetooth/res/Bluetooth_Software_Instruction.pdf"},"Bluetooth Software instruction")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-Serial_Bluetooth/res/Bluetooth_module.pdf"},"Bluetooth - module Datasheet"))),(0,n.kt)("h2",{id:"tech-support"},"Tech Support"),(0,n.kt)("p",null,"Please submit any technical issue into our ",(0,n.kt)("a",{parentName:"p",href:"https://forum.seeedstudio.com/"},"forum"),". ",(0,n.kt)("br",null)),(0,n.kt)("p",{style:{textAlign:"center"}},(0,n.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,n.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"}))))}m.isMDXComponent=!0}}]);