"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3235],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),s=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=s(r),m=n,k=u["".concat(p,".").concat(m)]||u[m]||c[m]||a;return r?o.createElement(k,l(l({ref:t},d),{},{components:r})):o.createElement(k,l({ref:t},d))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},63527:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=r(87462),n=(r(67294),r(3905));const a={description:"Grove - Node",title:"Grove - Node",keywords:["Grove_Sensors_Network"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/20/2023",author:"jianjing Huang"}},l=void 0,i={unversionedId:"Sensor/Grove/Grove_Sensors_Network/Standard_Protocol/Grove-Node",id:"Sensor/Grove/Grove_Sensors_Network/Standard_Protocol/Grove-Node",title:"Grove - Node",description:"Grove - Node",source:"@site/docs/Sensor/Grove/Grove_Sensors_Network/Standard_Protocol/Grove-Node.md",sourceDirName:"Sensor/Grove/Grove_Sensors_Network/Standard_Protocol",slug:"/Sensor/Grove/Grove_Sensors_Network/Standard_Protocol/Grove-Node",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Sensors_Network/Standard_Protocol/Grove-Node",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Sensor/Grove/Grove_Sensors_Network/Standard_Protocol/Grove-Node.md",tags:[],version:"current",lastUpdatedBy:"jianjing Huang",lastUpdatedAt:1674172800,formattedLastUpdatedAt:"2023\u5e741\u670820\u65e5",frontMatter:{description:"Grove - Node",title:"Grove - Node",keywords:["Grove_Sensors_Network"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/20/2023",author:"jianjing Huang"}},sidebar:"ProductSidebar",previous:{title:"Grove - RJ45 Adapter",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Sensors_Network/Standard_Protocol/Grove-RJ45_Adapter"},next:{title:"Grove - 4-Digit Display",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Accessories/Display/Grove-4-Digit_Display"}},p={},s=[{value:"Features",id:"features",level:2},{value:"Specifications",id:"specifications",level:2},{value:"Pinout",id:"pinout",level:2},{value:"Get Started",id:"get-started",level:2},{value:"Get Started with Pre-programmed Firmware",id:"get-started-with-pre-programmed-firmware",level:3},{value:"Over-The-Air",id:"over-the-air",level:2},{value:"Develop New Application",id:"develop-new-application",level:2},{value:"Schematic Online Viewer",id:"schematic-online-viewer",level:2},{value:"Resources",id:"resources",level:2},{value:"Tech Support",id:"tech-support",level:2}],d={toc:s};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Grove - Node is a simple and flexible electronic module to connect physical objects. It's based on the idea of IFTTT (IF-This-Then-That). It has two Grove connectors to access a variety of Grove modules. With pre-programming IFTTT firmware, it's easy to create physical objects with analog sensors and 0/1 actuators."),(0,n.kt)("p",null,"It integrates Bluetooth Low Energy (BLE) which makes it extremely easy to interact with phones and tablets. To extend its usability, a DFU bootloader is built in to reprogram it Over-The-Air through BLE. It supports ARM mbed platform to write new firmware with hundreds of libraries."),(0,n.kt)("h2",{id:"features"},"Features"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"IFTTT pattern to use")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Two Grove connectors for sensors and actuators"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Plug-Play with analog sensors and high/low actuators"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Flexible 4 GPIOs, all can be used for PWM, ADC, I2C and UART"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Nordic nRF51822 Multi-protocol Bluetooth\xae 4.0 low energy/2.4GHz RF SoC"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"ARM Cortex-M0 processor"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"256kB flash, 16kB RAM"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"On board battery charge circuit")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"OTA firmware")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"mbed enabled"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Online IDE"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Easy to use C/C++ SDK")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Handy libraries"))))))),(0,n.kt)("h2",{id:"specifications"},"Specifications"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Operating voltage: 3.3Vdc")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Battery capacity: 80mAH")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Maximum charge current: 100mA")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Grove Interface supply Voltage\uff1a3.3V")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Grove Interface supply Current:  100mA max")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Grove Interface input Voltage\uff1a0~3.3V"))),(0,n.kt)("h2",{id:"pinout"},"Pinout"),(0,n.kt)("h2",{id:"get-started"},"Get Started"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Turn On Grove Node")),(0,n.kt)("p",null,"Connect Grove Node with a battery or a USB cable and then press its button, it will run."),(0,n.kt)("dl",null,(0,n.kt)("dd",null,(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Double Clicks - run its bootloader, the red LED will be on.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Otherwise - run its application, the green LED will blink."))))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Turn Off Grove Node")),(0,n.kt)("dl",null,(0,n.kt)("dd",null,(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"In bootloader mode - wait for a while to run into the application.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"In application mode - long press the button wait until all LEDs are off"))))),(0,n.kt)("h3",{id:"get-started-with-pre-programmed-firmware"},"Get Started with Pre-programmed Firmware"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Node/img/Milcandy_IFTTT.jpg",alt:null})),(0,n.kt)("p",null,"First, we need an ",(0,n.kt)("strong",{parentName:"p"},"Input")," Grove module to sense the physical world. Pre-programmed firmware only supports an analog input sensor or 0/1 digital input sensor.\nThe following Grove modules from Seeedstudio can be used as an ",(0,n.kt)("strong",{parentName:"p"},"Input"),":"),(0,n.kt)("table",null,(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("th",null,"Module name"),(0,n.kt)("th",null,"Parameter to measure")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",{width:300}," Grove - 80cm Infrared Proximity Sensor"),(0,n.kt)("td",{width:400}," Distance")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Button"),(0,n.kt)("td",{colSpan:3,rowSpan:1},"On/Off")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Electricity Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Electricity")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Gas Sensor(MQ2&MQ5)"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Gas Quality")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Light Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Light")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Magnetic Switch"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Magnetic")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Moisture Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Moisture")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - PIR Motion Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," PIR Motion")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Rotary Angle Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Rotary Angle")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Tilt Switch"),(0,n.kt)("td",{colSpan:3,rowSpan:1},"  Object Position")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Sound Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Sound")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Temperature Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Temperature")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Touch Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Human touch")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Water Sensor"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Water")))),(0,n.kt)("p",null,"Other analog sensors which is not Grove-compatible need a little small adjustment. Just connect your signal output to pin4 of Grove connector and then the VCC and GND. ",(0,n.kt)("em",{parentName:"p"},"Note that only sensors that output an analog or digital 1/0 value can be used with the pre-programmed firmware")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Node/img/Mil_Grove_con.png",alt:null})),(0,n.kt)("p",null,"Second, we need an ",(0,n.kt)("strong",{parentName:"p"},"output")," Grove module as an actuator. The following Grove modules can be used:"),(0,n.kt)("table",null,(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("th",null,"Module name"),(0,n.kt)("th",null,"Action when triggered")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",{width:300}," Grove - Buzzer"),(0,n.kt)("td",{width:400}," Buzzer enabled")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - LED"),(0,n.kt)("td",{colSpan:3,rowSpan:1},"LED On")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Vibrator"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Vibrate")),(0,n.kt)("tr",{style:{fontSize:"90%"}},(0,n.kt)("td",null," Grove - Relay"),(0,n.kt)("td",{colSpan:3,rowSpan:1}," Swith On/Off other circuits")))),(0,n.kt)("p",null,"For example, we intend to create a light which automatically turns on if the environment is dark and turns off if otherwise, then we select a ",(0,n.kt)("a",{parentName:"p",href:"/Sensor/Grove/Grove_Sensors/Light/Grove-Light_Sensor",title:"Grove - Light Sensor"},"Grove-Light_Sensor")," and a Grove-Red_LED. "),(0,n.kt)("p",null,"Third, teach the Grove Node a logic."),(0,n.kt)("p",null,"Connect the light sensor as an input and the LED as an output, and then turn on the Grove Node."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"In a normal environment, do a single-click on the Grove Node's button")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Cover the light sensor with a hand to simulate a dark environment, and then do a double-clicks, the Grove - LED will be on.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Release the light sensor, the Grove - LED will be off."))),(0,n.kt)("h2",{id:"over-the-air"},"Over-The-Air"),(0,n.kt)("p",null,"The Grove Node has a pre-programmed OTA bootloader. To run into the bootloader:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"power off the Grove Node")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"do a double-clicks on the Grove Node's button")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"the red LED will be on and a BLE device named SD7DFU can be scaned")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"use ",(0,n.kt)("a",{parentName:"p",href:"https://play.google.com/store/apps/details?id=no.nordicsemi.android.mcp"},"nRF Master Control Panel")," to upgrade the BLE app"))),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-Node/img/Ota-ui.png",alt:null})),(0,n.kt)("p",null,"More information can be found at ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mbed.org/teams/Bluetooth-Low-Energy/wiki/Firmware-Over-the-Air-FOTA-Updates"},"mbed.org"),"."),(0,n.kt)("h2",{id:"develop-new-application"},"Develop New Application"),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{parentName:"p",href:"http://developer.mbed.org/teams/Bluetooth-Low-Energy/"},"ble on mbed.org")),(0,n.kt)("h2",{id:"schematic-online-viewer"},"Schematic Online Viewer"),(0,n.kt)("div",{className:"altium-ecad-viewer","data-project-src":"https://files.seeedstudio.com/wiki/Grove-Node/res/Grove-Node_v1.0_eagle.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,n.kt)("h2",{id:"resources"},"Resources"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-Node/res/Grove-Node_v1.0.pdf"},"Grove - Node v1.0 schematic pdf file"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove-Node/res/Grove-Node_v1.0_eagle.zip"},"Grove - Node v1.0 eagle design file")))),(0,n.kt)("h2",{id:"tech-support"},"Tech Support"),(0,n.kt)("p",null,"Please submit any technical issue into our ",(0,n.kt)("a",{parentName:"p",href:"https://forum.seeedstudio.com/"},"forum"),". ",(0,n.kt)("br",null)),(0,n.kt)("p",{style:{textAlign:"center"}},(0,n.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,n.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"}))))}u.isMDXComponent=!0}}]);