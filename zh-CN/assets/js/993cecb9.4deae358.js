"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53683],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>S});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),h=r,S=c["".concat(s,".").concat(h)]||c[h]||d[h]||a;return n?i.createElement(S,o(o({ref:t},p),{},{components:n})):i.createElement(S,o({ref:t},p))}));function S(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},79015:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var i=n(87462),r=(n(67294),n(3905));const a={description:"Bluetooth Usage on Seeed Studio XIAO ESP32C3",title:"Bluetooth Usage on Seeed Studio XIAO ESP32C3",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/11/2023",author:"shuxu hu"}},o="Bluetooth Usage",l={unversionedId:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/XIAO_ESP32C3_Bluetooth_Usage",id:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/XIAO_ESP32C3_Bluetooth_Usage",title:"Bluetooth Usage on Seeed Studio XIAO ESP32C3",description:"Bluetooth Usage on Seeed Studio XIAO ESP32C3",source:"@site/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/XIAO_ESP32C3_Bluetooth_Usage.md",sourceDirName:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3",slug:"/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/XIAO_ESP32C3_Bluetooth_Usage",permalink:"/docusaurus_wiki/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/XIAO_ESP32C3_Bluetooth_Usage",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/XIAO_ESP32C3_Bluetooth_Usage.md",tags:[],version:"current",lastUpdatedBy:"shuxu hu",lastUpdatedAt:1673395200,formattedLastUpdatedAt:"2023\u5e741\u670811\u65e5",frontMatter:{description:"Bluetooth Usage on Seeed Studio XIAO ESP32C3",title:"Bluetooth Usage on Seeed Studio XIAO ESP32C3",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/11/2023",author:"shuxu hu"}},sidebar:"ProductSidebar",previous:{title:"WiFi Usage on Seeed Studio XIAO ESP32C3",permalink:"/docusaurus_wiki/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/XIAO_ESP32C3_WiFi_Usage"},next:{title:"XIAO ESP32C3 Pin Multiplexing",permalink:"/docusaurus_wiki/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/XIAO_ESP32C3_Pin_Multiplexing"}},s={},u=[{value:"Hardware set up",id:"hardware-set-up",level:2},{value:"Scan Bluetooth devices",id:"scan-bluetooth-devices",level:2},{value:"XIAO ESP32C3 as Bluetooth server",id:"xiao-esp32c3-as-bluetooth-server",level:2},{value:"Tech support",id:"tech-support",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"bluetooth-usage"},"Bluetooth Usage"),(0,r.kt)("p",null,"Seeed Studio XIAO ESP32C3 supports Bluetooth 5 (LE) connectivity. This wiki will introduce the basics of Bluetooth usage on this board."),(0,r.kt)("h2",{id:"hardware-set-up"},"Hardware set up"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Connect the included ",(0,r.kt)("strong",{parentName:"li"},"WiFi/ Bluetooth antenna")," to the ",(0,r.kt)("strong",{parentName:"li"},"IPEX connector")," on the board")),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/wifi-6.png",alt:"pir",width:130,height:"auto"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 2.")," Connect XIAO ESP32C3 to your computer via a USB Type-C cable")),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/cable-connect.png",alt:"pir",width:120,height:"auto"})),(0,r.kt)("h2",{id:"scan-bluetooth-devices"},"Scan Bluetooth devices"),(0,r.kt)("p",null,"In this example, we are going to use XIAO ESP32C3 to scan available Bluetooth devices around it."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Copy and paste the code below into Arduino IDE")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <BLEDevice.h>\n#include <BLEUtils.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n\nint scanTime = 5; //In seconds\nBLEScan* pBLEScan;\n\nclass MyAdvertisedDeviceCallbacks: public BLEAdvertisedDeviceCallbacks {\n    void onResult(BLEAdvertisedDevice advertisedDevice) {\n      Serial.printf("Advertised Device: %s \\n", advertisedDevice.toString().c_str());\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println("Scanning...");\n\n  BLEDevice::init("");\n  pBLEScan = BLEDevice::getScan(); //create new scan\n  pBLEScan->setAdvertisedDeviceCallbacks(new MyAdvertisedDeviceCallbacks());\n  pBLEScan->setActiveScan(true); //active scan uses more power, but get results faster\n  pBLEScan->setInterval(100);\n  pBLEScan->setWindow(99);  // less or equal setInterval value\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  BLEScanResults foundDevices = pBLEScan->start(scanTime, false);\n  Serial.print("Devices found: ");\n  Serial.println(foundDevices.getCount());\n  Serial.println("Scan done!");\n  pBLEScan->clearResults();   // delete results fromBLEScan buffer to release memory\n  delay(2000);\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 2.")," Upload the codes and open the Serial Monitor to start scanning for Bluetooth devices"),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/ble-1.jpg",alt:"pir",width:1e3,height:"auto"})),(0,r.kt)("h2",{id:"xiao-esp32c3-as-bluetooth-server"},"XIAO ESP32C3 as Bluetooth server"),(0,r.kt)("p",null,"In this example, we are going to use XIAO ESP32C3 as a Bluetooth server. Here we will search for XIAO ESP32C3 board using a smartphone and send out strings to display on the serial monitor"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Copy and paste the code below into Arduino IDE")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <BLEDevice.h>\n#include <BLEUtils.h>\n#include <BLEServer.h>\n\n// See the following for generating UUIDs:\n// https://www.uuidgenerator.net/\n\n#define SERVICE_UUID        "4fafc201-1fb5-459e-8fcc-c5c9c331914b"\n#define CHARACTERISTIC_UUID "beb5483e-36e1-4688-b7f5-ea07361b26a8"\n\n\nclass MyCallbacks: public BLECharacteristicCallbacks {\n    void onWrite(BLECharacteristic *pCharacteristic) {\n      std::string value = pCharacteristic->getValue();\n\n      if (value.length() > 0) {\n        Serial.println("*********");\n        Serial.print("New value: ");\n        for (int i = 0; i < value.length(); i++)\n          Serial.print(value[i]);\n\n        Serial.println();\n        Serial.println("*********");\n      }\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n\n  BLEDevice::init("MyESP32");\n  BLEServer *pServer = BLEDevice::createServer();\n\n  BLEService *pService = pServer->createService(SERVICE_UUID);\n\n  BLECharacteristic *pCharacteristic = pService->createCharacteristic(\n                                         CHARACTERISTIC_UUID,\n                                         BLECharacteristic::PROPERTY_READ |\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  pCharacteristic->setCallbacks(new MyCallbacks());\n\n  pCharacteristic->setValue("Hello World");\n  pService->start();\n\n  BLEAdvertising *pAdvertising = pServer->getAdvertising();\n  pAdvertising->start();\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  delay(2000);\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 2.")," Upload the codes and open the Serial Monitor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 3.")," Download and install LightBlue App on your smartphone"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://play.google.com/store/apps/details?id=com.punchthrough.lightblueexplorer&hl=en_US&gl=US"},"LightBlue App (Android)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://apps.apple.com/us/app/lightblue/id557428110"},"LightBlue App (Apple)"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 4.")," Open Bluetooth on your phone, bring the phone close to XIAO ESP32C3, scan for devices and connect with ",(0,r.kt)("strong",{parentName:"li"},"MyESP32")," device")),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/ble-2.jpg",alt:"pir",width:300,height:"auto"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 5.")," Open the LightBlue app and click ",(0,r.kt)("strong",{parentName:"li"},"Bonded")," tab")),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/ble-3.jpg",alt:"pir",width:350,height:"auto"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 6.")," Click ",(0,r.kt)("strong",{parentName:"li"},"CONNECT")," next to ",(0,r.kt)("strong",{parentName:"li"},"MyESP32"))),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/ble-4.jpg",alt:"pir",width:350,height:"auto"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 7.")," Click the section at the very bottom which says ",(0,r.kt)("strong",{parentName:"li"},"Readable, Writable"))),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/ble-5.jpg",alt:"pir",width:300,height:"auto"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 8.")," Under ",(0,r.kt)("strong",{parentName:"li"},"Data format")," drop-down menu, select ",(0,r.kt)("strong",{parentName:"li"},"UTF-8 String"))),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/ble-6.jpg",alt:"pir",width:300,height:"auto"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 9."),' Type "Hello" under ',(0,r.kt)("strong",{parentName:"li"},"WRITTEN VALUES")," and click ",(0,r.kt)("strong",{parentName:"li"},"WRITE"),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/ble-7.jpg",alt:"pir",width:300,height:"auto"})))),(0,r.kt)("p",null,'You will see the text string "Hello" output on the serial monitor of Arduino IDE'),(0,r.kt)("div",{align:"center"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/ble-9.jpg",alt:"pir",width:500,height:"auto"})),(0,r.kt)("h2",{id:"tech-support"},"Tech support"),(0,r.kt)("p",null,"Please do not hesitate to submit the issue into our ",(0,r.kt)("a",{parentName:"p",href:"https://forum.seeedstudio.com/"},"forum"),"."),(0,r.kt)("br",null),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"}))))}c.isMDXComponent=!0}}]);