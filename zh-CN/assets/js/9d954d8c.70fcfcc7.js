"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[95487],{3905:(e,x,t)=>{t.d(x,{Zo:()=>p,kt:()=>c});var n=t(67294);function a(e,x,t){return x in e?Object.defineProperty(e,x,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[x]=t,e}function r(e,x){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);x&&(n=n.filter((function(x){return Object.getOwnPropertyDescriptor(e,x).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var x=1;x<arguments.length;x++){var t=null!=arguments[x]?arguments[x]:{};x%2?r(Object(t),!0).forEach((function(x){a(e,x,t[x])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(x){Object.defineProperty(e,x,Object.getOwnPropertyDescriptor(t,x))}))}return e}function i(e,x){if(null==e)return{};var t,n,a=function(e,x){if(null==e)return{};var t,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],x.indexOf(t)>=0||(a[t]=e[t]);return a}(e,x);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],x.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=n.createContext({}),s=function(e){var x=n.useContext(o),t=x;return e&&(t="function"==typeof e?e(x):l(l({},x),e)),t},p=function(e){var x=s(e.components);return n.createElement(o.Provider,{value:x},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var x=e.children;return n.createElement(n.Fragment,{},x)}},u=n.forwardRef((function(e,x){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(t),u=a,c=d["".concat(o,".").concat(u)]||d[u]||m[u]||r;return t?n.createElement(c,l(l({ref:x},p),{},{components:t})):n.createElement(c,l({ref:x},p))}));function c(e,x){var t=arguments,a=x&&x.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=u;var i={};for(var o in x)hasOwnProperty.call(x,o)&&(i[o]=x[o]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=t[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},59665:(e,x,t)=>{t.r(x),t.d(x,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var n=t(87462),a=(t(67294),t(3905));const r={description:"Grove - OLED Display 0.96 inch",title:"Grove - OLED Display 0.96 inch",keywords:["Grove"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/9/2023",author:"shuxu hu"}},l=void 0,i={unversionedId:"Sensor/Grove/Grove_Accessories/Display/Grove-OLED_Display_0.96inch",id:"Sensor/Grove/Grove_Accessories/Display/Grove-OLED_Display_0.96inch",title:"Grove - OLED Display 0.96 inch",description:"Grove - OLED Display 0.96 inch",source:"@site/docs/Sensor/Grove/Grove_Accessories/Display/Grove-OLED_Display_0.96inch.md",sourceDirName:"Sensor/Grove/Grove_Accessories/Display",slug:"/Sensor/Grove/Grove_Accessories/Display/Grove-OLED_Display_0.96inch",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Accessories/Display/Grove-OLED_Display_0.96inch",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Sensor/Grove/Grove_Accessories/Display/Grove-OLED_Display_0.96inch.md",tags:[],version:"current",lastUpdatedBy:"shuxu hu",lastUpdatedAt:1673222400,formattedLastUpdatedAt:"2023\u5e741\u67089\u65e5",frontMatter:{description:"Grove - OLED Display 0.96 inch",title:"Grove - OLED Display 0.96 inch",keywords:["Grove"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/9/2023",author:"shuxu hu"}},sidebar:"ProductSidebar",previous:{title:'Grove - OLED Display 0.66" (SSD1306)',permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Accessories/Display/Grove-OLED-Display-0.66-SSD1306_v1.0"},next:{title:'Grove - OLED Display 0.96" (SSD1315)',permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Accessories/Display/Grove-OLED-Display-0.96-SSD1315"}},o={},s=[{value:"Version",id:"version",level:2},{value:"Features",id:"features",level:2},{value:"Specifications",id:"specifications",level:2},{value:"Platforms Supported",id:"platforms-supported",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Play With Arduino",id:"play-with-arduino",level:3},{value:"Demonstration",id:"demonstration",level:4},{value:"Hardware",id:"hardware",level:4},{value:"Software",id:"software",level:4},{value:"Play With Raspberry Pi (With Grove Base Hat for Raspberry Pi)",id:"play-with-raspberry-pi-with-grove-base-hat-for-raspberry-pi",level:3},{value:"Hardware",id:"hardware-1",level:4},{value:"Software",id:"software-1",level:4},{value:"Play With Raspberry Pi (with GrovePi_Plus)",id:"play-with-raspberry-pi-with-grovepi_plus",level:3},{value:"Hardware",id:"hardware-2",level:4},{value:"Software",id:"software-2",level:4},{value:"Play With Beaglebone Green",id:"play-with-beaglebone-green",level:3},{value:"Hardware",id:"hardware-3",level:4},{value:"Software",id:"software-3",level:4},{value:"Schematic Online Viewer",id:"schematic-online-viewer",level:2},{value:"Resources",id:"resources",level:2},{value:"Tech Support",id:"tech-support",level:2}],p={toc:s};function d(e){let{components:x,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:x,mdxType:"MDXLayout"}),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/images/Grove-OLED-0.96.png",alt:"pir",width:600,height:"auto"})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},'Grove - OLED Display 0.96"')," module is an OLED monochrome 128\xd764dot matrix display module with Grove 4pin I2C Interface.Comparing to LCD, OLED screens are more competitive, which has a number of advantages such as high brightness, self-emission, high contrast ratio, slim / thin outline, wide viewing angle, wide temperature range, and low power consumption. It has bigger screen so that it can display more contents than the OLED 96\xd796."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/item_detail.html?p_id=781"},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/common/Get_One_Now_Banner.png",alt:"pir",width:600,height:"auto"})))),(0,a.kt)("h2",{id:"version"},"Version"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Product Version"),(0,a.kt)("th",{parentName:"tr",align:null},"Changes"),(0,a.kt)("th",{parentName:"tr",align:null},"Released Date"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Grove - OLED Display 0.96 inch V1.1"),(0,a.kt)("td",{parentName:"tr",align:null},"Initial"),(0,a.kt)("td",{parentName:"tr",align:null},"Oct 2015")))),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Grove compatible interface"),(0,a.kt)("li",{parentName:"ul"},"Communicate Mode:I2C"),(0,a.kt)("li",{parentName:"ul"},"Low power consumption"),(0,a.kt)("li",{parentName:"ul"},"Display Color: White"),(0,a.kt)("li",{parentName:"ul"},"Wide range of operating temperature:-20\u2103~70\u2103"),(0,a.kt)("li",{parentName:"ul"},"I2C Address 0x3C")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"If you want to use multiplue I2C devices, please refer to [Software I2C](https://wiki.seeedstudio.com/Arduino_Software_I2C_user_guide/).\n"))),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"Please notice: heavy impact or stress on the OLED will cause the breakdown of screen.\n"))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"More details about Grove modules please refer to [Grove System](https://wiki.seeedstudio.com/Grove_System/)\n"))),(0,a.kt)("h2",{id:"specifications"},"Specifications"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Items"),(0,a.kt)("th",{parentName:"tr",align:null},"Min"),(0,a.kt)("th",{parentName:"tr",align:null},"Norm"),(0,a.kt)("th",{parentName:"tr",align:null},"Max"),(0,a.kt)("th",{parentName:"tr",align:null},"Unit"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Power Voltage (VCC)"),(0,a.kt)("td",{parentName:"tr",align:null},"3.3"),(0,a.kt)("td",{parentName:"tr",align:null},"5.0"),(0,a.kt)("td",{parentName:"tr",align:null},"5.5"),(0,a.kt)("td",{parentName:"tr",align:null},"V")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Driver IC"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"SSD1308Z"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Display Color"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"White"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Dot Matrix"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"128\xd764"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"-")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Panel Size"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"26.7(W)\xd719.26(H)"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"mm")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Active Area"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"21.74(W)\xd711.175 (H)"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"mm")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Dot Pitch"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"0.17(W)\xd70.175 (H)"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"mm")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Dot Size"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"0.15(W)\xd70.15 (H)"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"mm")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Wide range of operating temperature"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"-20~70"),(0,a.kt)("td",{parentName:"tr",align:null},"-"),(0,a.kt)("td",{parentName:"tr",align:null},"\u2103")))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"More details about Grove modules please refer to [Grove System](https://wiki.seeedstudio.com/Grove_System/)\n"))),(0,a.kt)("h2",{id:"platforms-supported"},"Platforms Supported"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Arduino"),(0,a.kt)("th",{parentName:"tr",align:null},"Raspberry Pi"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/arduino_logo.jpg",alt:"pir",width:200,height:"auto"}))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/raspberry_pi_logo_n.jpg",alt:"pir",width:200,height:"auto"})))))),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"The platforms mentioned above as supported is/are an indication of the module's software or theoritical compatibility. We only provide software library or code examples for Arduino platform in most cases. It is not possible to provide software library / demo code for all possible MCU platforms. Hence, users have to write their own software library.\n"))),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"If this is the first time you work with Arduino, we firmly recommend you to see [Getting Started with Arduino](https://wiki.seeedstudio.com/Getting_Started_with_Arduino/) before the start.\n"))),(0,a.kt)("h3",{id:"play-with-arduino"},"Play With Arduino"),(0,a.kt)("h4",{id:"demonstration"},"Demonstration"),(0,a.kt)("p",null,"The OLED128*64 uses all the pins of SSD1308 chip, the default original point is on the top left corner. You can also change the original point by adjusting the program and in order to display your desired patterns. For more details, please refer ",(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/resource/SSD1308_1.0.pdf"},"SSD1308_1.0.pdf")," and ",(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/resource/LY190-128064.pdf"},"LY190-128064.pdf"),"."),(0,a.kt)("h4",{id:"hardware"},"Hardware"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Seeeduino V4"),(0,a.kt)("th",{parentName:"tr",align:null},"Base Shield"),(0,a.kt)("th",{parentName:"tr",align:null},"Grove - OLED Display 0.96inch"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_Light_Sensor/images/gs_1.jpg",alt:"pir",width:600,height:"auto"}))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_Light_Sensor/images/gs_4.jpg",alt:"pir",width:600,height:"auto"}))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/images/grove%20oled%200.96_s.jpg",alt:"pir",width:600,height:"auto"})))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Seeeduino-V4.2-p-2517.html"},"Get ONE Now")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Base-Shield-V2-p-1378.html"},"Get ONE Now")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-OLED-Display-0.96%26quot%3B-p-781.html"},"Get ONE Now"))))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2.")," Plug the Grove OLED Display 128*64 onto the I2C port on Grove Base Shield."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3.")," Plug Grove - Base Shield into Seeeduino."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 4.")," Connect Seeeduino to PC via a USB cable.")),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/images/with_ardu.jpg",alt:"pir",width:600,height:"auto"})),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"If we don't have Grove Base Shield, We also can directly connect Grove - OLED Display 0.96 inch to Seeeduino as below.\n"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Seeeduino"),(0,a.kt)("th",{parentName:"tr",align:null},"Grove - OLED Display 0.96 inch"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"5V"),(0,a.kt)("td",{parentName:"tr",align:null},"Red")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"GND"),(0,a.kt)("td",{parentName:"tr",align:null},"Black")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SDA"),(0,a.kt)("td",{parentName:"tr",align:null},"White")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"SCL"),(0,a.kt)("td",{parentName:"tr",align:null},"Yellow")))),(0,a.kt)("h4",{id:"software"},"Software"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1.")," Download the  ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/olikraus/u8g2"},"U8G2 128*64 library"),"  from Github."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2.")," Refer ",(0,a.kt)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library"},"How to install library")," to install library for Arduino."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3.")," Copy the code into Arduino IDE and upload. If you do not know how to upload the code, please check ",(0,a.kt)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/Upload_Code/"},"how to upload code"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-CPP"},'#include <Arduino.h>\n#include <U8g2lib.h>\n \n#ifdef U8X8_HAVE_HW_SPI\n#include <SPI.h>\n#endif\n#ifdef U8X8_HAVE_HW_I2C\n#include <Wire.h>\n#endif\n \nU8G2_SSD1306_128X64_ALT0_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE); // SSD1306 and SSD1308Z are compatible\n \n// U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);    //Low spped I2C\n \nvoid setup(void) {\n  u8g2.begin();\n}\n \nvoid loop(void) {\n  u8g2.clearBuffer();                   // clear the internal memory\n  u8g2.setFont(u8g2_font_ncenB08_tr);   // choose a suitable font\n  u8g2.drawStr(0,10,"Hello World!");    // write something to the internal memory\n  u8g2.sendBuffer();                    // transfer internal memory to the display\n  delay(1000);  \n}\n\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3."),' We can see "Hello World!" on screen.')),(0,a.kt)("h3",{id:"play-with-raspberry-pi-with-grove-base-hat-for-raspberry-pi"},"Play With Raspberry Pi (With Grove Base Hat for Raspberry Pi)"),(0,a.kt)("h4",{id:"hardware-1"},"Hardware"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1"),". Things used in this project:")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Raspberry pi"),(0,a.kt)("th",{parentName:"tr",align:null},"Grove Base Hat for RasPi"),(0,a.kt)("th",{parentName:"tr",align:null},"Grove - OLED Display 0.96 inch"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/rasp.jpg",alt:"pir",width:600,height:"auto"}))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_Base_Hat_for_Raspberry_Pi/img/thumbnail.jpg",alt:"pir",width:600,height:"auto"}))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/images/grove%20oled%200.96_s.jpg",alt:"pir",width:600,height:"auto"})))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-3-Model-B-p-2625.html"},"Get ONE Now")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Base-Hat-for-Raspberry-Pi-p-3186.html"},"Get ONE Now")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-OLED-Display-0.96%26quot%3B-p-781.html"},"Get ONE Now"))))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2"),". Plug the Grove Base Hat into Raspberry."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3"),". Connect the OLED display to the ",(0,a.kt)("strong",{parentName:"li"},"I^2^C")," port of the Base Hat."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 4"),". Connect the Raspberry Pi to PC through USB cable.",(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_Base_Hat_for_Raspberry_Pi/img/connect4.jpg",alt:"pir",width:600,height:"auto"})))),(0,a.kt)("h4",{id:"software-1"},"Software"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"}," If you are using **Raspberry Pi with Raspberrypi OS >= Bullseye**, you have to use this command line **only with Python3**.\n"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1"),". Follow ",(0,a.kt)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/Grove_Base_Hat_for_Raspberry_Pi/#installation"},"Setting Software")," to configure the development environment."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2"),". Download the source file by cloning the grove.py library. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd ~\ngit clone https://github.com/Seeed-Studio/grove.py\n\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3"),". Excute below command to run the code.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd grove.py/grove\npython3 grove_oled_display_128x64.py\n")),(0,a.kt)("p",null,"Following is the grove_oled_display_128x64.py code."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"\nimport time\n\nfrom grove.i2c import Bus\n\n_COMMAND_MODE = 0x80\n_DATA_MODE = 0x40\n_NORMAL_DISPLAY = 0xA6\n\n_DISPLAY_OFF = 0xAE\n_DISPLAY_ON = 0xAF\n_INVERSE_DISPLAY = 0xA7\n_SET_BRIGHTNESS = 0x81\n\n\nBasicFont = [[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00],\n             [0x00, 0x14, 0x7F, 0x14, 0x7F, 0x14, 0x00, 0x00],\n             [0x00, 0x24, 0x2A, 0x7F, 0x2A, 0x12, 0x00, 0x00],\n             [0x00, 0x23, 0x13, 0x08, 0x64, 0x62, 0x00, 0x00],\n             [0x00, 0x36, 0x49, 0x55, 0x22, 0x50, 0x00, 0x00],\n             [0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x1C, 0x22, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x22, 0x1C, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x2A, 0x1C, 0x2A, 0x08, 0x00, 0x00],\n             [0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00],\n             [0x00, 0xA0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00],\n             [0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00],\n             [0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00, 0x00],\n             [0x00, 0x00, 0x42, 0x7F, 0x40, 0x00, 0x00, 0x00],\n             [0x00, 0x62, 0x51, 0x49, 0x49, 0x46, 0x00, 0x00],\n             [0x00, 0x22, 0x41, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x18, 0x14, 0x12, 0x7F, 0x10, 0x00, 0x00],\n             [0x00, 0x27, 0x45, 0x45, 0x45, 0x39, 0x00, 0x00],\n             [0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00, 0x00],\n             [0x00, 0x01, 0x71, 0x09, 0x05, 0x03, 0x00, 0x00],\n             [0x00, 0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x06, 0x49, 0x49, 0x29, 0x1E, 0x00, 0x00],\n             [0x00, 0x00, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0xAC, 0x6C, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00, 0x00],\n             [0x00, 0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00],\n             [0x00, 0x41, 0x22, 0x14, 0x08, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x01, 0x51, 0x09, 0x06, 0x00, 0x00],\n             [0x00, 0x32, 0x49, 0x79, 0x41, 0x3E, 0x00, 0x00],\n             [0x00, 0x7E, 0x09, 0x09, 0x09, 0x7E, 0x00, 0x00],\n             [0x00, 0x7F, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x41, 0x22, 0x00, 0x00],\n             [0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C, 0x00, 0x00],\n             [0x00, 0x7F, 0x49, 0x49, 0x49, 0x41, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x09, 0x09, 0x01, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x51, 0x72, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00, 0x00],\n             [0x00, 0x41, 0x7F, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x40, 0x41, 0x3F, 0x01, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00],\n             [0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00],\n             [0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F, 0x00, 0x00],\n             [0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x09, 0x09, 0x06, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x19, 0x29, 0x46, 0x00, 0x00],\n             [0x00, 0x26, 0x49, 0x49, 0x49, 0x32, 0x00, 0x00],\n             [0x00, 0x01, 0x01, 0x7F, 0x01, 0x01, 0x00, 0x00],\n             [0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00, 0x00],\n             [0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00, 0x00],\n             [0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00, 0x00],\n             [0x00, 0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 0x00],\n             [0x00, 0x03, 0x04, 0x78, 0x04, 0x03, 0x00, 0x00],\n             [0x00, 0x61, 0x51, 0x49, 0x45, 0x43, 0x00, 0x00],\n             [0x00, 0x7F, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00],\n             [0x00, 0x41, 0x41, 0x7F, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00],\n             [0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00],\n             [0x00, 0x01, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x54, 0x54, 0x54, 0x78, 0x00, 0x00],\n             [0x00, 0x7F, 0x48, 0x44, 0x44, 0x38, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x28, 0x00, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x48, 0x7F, 0x00, 0x00],\n             [0x00, 0x38, 0x54, 0x54, 0x54, 0x18, 0x00, 0x00],\n             [0x00, 0x08, 0x7E, 0x09, 0x02, 0x00, 0x00, 0x00],\n             [0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x04, 0x04, 0x78, 0x00, 0x00],\n             [0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x80, 0x84, 0x7D, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x7F, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x7F, 0x40, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x7C, 0x04, 0x18, 0x04, 0x78, 0x00, 0x00],\n             [0x00, 0x7C, 0x08, 0x04, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00],\n             [0x00, 0xFC, 0x24, 0x24, 0x18, 0x00, 0x00, 0x00],\n             [0x00, 0x18, 0x24, 0x24, 0xFC, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x7C, 0x08, 0x04, 0x00, 0x00, 0x00],\n             [0x00, 0x48, 0x54, 0x54, 0x24, 0x00, 0x00, 0x00],\n             [0x00, 0x04, 0x7F, 0x44, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x3C, 0x40, 0x40, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00, 0x00],\n             [0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00, 0x00],\n             [0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x00],\n             [0x00, 0x1C, 0xA0, 0xA0, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x44, 0x64, 0x54, 0x4C, 0x44, 0x00, 0x00],\n             [0x00, 0x08, 0x36, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x36, 0x08, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x01, 0x01, 0x02, 0x01, 0x00, 0x00],\n             [0x00, 0x02, 0x05, 0x05, 0x02, 0x00, 0x00, 0x00]]\n\n\nclass GroveOledDisplay128x64(object):\n    HORIZONTAL = 0x00\n    VERTICAL = 0x01\n    PAGE = 0x02\n\n    def __init__(self, bus=None, address=0x3C):\n        self.bus = Bus(bus)\n        self.address = address\n\n        self.off()\n        self.inverse = False\n        self.mode = self.HORIZONTAL\n\n        self.clear()\n        self.on()\n\n    def on(self):\n        self.send_command(_DISPLAY_ON)\n\n    def off(self):\n        self.send_command(_DISPLAY_OFF)\n\n    def send_command(self, command):\n        self.bus.write_byte_data(self.address, _COMMAND_MODE, command)\n\n    def send_data(self, data):\n        self.bus.write_byte_data(self.address, _DATA_MODE, data)\n\n    def send_commands(self, commands):\n        for c in commands:\n            self.send_command(c)\n\n    def clear(self):\n        self.off()\n        for i in range(8):\n            self.set_cursor(i, 0)\n            self.puts(' ' * 16)\n\n        self.on()\n        self.set_cursor(0, 0)\n\n    @property\n    def inverse(self):\n        return self._inverse\n\n    @inverse.setter\n    def inverse(self, enable):\n        self.send_command(_INVERSE_DISPLAY if enable else _NORMAL_DISPLAY)\n        self._inverse = enable\n\n    @property\n    def mode(self):\n        return self._mode\n\n    @mode.setter\n    def mode(self, mode):\n        self.send_command(0x20)\n        self.send_command(mode)\n        self._mode = mode\n\n    def set_cursor(self, row, column):\n        self.send_command(0xB0 + row)\n        self.send_command(0x00 + (8*column & 0x0F))\n        self.send_command(0x10 + ((8*column>>4)&0x0F))\n\n    def putc(self, c):\n        C_add = ord(c)\n        if C_add < 32 or C_add > 127:     # Ignore non-printable ASCII characters\n            c = ' '\n            C_add = ord(c)\n\n        for i in range(0, 8):\n            self.send_data(BasicFont[C_add-32][i])\n\n    def puts(self, text):\n        for c in text:\n            self.putc(c)\n\n    def show_image(self, image):\n        from PIL import Image\n        import numpy as np\n        \n        im = Image.open(image)\n\n        bw = im.convert('1')\n        pixels = np.array(bw.getdata())\n        page_size = 128 * 8\n\n        self.set_cursor(0, 0)\n        for page in range(8):\n            start = page_size * page\n            end = start + page_size\n\n            for i in range(start, start + 128):\n                data = np.packbits(pixels[i:end:128][::-1])[0]\n                self.send_data(data)\n\n\ndef main():\n    display = GroveOledDisplay128x64()\n\n    display.set_cursor(0, 0)\n    display.puts('hello')\n    display.set_cursor(1, 4)\n    display.puts('world')\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n")),(0,a.kt)("p",null,"It seems nothing happened in terminal, however you can find the most famous sentence in the cyber world if you check your oled.\ud83d\ude04"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"    If you use the I2C tool to scan the I2C address of the grove module, you may find two or more address. 0x04 is the adrress of the *Grove Base Hat for Raspberry Pi*.\n"))),(0,a.kt)("h3",{id:"play-with-raspberry-pi-with-grovepi_plus"},"Play With Raspberry Pi (with GrovePi_Plus)"),(0,a.kt)("p",null,"The python script for BeagleBone Green below also works for Raspberry Pi, But the I2C bus is different. On Raspberry Pi 2/3, the I2C bus is 1. The script with changing ",(0,a.kt)("inlineCode",{parentName:"p"},"bus=2")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"bus=1")," will  work on Pi."),(0,a.kt)("h4",{id:"hardware-2"},"Hardware"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Raspberry pi"),(0,a.kt)("th",{parentName:"tr",align:null},"GrovePi_Plus"),(0,a.kt)("th",{parentName:"tr",align:null},"Grove - OLED Display 0.96 inch"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/rasp.jpg",alt:"pir",width:600,height:"auto"}))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/Grovepi%2B.jpg",alt:"pir",width:600,height:"auto"}))),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("p",null,(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/images/grove%20oled%200.96_s.jpg",alt:"pir",width:600,height:"auto"})))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Seeeduino-V4.2-p-2517.html"},"Get One Now")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Base-Shield-V2-p-1378.html"},"Get One Now")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-OLED-Display-0.96%26quot%3B-p-781.html"},"Get One Now"))))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2.")," Plug the GrovePi_Plus into Raspberry."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3.")," Connect Grove - OLED Display 0.96 inch ranger to ",(0,a.kt)("strong",{parentName:"li"},"I2C-2")," port of GrovePi_Plus."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 4.")," Connect the Raspberry to PC through USB cable.")),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/images/with_rpi.jpg",alt:"pir",width:600,height:"auto"})),(0,a.kt)("h4",{id:"software-2"},"Software"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 1.")," Follow ",(0,a.kt)("a",{parentName:"p",href:"https://www.dexterindustries.com/GrovePi/get-started-with-the-grovepi/setting-software/"},"Setting Software")," to configure the development environment.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 2.")," Navigate to the demos' directory:"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd yourpath/GrovePi/Software/Python/\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3."),"  To see the code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'nano Grove-OLED_Display_0.96inch.py   # "Ctrl+x" to exit #\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"import time\nimport smbus2 as smbus\n\n_COMMAND_MODE = 0x80\n_DATA_MODE = 0x40\n_NORMAL_DISPLAY = 0xA6\n\n_DISPLAY_OFF = 0xAE\n_DISPLAY_ON = 0xAF\n_INVERSE_DISPLAY = 0xA7\n_SET_BRIGHTNESS = 0x81\n\n\nBasicFont = [[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00],\n             [0x00, 0x14, 0x7F, 0x14, 0x7F, 0x14, 0x00, 0x00],\n             [0x00, 0x24, 0x2A, 0x7F, 0x2A, 0x12, 0x00, 0x00],\n             [0x00, 0x23, 0x13, 0x08, 0x64, 0x62, 0x00, 0x00],\n             [0x00, 0x36, 0x49, 0x55, 0x22, 0x50, 0x00, 0x00],\n             [0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x1C, 0x22, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x22, 0x1C, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x2A, 0x1C, 0x2A, 0x08, 0x00, 0x00],\n             [0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00],\n             [0x00, 0xA0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00],\n             [0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00],\n             [0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00, 0x00],\n             [0x00, 0x00, 0x42, 0x7F, 0x40, 0x00, 0x00, 0x00],\n             [0x00, 0x62, 0x51, 0x49, 0x49, 0x46, 0x00, 0x00],\n             [0x00, 0x22, 0x41, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x18, 0x14, 0x12, 0x7F, 0x10, 0x00, 0x00],\n             [0x00, 0x27, 0x45, 0x45, 0x45, 0x39, 0x00, 0x00],\n             [0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00, 0x00],\n             [0x00, 0x01, 0x71, 0x09, 0x05, 0x03, 0x00, 0x00],\n             [0x00, 0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x06, 0x49, 0x49, 0x29, 0x1E, 0x00, 0x00],\n             [0x00, 0x00, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0xAC, 0x6C, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00, 0x00],\n             [0x00, 0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00],\n             [0x00, 0x41, 0x22, 0x14, 0x08, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x01, 0x51, 0x09, 0x06, 0x00, 0x00],\n             [0x00, 0x32, 0x49, 0x79, 0x41, 0x3E, 0x00, 0x00],\n             [0x00, 0x7E, 0x09, 0x09, 0x09, 0x7E, 0x00, 0x00],\n             [0x00, 0x7F, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x41, 0x22, 0x00, 0x00],\n             [0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C, 0x00, 0x00],\n             [0x00, 0x7F, 0x49, 0x49, 0x49, 0x41, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x09, 0x09, 0x01, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x51, 0x72, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00, 0x00],\n             [0x00, 0x41, 0x7F, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x40, 0x41, 0x3F, 0x01, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00],\n             [0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00],\n             [0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F, 0x00, 0x00],\n             [0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x09, 0x09, 0x06, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x19, 0x29, 0x46, 0x00, 0x00],\n             [0x00, 0x26, 0x49, 0x49, 0x49, 0x32, 0x00, 0x00],\n             [0x00, 0x01, 0x01, 0x7F, 0x01, 0x01, 0x00, 0x00],\n             [0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00, 0x00],\n             [0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00, 0x00],\n             [0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00, 0x00],\n             [0x00, 0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 0x00],\n             [0x00, 0x03, 0x04, 0x78, 0x04, 0x03, 0x00, 0x00],\n             [0x00, 0x61, 0x51, 0x49, 0x45, 0x43, 0x00, 0x00],\n             [0x00, 0x7F, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00],\n             [0x00, 0x41, 0x41, 0x7F, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00],\n             [0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00],\n             [0x00, 0x01, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x54, 0x54, 0x54, 0x78, 0x00, 0x00],\n             [0x00, 0x7F, 0x48, 0x44, 0x44, 0x38, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x28, 0x00, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x48, 0x7F, 0x00, 0x00],\n             [0x00, 0x38, 0x54, 0x54, 0x54, 0x18, 0x00, 0x00],\n             [0x00, 0x08, 0x7E, 0x09, 0x02, 0x00, 0x00, 0x00],\n             [0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x04, 0x04, 0x78, 0x00, 0x00],\n             [0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x80, 0x84, 0x7D, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x7F, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x7F, 0x40, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x7C, 0x04, 0x18, 0x04, 0x78, 0x00, 0x00],\n             [0x00, 0x7C, 0x08, 0x04, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00],\n             [0x00, 0xFC, 0x24, 0x24, 0x18, 0x00, 0x00, 0x00],\n             [0x00, 0x18, 0x24, 0x24, 0xFC, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x7C, 0x08, 0x04, 0x00, 0x00, 0x00],\n             [0x00, 0x48, 0x54, 0x54, 0x24, 0x00, 0x00, 0x00],\n             [0x00, 0x04, 0x7F, 0x44, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x3C, 0x40, 0x40, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00, 0x00],\n             [0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00, 0x00],\n             [0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x00],\n             [0x00, 0x1C, 0xA0, 0xA0, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x44, 0x64, 0x54, 0x4C, 0x44, 0x00, 0x00],\n             [0x00, 0x08, 0x36, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x36, 0x08, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x01, 0x01, 0x02, 0x01, 0x00, 0x00],\n             [0x00, 0x02, 0x05, 0x05, 0x02, 0x00, 0x00, 0x00]]\n\n\nclass GroveOledDisplay128x64(object):\n    HORIZONTAL = 0x00\n    VERTICAL = 0x01\n    PAGE = 0x02\n\n    def __init__(self, bus=2, address=0x3C):\n        self.bus = smbus.SMBus(bus)\n        self.address = address\n\n        self.off()\n        self.inverse = False\n        self.mode = self.HORIZONTAL\n\n        self.clear()\n        self.on()\n\n    def on(self):\n        self.send_command(_DISPLAY_ON)\n\n    def off(self):\n        self.send_command(_DISPLAY_OFF)\n\n    def send_command(self, command):\n        self.bus.write_byte_data(self.address, _COMMAND_MODE, command)\n\n    def send_data(self, data):\n        self.bus.write_byte_data(self.address, _DATA_MODE, data)\n\n    def send_commands(self, commands):\n        for c in commands:\n            self.send_command(c)\n\n    def clear(self):\n        self.off()\n        for i in range(8):\n            self.set_cursor(i, 0)\n            self.puts(' ' * 16)\n\n        self.on()\n        self.set_cursor(0, 0)\n\n    @property\n    def inverse(self):\n        return self._inverse\n\n    @inverse.setter\n    def inverse(self, enable):\n        self.send_command(_INVERSE_DISPLAY if enable else _NORMAL_DISPLAY)\n        self._inverse = enable\n\n    @property\n    def mode(self):\n        return self._mode\n\n    @mode.setter\n    def mode(self, mode):\n        self.send_command(0x20)\n        self.send_command(mode)\n        self._mode = mode\n\n    def set_cursor(self, row, column):\n        self.send_command(0xB0 + row)\n        self.send_command(0x00 + (8*column & 0x0F))\n        self.send_command(0x10 + ((8*column>>4)&0x0F))\n\n    def putc(self, c):\n        C_add = ord(c)\n        if C_add < 32 or C_add > 127:     # Ignore non-printable ASCII characters\n            c = ' '\n            C_add = ord(c)\n\n        for i in range(0, 8):\n            self.send_data(BasicFont[C_add-32][i])\n\n    def puts(self, text):\n        for c in text:\n            self.putc(c)\n\n    def show_image(self, image):\n        from PIL import Image\n        import numpy as np\n        \n        im = Image.open(image)\n\n        bw = im.convert('1')\n        pixels = np.array(bw.getdata())\n        page_size = 128 * 8\n\n        self.set_cursor(0, 0)\n        for page in range(8):\n            start = page_size * page\n            end = start + page_size\n\n            for i in range(start, start + 128):\n                data = np.packbits(pixels[i:end:128][::-1])[0]\n                self.send_data(data)\n\n\nif __name__ == \"__main__\":\n    display = GroveOledDisplay128x64(bus=1)\n\n    display.set_cursor(0, 0)\n    display.puts('hello')\n    display.set_cursor(1, 4)\n    display.puts('world')\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 4:")," Install smbus2 library ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo pip install smbus2"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 5:"),' Run the code. We\'ll find that the Grove - OLED outputs "Hello World".'))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo python Grove-OLED_Display_0.96inch.py\n")),(0,a.kt)("h3",{id:"play-with-beaglebone-green"},"Play With Beaglebone Green"),(0,a.kt)("p",null,"To begin editing programs that live on BBG, you can use the ",(0,a.kt)("a",{parentName:"p",href:"https://c9.io"},"Cloud9 IDE")," and refer ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/BeagleBone_Green/"},"Beaglebone Green Wiki"),"."),(0,a.kt)("p",null,'Here are the steps how to display "Hello World" on OLED.'),(0,a.kt)("h4",{id:"hardware-3"},"Hardware"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1.")," Connect Grove - OLED to Grove I2C socket on BBG."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2.")," Connect Seeeduino to PC via a USB cable.")),(0,a.kt)("h4",{id:"software-3"},"Software"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1:"),' Click the "+" in the top-right to create a new file.')),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/images/C9-create-tab.png",alt:"pir",width:600,height:"auto"})),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/images/C9_newfile.jpg",alt:"pir",width:600,height:"auto"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2:")," Copy and paste the following code into the new tab")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import time\nimport smbus2 as smbus\n\n_COMMAND_MODE = 0x80\n_DATA_MODE = 0x40\n_NORMAL_DISPLAY = 0xA6\n\n_DISPLAY_OFF = 0xAE\n_DISPLAY_ON = 0xAF\n_INVERSE_DISPLAY = 0xA7\n_SET_BRIGHTNESS = 0x81\n\n\nBasicFont = [[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00],\n             [0x00, 0x14, 0x7F, 0x14, 0x7F, 0x14, 0x00, 0x00],\n             [0x00, 0x24, 0x2A, 0x7F, 0x2A, 0x12, 0x00, 0x00],\n             [0x00, 0x23, 0x13, 0x08, 0x64, 0x62, 0x00, 0x00],\n             [0x00, 0x36, 0x49, 0x55, 0x22, 0x50, 0x00, 0x00],\n             [0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x1C, 0x22, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x22, 0x1C, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x2A, 0x1C, 0x2A, 0x08, 0x00, 0x00],\n             [0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00],\n             [0x00, 0xA0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00],\n             [0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00],\n             [0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00, 0x00],\n             [0x00, 0x00, 0x42, 0x7F, 0x40, 0x00, 0x00, 0x00],\n             [0x00, 0x62, 0x51, 0x49, 0x49, 0x46, 0x00, 0x00],\n             [0x00, 0x22, 0x41, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x18, 0x14, 0x12, 0x7F, 0x10, 0x00, 0x00],\n             [0x00, 0x27, 0x45, 0x45, 0x45, 0x39, 0x00, 0x00],\n             [0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00, 0x00],\n             [0x00, 0x01, 0x71, 0x09, 0x05, 0x03, 0x00, 0x00],\n             [0x00, 0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x06, 0x49, 0x49, 0x29, 0x1E, 0x00, 0x00],\n             [0x00, 0x00, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0xAC, 0x6C, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00, 0x00],\n             [0x00, 0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00],\n             [0x00, 0x41, 0x22, 0x14, 0x08, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x01, 0x51, 0x09, 0x06, 0x00, 0x00],\n             [0x00, 0x32, 0x49, 0x79, 0x41, 0x3E, 0x00, 0x00],\n             [0x00, 0x7E, 0x09, 0x09, 0x09, 0x7E, 0x00, 0x00],\n             [0x00, 0x7F, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x41, 0x22, 0x00, 0x00],\n             [0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C, 0x00, 0x00],\n             [0x00, 0x7F, 0x49, 0x49, 0x49, 0x41, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x09, 0x09, 0x01, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x51, 0x72, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00, 0x00],\n             [0x00, 0x41, 0x7F, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x40, 0x41, 0x3F, 0x01, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00],\n             [0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00],\n             [0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F, 0x00, 0x00],\n             [0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x09, 0x09, 0x06, 0x00, 0x00],\n             [0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00, 0x00],\n             [0x00, 0x7F, 0x09, 0x19, 0x29, 0x46, 0x00, 0x00],\n             [0x00, 0x26, 0x49, 0x49, 0x49, 0x32, 0x00, 0x00],\n             [0x00, 0x01, 0x01, 0x7F, 0x01, 0x01, 0x00, 0x00],\n             [0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00, 0x00],\n             [0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00, 0x00],\n             [0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00, 0x00],\n             [0x00, 0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 0x00],\n             [0x00, 0x03, 0x04, 0x78, 0x04, 0x03, 0x00, 0x00],\n             [0x00, 0x61, 0x51, 0x49, 0x45, 0x43, 0x00, 0x00],\n             [0x00, 0x7F, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00],\n             [0x00, 0x41, 0x41, 0x7F, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00],\n             [0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00],\n             [0x00, 0x01, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x20, 0x54, 0x54, 0x54, 0x78, 0x00, 0x00],\n             [0x00, 0x7F, 0x48, 0x44, 0x44, 0x38, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x28, 0x00, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x48, 0x7F, 0x00, 0x00],\n             [0x00, 0x38, 0x54, 0x54, 0x54, 0x18, 0x00, 0x00],\n             [0x00, 0x08, 0x7E, 0x09, 0x02, 0x00, 0x00, 0x00],\n             [0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C, 0x00, 0x00],\n             [0x00, 0x7F, 0x08, 0x04, 0x04, 0x78, 0x00, 0x00],\n             [0x00, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x80, 0x84, 0x7D, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x7F, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x7F, 0x40, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x7C, 0x04, 0x18, 0x04, 0x78, 0x00, 0x00],\n             [0x00, 0x7C, 0x08, 0x04, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x38, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00],\n             [0x00, 0xFC, 0x24, 0x24, 0x18, 0x00, 0x00, 0x00],\n             [0x00, 0x18, 0x24, 0x24, 0xFC, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x7C, 0x08, 0x04, 0x00, 0x00, 0x00],\n             [0x00, 0x48, 0x54, 0x54, 0x24, 0x00, 0x00, 0x00],\n             [0x00, 0x04, 0x7F, 0x44, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x3C, 0x40, 0x40, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00, 0x00],\n             [0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00, 0x00],\n             [0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x00],\n             [0x00, 0x1C, 0xA0, 0xA0, 0x7C, 0x00, 0x00, 0x00],\n             [0x00, 0x44, 0x64, 0x54, 0x4C, 0x44, 0x00, 0x00],\n             [0x00, 0x08, 0x36, 0x41, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x41, 0x36, 0x08, 0x00, 0x00, 0x00, 0x00],\n             [0x00, 0x02, 0x01, 0x01, 0x02, 0x01, 0x00, 0x00],\n             [0x00, 0x02, 0x05, 0x05, 0x02, 0x00, 0x00, 0x00]]\n\n\nclass GroveOledDisplay128x64(object):\n    HORIZONTAL = 0x00\n    VERTICAL = 0x01\n    PAGE = 0x02\n\n    def __init__(self, bus=2, address=0x3C):\n        self.bus = smbus.SMBus(bus)\n        self.address = address\n\n        self.off()\n        self.inverse = False\n        self.mode = self.HORIZONTAL\n\n        self.clear()\n        self.on()\n\n    def on(self):\n        self.send_command(_DISPLAY_ON)\n\n    def off(self):\n        self.send_command(_DISPLAY_OFF)\n\n    def send_command(self, command):\n        self.bus.write_byte_data(self.address, _COMMAND_MODE, command)\n\n    def send_data(self, data):\n        self.bus.write_byte_data(self.address, _DATA_MODE, data)\n\n    def send_commands(self, commands):\n        for c in commands:\n            self.send_command(c)\n\n    def clear(self):\n        self.off()\n        for i in range(8):\n            self.set_cursor(i, 0)\n            self.puts(' ' * 16)\n\n        self.on()\n        self.set_cursor(0, 0)\n\n    @property\n    def inverse(self):\n        return self._inverse\n\n    @inverse.setter\n    def inverse(self, enable):\n        self.send_command(_INVERSE_DISPLAY if enable else _NORMAL_DISPLAY)\n        self._inverse = enable\n\n    @property\n    def mode(self):\n        return self._mode\n\n    @mode.setter\n    def mode(self, mode):\n        self.send_command(0x20)\n        self.send_command(mode)\n        self._mode = mode\n\n    def set_cursor(self, row, column):\n        self.send_command(0xB0 + row)\n        self.send_command(0x00 + (8*column & 0x0F))\n        self.send_command(0x10 + ((8*column>>4)&0x0F))\n\n    def putc(self, c):\n        C_add = ord(c)\n        if C_add < 32 or C_add > 127:     # Ignore non-printable ASCII characters\n            c = ' '\n            C_add = ord(c)\n\n        for i in range(0, 8):\n            self.send_data(BasicFont[C_add-32][i])\n\n    def puts(self, text):\n        for c in text:\n            self.putc(c)\n\n    def show_image(self, image):\n        from PIL import Image\n        import numpy as np\n        \n        im = Image.open(image)\n\n        bw = im.convert('1')\n        pixels = np.array(bw.getdata())\n        page_size = 128 * 8\n\n        self.set_cursor(0, 0)\n        for page in range(8):\n            start = page_size * page\n            end = start + page_size\n\n            for i in range(start, start + 128):\n                data = np.packbits(pixels[i:end:128][::-1])[0]\n                self.send_data(data)\n\n\nif __name__ == \"__main__\":\n    display = GroveOledDisplay128x64(bus=2)\n\n    display.set_cursor(0, 0)\n    display.puts('hello')\n    display.set_cursor(1, 4)\n    display.puts('world')\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 3:")," Save the file by clicking the disk icon with with the .py extension.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 4:")," Install smbus2 library ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo pip3 install smbus2"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 5:"),' Run the code. We\'ll find that the Grove - OLED outputs "Hello World".'))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo python3 Grove-OLED_Display_0.96inch.py\n")),(0,a.kt)("h2",{id:"schematic-online-viewer"},"Schematic Online Viewer"),(0,a.kt)("div",{className:"altium-ecad-viewer","data-project-src":"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/resource/OLED%20128x64.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"[PDF]")," ",(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/resource/OLED%20128x64%20SCH.pdf"},"Grove-OLED128x64 Schematic"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"[PDF]")," ",(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/resource/OLED%20128x64%20PCB.pdf"},"Grove-OLED128x64 PCB"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"[Wiki]")," ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/BeagleBone_Green/"},"Beaglebone Green Wiki"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"[Eagle]")," ",(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/resource/OLED%20128x64.zip"},"Grove-OLED128x64"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"[Library]")," ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/OLED_Display_128X64/archive/master.zip"},"GitHub Library for OLED"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"[Datasheet]")," ",(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/resource/SSD1308_1.0.pdf"},"Resources of SSD1308_1.0.pdf"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"[Datasheet]")," ",(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Grove_OLED_Display_0.96/resource/LY190-128064.pdf"},"Resources of LY190-128064.pdf")))),(0,a.kt)("h2",{id:"tech-support"},"Tech Support"),(0,a.kt)("p",null,"Please do not hesitate to submit the issue into our ",(0,a.kt)("a",{parentName:"p",href:"https://forum.seeedstudio.com/"},"forum"),"."),(0,a.kt)("br",null),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"}))))}d.isMDXComponent=!0}}]);