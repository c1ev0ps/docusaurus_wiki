"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[34975],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(a),h=r,k=u["".concat(l,".").concat(h)]||u[h]||m[h]||o;return a?n.createElement(k,i(i({ref:t},d),{},{components:a})):n.createElement(k,i({ref:t},d))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},67207:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={description:"Grove - Gas Sensor(MQ2)",title:"Grove - Gas Sensor(MQ2)",keywords:["Grove"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/3/2023",author:"shuxu hu"}},i=void 0,s={unversionedId:"Sensor/Grove/Grove_Sensors/Gas/Grove-Gas_Sensor-MQ2",id:"Sensor/Grove/Grove_Sensors/Gas/Grove-Gas_Sensor-MQ2",title:"Grove - Gas Sensor(MQ2)",description:"Grove - Gas Sensor(MQ2)",source:"@site/docs/Sensor/Grove/Grove_Sensors/Gas/Grove-Gas_Sensor-MQ2.md",sourceDirName:"Sensor/Grove/Grove_Sensors/Gas",slug:"/Sensor/Grove/Grove_Sensors/Gas/Grove-Gas_Sensor-MQ2",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Sensors/Gas/Grove-Gas_Sensor-MQ2",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Sensor/Grove/Grove_Sensors/Gas/Grove-Gas_Sensor-MQ2.md",tags:[],version:"current",lastUpdatedBy:"shuxu hu",lastUpdatedAt:1672704e3,formattedLastUpdatedAt:"2023\u5e741\u67083\u65e5",frontMatter:{description:"Grove - Gas Sensor(MQ2)",title:"Grove - Gas Sensor(MQ2)",keywords:["Grove"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/3/2023",author:"shuxu hu"}},sidebar:"ProductSidebar",previous:{title:"Grove - Gas Sensor V2(Multichannel)",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Sensors/Gas/Grove-Multichannel-Gas-Sensor-V2"},next:{title:"Grove - Gas Sensor(MQ3)",permalink:"/docusaurus_wiki/zh-CN/Sensor/Grove/Grove_Sensors/Gas/Grove-Gas_Sensor-MQ3"}},l={},p=[{value:"Features",id:"features",level:2},{value:"Specification",id:"specification",level:2},{value:"Platforms Supported",id:"platforms-supported",level:2},{value:"Application Ideas",id:"application-ideas",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Play with arduino",id:"play-with-arduino",level:3},{value:"Hardware",id:"hardware",level:4},{value:"Software",id:"software",level:4},{value:"Play With Raspberry Pi (With Grove Base Hat for Raspberry Pi)",id:"play-with-raspberry-pi-with-grove-base-hat-for-raspberry-pi",level:3},{value:"Hardware",id:"hardware-1",level:4},{value:"Software",id:"software-1",level:4},{value:"Play With Raspberry Pi (with GrovePi_Plus)",id:"play-with-raspberry-pi-with-grovepi_plus",level:3},{value:"Hardware",id:"hardware-2",level:4},{value:"Software",id:"software-2",level:4},{value:"Play With Wio Terminal (ArduPy)",id:"play-with-wio-terminal-ardupy",level:3},{value:"Hardware",id:"hardware-3",level:4},{value:"Software",id:"software-3",level:4},{value:"Play With Wio Terminal (ArduPy)",id:"play-with-wio-terminal-ardupy-1",level:3},{value:"Hardware",id:"hardware-4",level:4},{value:"Software",id:"software-4",level:4},{value:"Schematic Online Viewer",id:"schematic-online-viewer",level:2},{value:"Resources",id:"resources",level:2},{value:"Projects",id:"projects",level:2},{value:"Tech Support",id:"tech-support",level:2},{value:"Upgradable to Industrial Sensors",id:"upgradable-to-industrial-sensors",level:2}],d={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/Twig-Gas_Sensor.bmp",alt:"pir",width:600,height:"auto"})),(0,r.kt)("p",null,"The Grove - Gas Sensor(MQ2) module is useful for gas leakage detection (home and industry). It is suitable for detecting H2, LPG, CH4, CO, Alcohol, Smoke or Propane. Due to its high sensitivity and fast response time, measurement can be taken as soon as possible. The sensitivity of the sensor can be adjusted by potentiometer."),(0,r.kt)("table",{align:"center"},(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("h4",null,"Sensor")),(0,r.kt)("td",null,(0,r.kt)("h4",null,"Gas Type")),(0,r.kt)("td",null,(0,r.kt)("h4",null,"Get One Now"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("a",{href:"https://wiki.seeedstudio.com/Grove-Gas_Sensor-MQ2/",target:"_blank"},(0,r.kt)("span",null,"MQ2"))),(0,r.kt)("td",null,"Combustible Gas, Smoke"),(0,r.kt)("td",null,(0,r.kt)("div",{class:"document"},(0,r.kt)("a",{href:"https://www.seeedstudio.com/Grove-Gas-Sensor(MQ2)-p-937.html",target:"_blank",rel:"noopener"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/300px-Get_One_Now_Banner-ragular.png",alt:"",width:200,height:"auto"}))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("a",{href:"https://wiki.seeedstudio.com/Grove-Gas_Sensor-MQ3/",target:"_blank"},(0,r.kt)("span",null,"MQ3"))),(0,r.kt)("td",null,"Alcohol Vapor"),(0,r.kt)("td",null,(0,r.kt)("div",{class:"document"},(0,r.kt)("a",{href:"https://www.seeedstudio.com/Grove-Gas-Sensor%28MQ3%29-p-1418.html",target:"_blank",rel:"noopener"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/300px-Get_One_Now_Banner-ragular.png",alt:"",width:200,height:"auto"}))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("a",{href:"https://wiki.seeedstudio.com/Grove-Gas_Sensor-MQ5/",target:"_blank"},(0,r.kt)("span",null,"MQ5"))),(0,r.kt)("td",null,"LPG, Natural Gas, Town Gas"),(0,r.kt)("td",null,(0,r.kt)("div",{class:"document"},(0,r.kt)("a",{href:"https://www.seeedstudio.com/Grove-Gas-Sensor%28MQ5%29-p-938.html",target:"_blank",rel:"noopener"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/300px-Get_One_Now_Banner-ragular.png",alt:"",width:200,height:"auto"}))))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("a",{href:"https://wiki.seeedstudio.com/Grove-Gas_Sensor-MQ9/",target:"_blank"},(0,r.kt)("span",null,"MQ9"))),(0,r.kt)("td",null,"Carbon Monoxide, Coal Gas, Liquefied Gas"),(0,r.kt)("td",null,(0,r.kt)("div",{class:"document"},(0,r.kt)("a",{href:"https://www.seeedstudio.com/Grove-Gas-Sensor%28MQ9%29-p-1419.html",target:"_blank",rel:"noopener"},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/300px-Get_One_Now_Banner-ragular.png",alt:"",width:200,height:"auto"}))))))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"We've released the [Seeed Gas Sensor Selection Guide](https://wiki.seeedstudio.com/Sensor_gas/), it will help you choose the gas sensor that best suits your needs.\n"))),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Wide detecting scope"),(0,r.kt)("li",{parentName:"ul"},"Stable and long lifetime"),(0,r.kt)("li",{parentName:"ul"},"Fast response and High sensitivity")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"More details about Grove modules please refer to [Grove System](https://wiki.seeedstudio.com/Grove_System/)\n"))),(0,r.kt)("h2",{id:"specification"},"Specification"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Item"),(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Min"),(0,r.kt)("th",{parentName:"tr",align:null},"Typical"),(0,r.kt)("th",{parentName:"tr",align:null},"Max"),(0,r.kt)("th",{parentName:"tr",align:null},"Unit"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VCC"),(0,r.kt)("td",{parentName:"tr",align:null},"Working Voltage"),(0,r.kt)("td",{parentName:"tr",align:null},"4.9"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"5.1"),(0,r.kt)("td",{parentName:"tr",align:null},"V")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PH"),(0,r.kt)("td",{parentName:"tr",align:null},"Heating consumption"),(0,r.kt)("td",{parentName:"tr",align:null},"0.5"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"800"),(0,r.kt)("td",{parentName:"tr",align:null},"mW")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RL"),(0,r.kt)("td",{parentName:"tr",align:null},"Load resistance"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"adjustable"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RH"),(0,r.kt)("td",{parentName:"tr",align:null},"Heater resistance"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"33"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"\u03a9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Rs"),(0,r.kt)("td",{parentName:"tr",align:null},"Sensing Resistance"),(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"30"),(0,r.kt)("td",{parentName:"tr",align:null},"k\u03a9")))),(0,r.kt)("h2",{id:"platforms-supported"},"Platforms Supported"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Arduino"),(0,r.kt)("th",{parentName:"tr",align:null},"Raspberry"),(0,r.kt)("th",{parentName:"tr",align:null},"ArduPy"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/arduino_logo.jpg",alt:"pir",width:500,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/raspberry_pi_logo.jpg",alt:"pir",width:500,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/ArduPy-Logo.png",alt:"pir",width:500,height:"auto"})))))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"The platforms mentioned above as supported is/are an indication of the module's software or theoritical compatibility. We only provide software library or code examples for Arduino platform in most cases. It is not possible to provide software library / demo code for all possible MCU platforms. Hence, users have to write their own software library.\n"))),(0,r.kt)("h2",{id:"application-ideas"},"Application Ideas"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas leakage detection."),(0,r.kt)("li",{parentName:"ul"},"Toys"),(0,r.kt)("li",{parentName:"ul"},"IoT Applications"),(0,r.kt)("li",{parentName:"ul"},"Smart Detections")),(0,r.kt)("h2",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"The output voltage from the Gas sensor increases when the concentration of gas increases. Sensitivity can be adjusted by rotating the potentiometer. For detail information about the MQ-2 sensor, please refer the data-sheet provided in ",(0,r.kt)("strong",{parentName:"p"},"Resources")," section."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"Please note that the best preheat time for the sensor is above 24 hours.\n"))),(0,r.kt)("h3",{id:"play-with-arduino"},"Play with arduino"),(0,r.kt)("h4",{id:"hardware"},"Hardware"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Seeeduino V4.2"),(0,r.kt)("th",{parentName:"tr",align:null},"Base Shield"),(0,r.kt)("th",{parentName:"tr",align:null},"Grove-Gas Sensor-MQ2"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/seeeduino_v4.2.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/base_shield.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/45d_small.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Seeeduino-V4.2-p-2517.html"},"Get One Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Base-Shield-V2-p-1378.html"},"Get One Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Gas-Sensor(MQ2)-p-937.html"},"Get One Now"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 2.")," Connect Grove-Gas_Sensor-MQ2 to port A0 of Grove-Base Shield."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 3.")," Plug Grove - Base Shield into Seeeduino."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 4.")," Connect Seeeduino to PC via a USB cable.")),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/with_ardu.jpg",alt:"pir",width:600,height:"auto"})),"Connect the Grove - Gas Sensor(MQ2) to A0 port as shown in the picture above.",(0,r.kt)("admonition",{type:"note"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"If we don't have Grove Base Shield, We also can directly connect Grove-Gas_Sensor-MQ2 to Seeeduino as below.\n"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Seeeduino"),(0,r.kt)("th",{parentName:"tr",align:null},"Grove-Gas_Sensor-MQ2"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5V"),(0,r.kt)("td",{parentName:"tr",align:null},"Red")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GND"),(0,r.kt)("td",{parentName:"tr",align:null},"Black")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Not Conencted"),(0,r.kt)("td",{parentName:"tr",align:null},"White")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"A0"),(0,r.kt)("td",{parentName:"tr",align:null},"Yellow")))),(0,r.kt)("h4",{id:"software"},"Software"),(0,r.kt)("p",null,"there are some examples  Please copy and paste code below to a new Arduino sketch, and upload them respectively, If you do not know how to upload the code, please check ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Upload_Code/"},"how to upload code"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Basic example:Gas Detection")),(0,r.kt)("p",null,"In this example, the sensor is connected to A0 pin. The voltage read from the sensor is displayed. This value can be used as a threshold to detect any increase/decrease in gas concentration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-C"},'void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float sensorValue;\n\n    sensorValue = analogRead(A0);\n    sensor_volt = sensorValue/1024*5.0;\n\n    Serial.print("sensor_volt = ");\n    Serial.print(sensor_volt);\n    Serial.println("V");\n    delay(1000);\n}\n')),(0,r.kt)("p",null," ",(0,r.kt)("strong",{parentName:"p"},"Measurement\xa0: Approximation")),(0,r.kt)("p",null,"These examples demonstrate ways to know the approximate concentration of Gas. As per the data-sheet of the MQx sensors, these equations are tested for standard conditions and are not calibrated. It may vary based on change in temperature or humidity."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"Please keep the Gas Sensor in clean air environment.\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n    float sensor_volt;\n    float RS_air; //  Get the value of RS via in a clear air\n    float R0;  // Get the value of R0 via in H2\n    float sensorValue;\n\n  // Get a average data by testing 100 times\n    for(int x = 0 ; x < 100 ; x++)\n    {\n        sensorValue = sensorValue + analogRead(A0);\n    }\n    sensorValue = sensorValue/100.0;\n\n\n    sensor_volt = sensorValue/1024*5.0;\n    RS_air = (5.0-sensor_volt)/sensor_volt; // omit * RL\n    R0 = RS_air/9.8; // The ratio of RS/R0 is 9.8 in a clear air from Graph (Found using WebPlotDigitizer)\n\n    Serial.print("sensor_volt = ");\n    Serial.print(sensor_volt);\n    Serial.println("V");\n\n    Serial.print("R0 = ");\n    Serial.println(R0);\n    delay(1000);\n\n}\n')),(0,r.kt)("p",null,"Then, open the serial monitor of Arduino IDE. Write down the value of R0 and this will be used in the next program. Please write down the R0 after the reading stabilizes."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"Replace the R0 below with value of R0 tested above. \n"))),(0,r.kt)("p",null,"Expose the sensor to any one of the gas listed above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'void setup() {\n    Serial.begin(9600);\n}\n\nvoid loop() {\n\n    float sensor_volt;\n    float RS_gas; // Get value of RS in a GAS\n    float ratio; // Get ratio RS_GAS/RS_air\n    int sensorValue = analogRead(A0);\n    sensor_volt=(float)sensorValue/1024*5.0;\n    RS_gas = (5.0-sensor_volt)/sensor_volt; // omit * RL\n\n          /*-Replace the name "R0" with the value of R0 in the demo of First Test -*/\n    ratio = RS_gas/R0;  // ratio = RS/R0\n          /*-----------------------------------------------------------------------*/\n\n    Serial.print("sensor_volt = ");\n    Serial.println(sensor_volt);\n    Serial.print("RS_ratio = ");\n    Serial.println(RS_gas);\n    Serial.print("Rs/R0 = ");\n    Serial.println(ratio);\n\n    Serial.print("\\n\\n");\n\n    delay(1000);\n\n}\n')),(0,r.kt)("p",null,"Now, we can get the concentration of gas from the figure below."),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/Gas_sensor_1.png",alt:"pir",width:600,height:"auto"})),(0,r.kt)("p",null,"According to the graph, we can see that the minimum concentration we can test is 100ppm and the maximum is 10000ppm, in a other word, we can get a concentration of gas between 0.01% and 1%. However, we can't provide a formula because the relation between ratio and concentration is nonlinear."),(0,r.kt)("h3",{id:"play-with-raspberry-pi-with-grove-base-hat-for-raspberry-pi"},"Play With Raspberry Pi (With Grove Base Hat for Raspberry Pi)"),(0,r.kt)("h4",{id:"hardware-1"},"Hardware"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1"),". Things used in this project:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Raspberry pi"),(0,r.kt)("th",{parentName:"tr",align:null},"Grove Base Hat for RasPi"),(0,r.kt)("th",{parentName:"tr",align:null},"Grove-Gas_Sensor-MQ2"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/rasp.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_Base_Hat_for_Raspberry_Pi/img/thumbnail.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/45d_small.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-3-Model-B-p-2625.html"},"Get ONE Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Base-Hat-for-Raspberry-Pi-p-3186.html"},"Get ONE Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Gas-Sensor(MQ2)-p-937.html"},"Get ONE Now"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 2"),". Plug the Grove Base Hat into Raspberry."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 3"),". Connect the Grove-Gas Sensor MQ2 to port A0 of the Base Hat."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 4"),". Connect the Raspberry Pi to PC through USB cable.")),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove_Gas_Sensor_MQ2/image/With_Hat.jpg",alt:"pir",width:600,height:"auto"})),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"For step 3 you are able to connect the Grove-Gas Sensor MQ2 to **any Analog Port** but make sure you change the command with the corresponding port number.\n"))),(0,r.kt)("h4",{id:"software-1"},"Software"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1"),". Follow ",(0,r.kt)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/Grove_Base_Hat_for_Raspberry_Pi/#installation"},"Setting Software")," to configure the development environment."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 2"),". Download the source file by cloning the grove.py library. ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd ~\ngit clone https://github.com/Seeed-Studio/grove.py\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 3"),". Excute below commands to write the code.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd grove.py/grove\nnano grove_gas_sensor_mq2.py\n")),(0,r.kt)("p",null,"Then you should copy following code in this file and hit ++ctrl+x++ to quit and save."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import math\nimport sys\nimport time\nfrom grove.adc import ADC\n\nclass GroveGasSensorMQ2:\n\n    def __init__(self, channel):\n        self.channel = channel\n        self.adc = ADC()\n\n    @property\n    def MQ2(self):\n        value = self.adc.read(self.channel)\n        return value\n\nGrove = GroveGasSensorMQ2\n\n\ndef main():\n    if len(sys.argv) < 2:\n        print('Usage: {} adc_channel'.format(sys.argv[0]))\n        sys.exit(1)\n\n    sensor = GroveGasSensorMQ2(int(sys.argv[1]))\n\n    print('Detecting...')\n    while True:\n        print('Gas value: {0}'.format(sensor.MQ2))\n        time.sleep(.3)\n\nif __name__ == '__main__':\n    main()\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 4"),". Excute below command to run the code ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"python grove_gas_sensor_mq2.py 0\n")),(0,r.kt)("admonition",{type:"success"},(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"If everything goes well, you will be able to see the following result\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'pi@raspberrypi:~/grove.py/grove $ python grove_gas_sensor_mq2.py 0\nDetecting...\nGas value: 760\nGas value: 714\nGas value: 675\nGas value: 637\nGas value: 603\nGas value: 568\nGas value: 535\nGas value: 506\nGas value: 481\nGas value: 464\nGas value: 449\nGas value: 429\nGas value: 413\nGas value: 456\nGas value: 470\nGas value: 440\nGas value: 404\nGas value: 373\nGas value: 352\nGas value: 339\nGas value: 330\n^CTraceback (most recent call last):\n  File "grove_gas_sensor_mq2.py", line 69, in <module>\n    main()\n  File "grove_gas_sensor_mq2.py", line 66, in main\n    time.sleep(.3)\nKeyboardInterrupt\n')),(0,r.kt)("p",null,"You can quit this program by simply press ++ctrl+c++."),(0,r.kt)("p",null,":::notice\nYou may have noticed that for the analog port, the silkscreen pin number is something like ",(0,r.kt)("strong",{parentName:"p"},"A1, A0"),", however in the command we use parameter ",(0,r.kt)("strong",{parentName:"p"},"0")," and ",(0,r.kt)("strong",{parentName:"p"},"1"),", just the same as digital port. So please make sure you plug the module into the correct port, otherwise there may be pin conflicts.\n:::"),(0,r.kt)("h3",{id:"play-with-raspberry-pi-with-grovepi_plus"},"Play With Raspberry Pi (with GrovePi_Plus)"),(0,r.kt)("h4",{id:"hardware-2"},"Hardware"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Raspberry pi"),(0,r.kt)("th",{parentName:"tr",align:null},"GrovePi_Plus"),(0,r.kt)("th",{parentName:"tr",align:null},"Grove-Gas_Sensor-MQ2"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/rasp.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/Grovepi%2B.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/45d_small.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-3-Model-B-p-2625.html"},"Get One Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/GrovePi%2B-p-2241.html"},"Get One Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Gas-Sensor(MQ2)-p-937.html"},"Get One Now"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 2.")," Plug the GrovePi_Plus into Raspberry.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 3.")," Connect Grove-Gas_Sensor-MQ2  to ",(0,r.kt)("strong",{parentName:"p"},"A0")," port of GrovePi_Plus.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 4.")," Connect the Raspberry to PC through USB cable."),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/with_rpi.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.kt)("h4",{id:"software-2"},"Software"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Follow ",(0,r.kt)("a",{parentName:"li",href:"https://www.dexterindustries.com/GrovePi/get-started-with-the-grovepi/setting-software/"},"Setting Software")," to configure the development environment."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 2.")," Git clone the Github repository.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd ~\ngit clone https://github.com/DexterInd/GrovePi.git\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 3.")," Execute below commands to use this sensor")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd ~/GrovePi/Software/Python\npython grove_gas_sensor.py\n")),(0,r.kt)("p",null,"Here is code of grove_gas_sensor.py:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Python"},'#!/usr/bin/env python\n#\n# GrovePi Example for using the  Grove Gas Sensor\n#\n# The GrovePi connects the Raspberry Pi and Grove sensors.  You can learn more about GrovePi here:  http://www.dexterindustries.com/GrovePi\n#\n# Have a question about this example?  Ask on the forums here:  http://forum.dexterindustries.com/c/grovepi\n#\n\'\'\'\n## License\nThe MIT License (MIT)\nGrovePi for the Raspberry Pi: an open source platform for connecting Grove Sensors to the Raspberry Pi.\nCopyright (C) 2017  Dexter Industries\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\'\'\'\n\n# NOTE:\n# There are 5 gas sensors\n# MQ2 - Combustible Gas, Smoke\n# MQ3 - Alcohol Vapor\n# MQ5 - LPG, Natural Gas, Town Gas\n# MQ9 - Carbon Monoxide, Coal Gas, Liquefied Gas\n# 02 - Oxygen\n# The sensitivity can be adjusted by the onboard potentiometer\n#\n# https://www.seeedstudio.com/wiki/Grove_-_Gas_Sensor\n# https://www.seeedstudio.com/wiki/Grove_-_Gas_Sensor(MQ5)\n# https://www.seeedstudio.com/wiki/Grove_-_Gas_Sensor(O%E2%82%82)\n\nimport time\nimport grovepi\n\n# Connect the Grove Gas Sensor to analog port A0\n# SIG,NC,VCC,GND\ngas_sensor = 0\n\ngrovepi.pinMode(gas_sensor,"INPUT")\n\nwhile True:\n    try:\n        # Get sensor value\n        sensor_value = grovepi.analogRead(gas_sensor)\n\n        # Calculate gas density - large value means more dense gas\n        density = (float)(sensor_value / 1024.0)\n\n        print("sensor_value =", sensor_value, " density =", density)\n        time.sleep(.5)\n\n    except IOError:\n        print ("Error")\n')),(0,r.kt)("h3",{id:"play-with-wio-terminal-ardupy"},"Play With Wio Terminal (ArduPy)"),(0,r.kt)("h4",{id:"hardware-3"},"Hardware"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Raspberry pi"),(0,r.kt)("th",{parentName:"tr",align:null},"GrovePi_Plus"),(0,r.kt)("th",{parentName:"tr",align:null},"Grove-Gas_Sensor-MQ2"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/rasp.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/Grovepi%2B.jpg",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/45d_small.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-3-Model-B-p-2625.html"},"Get One Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/GrovePi%2B-p-2241.html"},"Get One Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Gas-Sensor(MQ2)-p-937.html"},"Get One Now"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 2.")," Plug the GrovePi_Plus into Raspberry.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 3.")," Connect Grove-Gas_Sensor-MQ2  to ",(0,r.kt)("strong",{parentName:"p"},"A0")," port of GrovePi_Plus.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 4.")," Connect the Raspberry to PC through USB cable."),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/with_rpi.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.kt)("h4",{id:"software-3"},"Software"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Follow ",(0,r.kt)("a",{parentName:"li",href:"https://www.dexterindustries.com/GrovePi/get-started-with-the-grovepi/setting-software/"},"Setting Software")," to configure the development environment."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 2.")," Git clone the Github repository.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd ~\ngit clone https://github.com/DexterInd/GrovePi.git\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 3.")," Execute below commands to use this sensor")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd ~/GrovePi/Software/Python\npython grove_gas_sensor.py\n")),(0,r.kt)("p",null,"Here is code of grove_gas_sensor.py:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Python"},'#!/usr/bin/env python\n#\n# GrovePi Example for using the  Grove Gas Sensor\n#\n# The GrovePi connects the Raspberry Pi and Grove sensors.  You can learn more about GrovePi here:  http://www.dexterindustries.com/GrovePi\n#\n# Have a question about this example?  Ask on the forums here:  http://forum.dexterindustries.com/c/grovepi\n#\n\'\'\'\n## License\nThe MIT License (MIT)\nGrovePi for the Raspberry Pi: an open source platform for connecting Grove Sensors to the Raspberry Pi.\nCopyright (C) 2017  Dexter Industries\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\'\'\'\n# NOTE:\n# There are 5 gas sensors\n# MQ2 - Combustible Gas, Smoke\n# MQ3 - Alcohol Vapor\n# MQ5 - LPG, Natural Gas, Town Gas\n# MQ9 - Carbon Monoxide, Coal Gas, Liquefied Gas\n# 02 - Oxygen\n# The sensitivity can be adjusted by the onboard potentiometer\n#\n# https://www.seeedstudio.com/wiki/Grove_-_Gas_Sensor\n# https://www.seeedstudio.com/wiki/Grove_-_Gas_Sensor(MQ5)\n# https://www.seeedstudio.com/wiki/Grove_-_Gas_Sensor(O%E2%82%82)\n\nimport time\nimport grovepi\n\n# Connect the Grove Gas Sensor to analog port A0\n# SIG,NC,VCC,GND\ngas_sensor = 0\n\ngrovepi.pinMode(gas_sensor,"INPUT")\n\nwhile True:\n    try:\n        # Get sensor value\n        sensor_value = grovepi.analogRead(gas_sensor)\n\n        # Calculate gas density - large value means more dense gas\n        density = (float)(sensor_value / 1024.0)\n\n        print("sensor_value =", sensor_value, " density =", density)\n        time.sleep(.5)\n\n    except IOError:\n        print ("Error")\n')),(0,r.kt)("h3",{id:"play-with-wio-terminal-ardupy-1"},"Play With Wio Terminal (ArduPy)"),(0,r.kt)("h4",{id:"hardware-4"},"Hardware"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Wio Terminal"),(0,r.kt)("th",{parentName:"tr",align:null},"Grove - Gas Sensor(MQ2)"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wio-Terminal/img/Wio-Terminal-thumbnail.png",alt:"pir",width:600,height:"auto"}))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("p",null,(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/45d_small.jpg",alt:"pir",width:600,height:"auto"})))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Wio-Terminal-p-4509.html"},"Get One Now")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Gas-Sensor-MQ2.html"},"Get One Now"))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 2.")," Connect Grove - Gas Sensor(MQ2) to the ",(0,r.kt)("strong",{parentName:"p"},"A0")," Grove port of Wio Terminal.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 3.")," Connect the Wio Terminal to PC through USB Type-C cable."))),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/WT-MQ2.png",alt:"pir",width:600,height:"auto"})),(0,r.kt)("h4",{id:"software-4"},"Software"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 1.")," Follow ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/ArduPy/"},(0,r.kt)("strong",{parentName:"a"},"ArduPy Getting Started"))," to configure the ArduPy development environment on Wio Terminal.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 2.")," Make sure that the ArduPy firmware is flashed into Wio Terminal. For more information, please follow ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/ArduPy/#ardupy-aip-cli-getting-started"},(0,r.kt)("strong",{parentName:"a"},"here")),"."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"aip build\naip flash\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 3.")," Copy the following code and save it as ",(0,r.kt)("inlineCode",{parentName:"li"},"ArduPy-mq2.py"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from machine import Pin, ADC\nfrom machine import LCD\nfrom machine import Sprite\nimport time\n\nmq2 = ADC(Pin(13))\nlcd = LCD()\nspr = Sprite(lcd) # Create a buff\n\ndef main():\n    spr.createSprite(320, 240)\n    while True:\n        spr.setTextSize(2)\n        spr.fillSprite(spr.color.BLACK)\n        spr.setTextColor(lcd.color.ORANGE)\n        spr.drawString("MQ2 Reading", 90, 10)\n        spr.drawFastHLine(40, 35, 240, lcd.color.DARKGREY)\n        spr.setTextColor(lcd.color.WHITE)\n        spr.drawString("- Current Level: ", 20, 50)\n        spr.drawNumber(mq2.read(), 220,50)\n        spr.pushSprite(0,0)\n        time.sleep_ms(500)\n\n        print("MQ2 Gas Sensor Reading is: ", mq2.read())\n\nif __name__ == "__main__":\n    main()\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 4.")," Save the ",(0,r.kt)("inlineCode",{parentName:"li"},"ArduPy-mq2.py")," in a location that you know. Run the following command and ",(0,r.kt)("strong",{parentName:"li"},"replace")," ",(0,r.kt)("inlineCode",{parentName:"li"},"<YourPythonFilePath>")," with your ",(0,r.kt)("inlineCode",{parentName:"li"},"ArduPy-mq2.py")," location.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'aip shell -n -c "runfile <YourPythonFilePath>"\n# Example:\n# aip shell -n -c "runfile /Users/ansonhe/Desktop/ArduPy-mq2.py"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 5.")," We will see the gas value display on terminal as below, and displaying on the Wio Terminal LCD screen.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'ansonhe@Ansons-Macbook-Pro ~:aip shell -n -c "runfile /Users/ansonhe/Desktop/ArduPy-mq2.py"\nPositional argument (/dev/cu.usbmodem1414301) takes precedence over --open.\nConnected to ardupy\nMQ2 Gas Sensor Reading is:  60\nMQ2 Gas Sensor Reading is:  61\nMQ2 Gas Sensor Reading is:  62\nMQ2 Gas Sensor Reading is:  62\nMQ2 Gas Sensor Reading is:  64\nMQ2 Gas Sensor Reading is:  63\nMQ2 Gas Sensor Reading is:  66\nMQ2 Gas Sensor Reading is:  64\nMQ2 Gas Sensor Reading is:  65\nMQ2 Gas Sensor Reading is:  65\nMQ2 Gas Sensor Reading is:  65\nMQ2 Gas Sensor Reading is:  64\n')),(0,r.kt)("p",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/img/Ardupy-MQ2.png",alt:"pir",width:600,height:"auto"})),(0,r.kt)("h2",{id:"schematic-online-viewer"},"Schematic Online Viewer"),(0,r.kt)("div",{className:"altium-ecad-viewer","data-project-src":"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/res/Gas_Sensor_Eagle_files.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[References]")," ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Flammability_limit"},"What's LEL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[Schematic]")," ",(0,r.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/res/Gas_Sensor_Eagle_files.zip"},"Grove Gas Sensor - EAGLE (Schematic and Board) files")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[Schematic]")," ",(0,r.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/res/Gas_Sensor_Schematic.pdf"},"Grove Gas Sensor - PDF Schematic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[Datasheet]")," ",(0,r.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-Gas_Sensor-MQ2/res/MQ-2.pdf"},"MQ-2 Datasheet"))),(0,r.kt)("h2",{id:"projects"},"Projects"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arduino And MQ2 Gas Sensor"),": The Grove Gas Sensor (MQ2) module is useful for gas leakage detection (home and industry). It is suitable for detecting H2, LPG, CH4 and CO."),(0,r.kt)("iframe",{frameborder:"0",height:"327.5",scrolling:"no",src:"https://www.hackster.io/karimmufte/arduino-and-mq2-gas-sensor-57f98c/embed",width:"350"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://hackaday.io/project/16809-electronic-nose-to-detect-fruit-ripening"},(0,r.kt)("strong",{parentName:"a"},"Electronic nose to detect fruit ripening"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://hackaday.io/project/8011-ed-e-home-automation-and-monitoring-system"},(0,r.kt)("strong",{parentName:"a"},"ED-E: Home Automation and Monitoring System"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Scalable Intelligent Air Quality Monitoring and Response")," Air Quality Monitoring that uses the Intel Edison Compute Module, Amazon AWS, Visualization through Kibana, and drones!"),(0,r.kt)("iframe",{frameborder:"0",height:"327.5",scrolling:"no",src:"https://www.hackster.io/iot-warriors/scalable-intelligent-air-quality-monitoring-and-response-b72732/embed",width:"350"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Octopod: Smart IoT Home Automation Project")," Octopod, a uniquely shaped full home automation system that allows you to monitor your home and keep security with AI and smart RFID locks."),(0,r.kt)("iframe",{frameborder:"0",height:"327.5",scrolling:"no",src:"https://www.hackster.io/sakshambhutani2001/octopod-smart-iot-home-automation-project-fa939b/embed",width:"350"}),(0,r.kt)("h2",{id:"tech-support"},"Tech Support"),(0,r.kt)("p",null,"Please submit any technical issue into our ",(0,r.kt)("a",{parentName:"p",href:"https://forum.seeedstudio.com/"},"forum"),"."),(0,r.kt)("h2",{id:"upgradable-to-industrial-sensors"},"Upgradable to Industrial Sensors"),(0,r.kt)("p",null,"With the SenseCAP ",(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/SenseCAP-XIAO-LoRaWAN-Controller-p-5474.html"},"S2110 controller")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/SenseCAP-S2100-LoRaWAN-Data-Logger-p-5361.html"},"S2100 data logger"),", you can easily turn the Grove into a LoRaWAN\xae sensor. Seeed not only helps you with prototyping but also offers you the possibility to expand your project with the SenseCAP series of robust ",(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/catalogsearch/result/?q=sensecap&categories=SenseCAP&application=Temperature%2FHumidity~Soil~Gas~Light~Weather~Water~Automation~Positioning~Machine%20Learning~Voice%20Recognition&compatibility=SenseCAP"},"industrial sensors"),"."),(0,r.kt)("p",null,"The IP66 housing, Bluetooth configuration, compatibility with the global LoRaWAN\xae network, built-in 19 Ah battery, and powerful support from APP make the ",(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/catalogsearch/result/?q=S21&categories=SenseCAP&product_module=Device"},"SenseCAP S210x")," the best choice for industrial applications. The series includes sensors for soil moisture, air temperature and humidity, light intensity, CO2, EC, and an 8-in-1 weather station. Try the latest SenseCAP S210x for your next successful industrial project."),(0,r.kt)("div",{align:"center"},(0,r.kt)("a",{href:"https://www.seeedstudio.com/catalogsearch/result/?q=sensecap&application=Temperature%2FHumidity~Soil~Gas~Light~Weather~Water~Automation~Positioning~Machine%20Learning~Voice%20Recognition&compatibility=SenseCAP",target:"_blank"},(0,r.kt)("img",{width:"{800}",src:"https://files.seeedstudio.com/wiki/K1100_overview/sensecap.png"}))))}u.isMDXComponent=!0}}]);