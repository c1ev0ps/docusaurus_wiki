"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[70254],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),c=i,h=d["".concat(s,".").concat(c)]||d[c]||m[c]||a;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},12053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=n(87462),i=(n(67294),n(3905));const a={description:"Energy Monitor Shield V0.9b",title:"Energy Monitor Shield V0.9b",keywords:["Arduino shield"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"2/16/2023",author:"jianjing Huang"}},l=void 0,o={unversionedId:"Top_Brand/Arduino/shield/Energy_Monitor_Shield_V0.9b",id:"Top_Brand/Arduino/shield/Energy_Monitor_Shield_V0.9b",title:"Energy Monitor Shield V0.9b",description:"Energy Monitor Shield V0.9b",source:"@site/docs/Top_Brand/Arduino/shield/Energy_Monitor_Shield_V0.9b.md",sourceDirName:"Top_Brand/Arduino/shield",slug:"/Top_Brand/Arduino/shield/Energy_Monitor_Shield_V0.9b",permalink:"/docusaurus_wiki/zh-CN/Top_Brand/Arduino/shield/Energy_Monitor_Shield_V0.9b",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Top_Brand/Arduino/shield/Energy_Monitor_Shield_V0.9b.md",tags:[],version:"current",lastUpdatedBy:"jianjing Huang",lastUpdatedAt:1676505600,formattedLastUpdatedAt:"2023\u5e742\u670816\u65e5",frontMatter:{description:"Energy Monitor Shield V0.9b",title:"Energy Monitor Shield V0.9b",keywords:["Arduino shield"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"2/16/2023",author:"jianjing Huang"}},sidebar:"ProductSidebar",previous:{title:"NFC Shield",permalink:"/docusaurus_wiki/zh-CN/Top_Brand/Arduino/shield/NFC_Shield"},next:{title:"Ethernet Shield V1.0",permalink:"/docusaurus_wiki/zh-CN/Top_Brand/Arduino/shield/Ethernet_Shield_V1.0"}},s={},p=[{value:"Features",id:"features",level:2},{value:"Layout and schematics",id:"layout-and-schematics",level:2},{value:"Basic functionality",id:"basic-functionality",level:2},{value:"Expansion Capabilities",id:"expansion-capabilities",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Libraries",id:"libraries",level:2},{value:"Necessary libraries",id:"necessary-libraries",level:3},{value:"Features using libraries",id:"features-using-libraries",level:3},{value:"Simple demonstration",id:"simple-demonstration",level:2},{value:"Simple demonstration  with wireless technology",id:"simple-demonstration--with-wireless-technology",level:2},{value:"Version Tracker",id:"version-tracker",level:2},{value:"Questions and Answers",id:"questions-and-answers",level:2},{value:"How to buy",id:"how-to-buy",level:2},{value:"Licensing",id:"licensing",level:2},{value:"Tech Support",id:"tech-support",level:2}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Energy_Monitor_Shield_V0.9b/img/EMS_intro.jpg",alt:null})),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Energy_Monitor_Shield_V0.9b/img/EMS_h.jpg",alt:null})),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("a",{href:"https://www.seeedstudio.com/Energy-Monitor-Shield-Monitoring-System-with-Nokia-LCD-Screen-p-1775.html",target:"_blank"},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/get_one_now.png",border:0}))),(0,i.kt)("p",null,"Energy Monitor Shield is an Arduino-compatible expansion card designed for building energy monitoring system with LCD screen and an interface for connecting the wireless transceiver nRF24L01 +."),(0,i.kt)("p",null,"Model: ",(0,i.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/"},"830070001")),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Connect up to three sensors AC (30-100A).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Support for LCD Screen Nokia LCD5110")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Turn off the LCD backlight with a jumper")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Two buttons to control (operate one analog pin)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Interface to connect the transceiver to 2.4G nRF24L01 +")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"GROVE-compatible connector: I2C")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fully compatible with Ethernet Shield (Wiznet 5100 + SD)"))),(0,i.kt)("h2",{id:"layout-and-schematics"},"Layout and schematics"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Energy_Monitor_Shield_V0.9b/img/Em-top.jpg",alt:null})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The left side of EM Shield are three connectors for current sensors, right - connector for LCD-screen.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Jumper JP1 is used to enable / disable real-backlight LCD-screen.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In the upper right corner - I2C-connector.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"On the right are two buttons (labeled S1 and S2).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In the center of the board (just to the right LCD-screen) - connector for nRF24L01 +."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Schematic of the device")),(0,i.kt)("h2",{id:"basic-functionality"},"Basic functionality"),(0,i.kt)("p",null,"In the basic version (without using Ethernet Shield) may organize monitoring of energy consumption in three different circuits using current sensors. Information about the current level of consumption can be displayed on the LCD screen. Device Management can be organized using two buttons on the Shield. The obtained data can be transmitted by the transceiver nRF24L01 +."),(0,i.kt)("h2",{id:"expansion-capabilities"},"Expansion Capabilities"),(0,i.kt)("p",null,"Additionally EM Shield can connect any device using i2c Grove-compatible connector (sensors, displays, etc.).\nEM Shield was designed to be fully compatible with the Ethernet Shield (Wiznet 5100 + SD) - so you can use these two Shields together to create even more advanced device monitoring electricity (logging on SD-card and presenting data on a web page)."),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A0, A1, A2 - involved for connecting sensors AC")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'A4 (SDA), A5 (SCL) - displayed on the connector "I2C" (the other two pin connector - VCC and GND for sensor supply)')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Interface for connecting RF-module nRF24L01+:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D11 - MOSI"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"D12 - MISO"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D13 - SCK"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D8 - RF_CE")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D7 - RF_CSN")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D2 - RF_IRQ")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Interface for connecting LCD5110:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D11 - MOSI")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D13 - SCK"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D5 - LCD_D/C")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D6 - LCD_RST")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"D3 - LCD_CS")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A3 - Buttons"))),(0,i.kt)("h2",{id:"libraries"},"Libraries"),(0,i.kt)("h3",{id:"necessary-libraries"},"Necessary libraries"),(0,i.kt)("p",null,"To use Energy Monitor Shield requires the following libraries:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Working with the transceiver nRF24L01+ - ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/maniacbug/RF24/archive/master.zip"},"RF24"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using the display LCD 51110 (supporting SPI) - ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/stepanovalex/LCD5110_Graph_SPI/archive/master.zip"},"LCD5110_Graph_SPI"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Work with current sensors - ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/openenergymonitor/EmonLib/archive/master.zip"},"EmonLib"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"You must use the library from - ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mysensors/Arduino/tree/master"},"www.mysensors.org"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"MySensors Arduino Library ",(0,i.kt)("a",{parentName:"p",href:"http://www.mysensors.org/download/sensor_api_15"},"(v1.5)")))),(0,i.kt)("p",null,"Requires the libraries that are used when working RF24 and LCD-display: SPI"),(0,i.kt)("h3",{id:"features-using-libraries"},"Features using libraries"),(0,i.kt)("p",null,"Library has used examples of them just to understand how they work."),(0,i.kt)("p",null,"Initialization RF-module as follows:"),(0,i.kt)("pre",null,"... //RF24 radio(CE,CSN); RF24 radio(7,8); ..."),(0,i.kt)("p",null,"Initialize LCD-display is as follows:"),(0,i.kt)("pre",null,"... //LCD5110 myGLCD(DC,RST,CS); LCD5110 myGLCD(5,6,3); ..."),(0,i.kt)("h2",{id:"simple-demonstration"},"Simple demonstration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-C++"},'\n#include &lt;SPI.h&gt;\n#include &lt;LCD5110_Graph_SPI.h&gt;\n#include "EmonLib.h"   \n\n#define WINDOW 15\n#define DELTA 1500\n\nEnergyMonitor emon1;\n\ndouble sIrms;\nfloat Pcur;\nfloat Pmax;\nfloat Pmin=100;\n\nLCD5110 myGLCD(5,6,3);\n\nextern unsigned char SmallFont[];\n\nunsigned long measureTime;\nboolean flag=false;\ndouble delta=0;\n\n#define DELTAMEASURE 30000\n\nvoid setup(void)\n{\n  myGLCD.InitLCD(70);\n  myGLCD.setFont(SmallFont);\n\n  myGLCD.update();\n\n  emon1.current(0, 111.1);             // Current: input pin, calibration.\n  double Irms[WINDOW];\n  // Calibrate (find offset)\n  double cIrms = 0;\n  flag = false;\n\n  while (!flag) {\n    myGLCD.print("calibrating", 0, 0);\n    myGLCD.update();\n    Irms[0] = emon1.calcIrms(1480); // the first value in the measurement obviously "crooked"\n      //Serial.println("calculate delta");\n      for (int i=0; i&lt;WINDOW; i++) {\n        Irms[i] = emon1.calcIrms(1480);\n        cIrms = cIrms + Irms[i];\n        delay(100);\n      }\n      delta = cIrms/WINDOW;\n      flag = true;\n  }\n\n//myGLCD.print(" ready", 0, 0);\n    //myGLCD.update();    \n\n}\n\nvoid loop(void)\n{\n  // write the current value\n  sIrms = emon1.calcIrms(1480) - delta;  // Calculate Irms only\n  sIrms = abs(sIrms);\n  Pcur = sIrms*0.220;\n\n    // the received data is printed\n    char tbuf[6];\n    dtostrf(Pcur,5,5,tbuf);\n    myGLCD.print(tbuf, 0, 0);\n    dtostrf(analogRead(A3),4,0,tbuf);\n    myGLCD.print(tbuf, 30, 15);\n\n    myGLCD.update();\n\n    delay(250);\n\n}\n')),(0,i.kt)("h2",{id:"simple-demonstration--with-wireless-technology"},"Simple demonstration  with wireless technology"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-C++"},'/*\n This example code is in the public domain.\n */\n\n#include <SPI.h>\n#include <MySensor.h>  // Include MySensors.org Library V1.5\n#include "EmonLib.h" // Include Emon Library\n#include <LCD5110_Graph_SPI.h> // Include NOKIA5110 Library\n\n#define CHILD_ID_POWER 0\n\nEnergyMonitor emon;\n\nLCD5110 myGLCD(5,6,3);\nextern unsigned char SmallFont[];\n\nMyTransportNRF24 transport(7, 8); //for EMv1\nMySensor gw(transport);\n\nunsigned long lastSend;\nunsigned long SEND_FREQUENCY = 20000; // Minimum time between send (in milliseconds). We don\'t wnat to spam the gateway.\n\nfloat Irms;\nfloat lastIrms = -99;\n\nchar tbuf[8];\nchar sbuf[12];\n\nMyMessage IrmsMsg(CHILD_ID_POWER, V_KWH);\n\nvoid setup()  \n{\n  myGLCD.InitLCD();\n  myGLCD.setFont(SmallFont);\n  myGLCD.update();\n\n  // The third argument enables repeater mode.\n  gw.begin(NULL, AUTO, true),\n  gw.sendSketchInfo("Energy Monitor v1", "1.0");\n\n//  emon.current(0, 111.1);             // Current: input pin, calibration.\n   emon.current(0, 66.5);\n\n  // Register all sensors to gw (they will be created as child devices)\n\n  gw.present(CHILD_ID_POWER, S_POWER);\n}\n\nvoid loop()      \n{      \n  gw.process();\n  unsigned long now = millis();\n\n  double Irms = emon.calcIrms(1480);  // Calculate Irms only\n  float realIrms  = emon.Irms*220;        //extract Real Power into variable\n\n if (realIrms != lastIrms) {\n      gw.send(IrmsMsg.set(realIrms, 1)); //send to gateway\n\n  lastIrms=realIrms;\n  }\n\n   dtostrf(realIrms,5,2,tbuf);\n    sprintf(sbuf, "  %s kWt", tbuf);\n    myGLCD.print(sbuf, 20, 0);   \n    myGLCD.print("Powr:", 0, 0);  \n\n    dtostrf(Irms,5,2,tbuf);\n    sprintf(sbuf, "  %s Amp", tbuf);\n    myGLCD.print(sbuf, 20, 10);   \n    myGLCD.print("Irms:", 0, 10);  \n\n    myGLCD.update();\n\n      Serial.print("Power: ");\n      Serial.println(realIrms);\n\n  gw.sleep(SEND_FREQUENCY);\n  }\n')),(0,i.kt)("h2",{id:"version-tracker"},"Version Tracker"),(0,i.kt)("table",{cellPadding:5,cellSpacing:0},(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",{width:150}," Revision"),(0,i.kt)("td",{width:450}," Description"),(0,i.kt)("td",{width:80}," Release")),(0,i.kt)("tr",{style:{fontSize:"90%"}},(0,i.kt)("td",null," 1.0"),(0,i.kt)("td",null," Public version"),(0,i.kt)("td",null," 01.04.2014")),(0,i.kt)("tr",{style:{fontSize:"90%"}},(0,i.kt)("td",null," 0.9b"),(0,i.kt)("td",null," Public version (Not produced)"),(0,i.kt)("td",null," 20.10.2013")),(0,i.kt)("tr",{style:{fontSize:"90%"}},(0,i.kt)("td",null," 0.9"),(0,i.kt)("td",null," Prototype"),(0,i.kt)("td",null," 10.09.2013")))),(0,i.kt)("h2",{id:"questions-and-answers"},"Questions and Answers"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Blog ",(0,i.kt)("a",{parentName:"p",href:"//devicter.blogspot.ru/2014/03/energy-monitor-shield.html#more"},"Energy Monitor Shield - Wireless energy monitoring")," RU")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ask a question by e-mail ",(0,i.kt)("a",{parentName:"p",href:"mailto:support@devicter.ru"},"support@devicter.ru")))),(0,i.kt)("h2",{id:"how-to-buy"},"How to buy"),(0,i.kt)("p",null,"This product can be purchased:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"China (shipping worldwide)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/depot/Energy-Monitor-Shield-Monitoring-System-with-Nokia-LCD-Screen-p-1775.html"},"Seeed store")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Russia"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://devicter.ru/goods/EM-Shield"},"Devicter store"))))),(0,i.kt)("h2",{id:"licensing"},"Licensing"),(0,i.kt)("p",null,"This documentation is licensed under the Creative Commons ",(0,i.kt)("a",{parentName:"p",href:"http://creativecommons.org/licenses/by-sa/3.0/"},"Attribution-ShareAlike License 3.0")," Source code and libraries are"),(0,i.kt)("p",null,"licensed under ",(0,i.kt)("a",{parentName:"p",href:"http://www.gnu.org/licenses/gpl.html"},"GPL/LGPL"),", see source code files for details."),(0,i.kt)("h2",{id:"tech-support"},"Tech Support"),(0,i.kt)("p",null,"Please submit any technical issue into our ",(0,i.kt)("a",{parentName:"p",href:"https://forum.seeedstudio.com/"},"forum"),". ",(0,i.kt)("br",null)),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"}))))}d.isMDXComponent=!0}}]);