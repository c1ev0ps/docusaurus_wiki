"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[77301],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(n),c=o,h=u["".concat(p,".").concat(c)]||u[c]||m[c]||a;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},22171:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={description:"Seeed Studio XIAO Expansion board",title:"Seeed Studio XIAO Expansion board",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/10/2023",author:"shuxu hu"}},i=void 0,s={unversionedId:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_Expansion_board/Seeeduino-XIAO-Expansion-Board",id:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_Expansion_board/Seeeduino-XIAO-Expansion-Board",title:"Seeed Studio XIAO Expansion board",description:"Seeed Studio XIAO Expansion board",source:"@site/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_Expansion_board/Seeeduino-XIAO-Expansion-Board.md",sourceDirName:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_Expansion_board",slug:"/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_Expansion_board/Seeeduino-XIAO-Expansion-Board",permalink:"/docusaurus_wiki/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_Expansion_board/Seeeduino-XIAO-Expansion-Board",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_Expansion_board/Seeeduino-XIAO-Expansion-Board.md",tags:[],version:"current",lastUpdatedBy:"shuxu hu",lastUpdatedAt:1673308800,formattedLastUpdatedAt:"Jan 10, 2023",frontMatter:{description:"Seeed Studio XIAO Expansion board",title:"Seeed Studio XIAO Expansion board",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/10/2023",author:"shuxu hu"}},sidebar:"ProductSidebar",previous:{title:"Grove Shield for Seeed Studio XIAO with embedded battery management chip",permalink:"/docusaurus_wiki/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_Expansion_board/Grove-Shield-for-Seeeduino-XIAO-embedded-battery-management-chip"},next:{title:"Seeed Studio XIAO Kit Courses",permalink:"/docusaurus_wiki/Sensor/SeeedStudio_XIAO/Kit with Courses/XIAO-Kit-Courses"}},p={},l=[{value:"<strong>Features</strong>",id:"features",level:2},{value:"<strong>Specification</strong>",id:"specification",level:2},{value:"<strong>Applications</strong>",id:"applications",level:2},{value:"<strong>Part List</strong>",id:"part-list",level:2},{value:"<strong>Getting Started</strong>",id:"getting-started",level:2},{value:"<strong>Materials Required</strong>",id:"materials-required",level:3},{value:"<strong>Hardware Overview</strong>",id:"hardware-overview",level:3},{value:"<strong>Pinout Diagram</strong>",id:"pinout-diagram",level:3},{value:"<strong>Expansion Board Usage</strong>",id:"expansion-board-usage",level:2},{value:"<strong>Connection</strong>",id:"connection",level:3},{value:"<strong>Battery usage</strong>",id:"battery-usage",level:2},{value:"<strong>Modules on the expansion board</strong>",id:"modules-on-the-expansion-board",level:2},{value:"<strong>OLED Display</strong>",id:"oled-display",level:3},{value:"<strong>LED control by User Button</strong>",id:"led-control-by-user-button",level:3},{value:"<strong>Buzzer</strong>",id:"buzzer",level:3},{value:"<strong>Play Song with Passive Buzzer</strong>",id:"play-song-with-passive-buzzer",level:4},{value:"<strong>Servo Control by Rotary Angle Sensor</strong>",id:"servo-control-by-rotary-angle-sensor",level:3},{value:"<strong>RTC clock display</strong>",id:"rtc-clock-display",level:3},{value:"Acrylic Case for Seeed Studio Seeed Studio Expansion Base for XIAO",id:"acrylic-case-for-seeed-studio-seeed-studio-expansion-base-for-xiao",level:2},{value:"<strong>Circuitpython on Seeed Studio XIAO SAMD21 with expansion board</strong>",id:"circuitpython-on-seeed-studio-xiao-samd21-with-expansion-board",level:2},{value:"<strong>Installing CircuitPython</strong>",id:"installing-circuitpython",level:2},{value:"<strong>CircuitPyhton Blink example</strong>",id:"circuitpyhton-blink-example",level:3},{value:"<strong>MicroSD card for circuitpython</strong>",id:"microsd-card-for-circuitpython",level:3},{value:"<strong>Demo</strong>",id:"demo",level:2},{value:"<strong>Project 1 - Remote control fan</strong>",id:"project-1---remote-control-fan",level:3},{value:"<strong>Project 2 - Remote control car</strong>",id:"project-2---remote-control-car",level:3},{value:"<strong>Project 3 - Fingerprint unlocks treasure box -Seeed Studio XIAO</strong>",id:"project-3---fingerprint-unlocks-treasure-box--seeed-studio-xiao",level:3},{value:"<strong>Project 4 - Seeed Studio Expansion Base for XIAO - mjolnir</strong>",id:"project-4---seeed-studio-expansion-base-for-xiao---mjolnir",level:3},{value:"<strong>Project 5 - Air Quality Sensor Hub - Seeed Studio Expansion Base for XIAO</strong>",id:"project-5---air-quality-sensor-hub---seeed-studio-expansion-base-for-xiao",level:3},{value:"<strong>Project 6 - Seeed Studio Expansion Base for XIAO - Heart Rate</strong>",id:"project-6---seeed-studio-expansion-base-for-xiao---heart-rate",level:3},{value:"Resources",id:"resources",level:2},{value:"Tech Support",id:"tech-support",level:2}],d={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:550,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/zheng1.jpg"})),(0,o.kt)("p",null,"A powerful functional expansion board for Seeed Studio XIAO of only half Raspberry Pi 4 size. It enables build prototype and project in easy and quick way. With its rich peripherals including OLED, RTC, expandable memory, passive buzzer, RESET/User button, 5V servo connector, multiple data interfaces\u2026 you could explore infinite possibilities of Seeed Studio XIAO . Circuit python is also well supported by this board."),(0,o.kt)("p",null,"As Seeed Studio XIAO form factor, all Seeed Studio XIAO boards support both ",(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},"Grove Shield for Seeed Studio XIAO")," and ",(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},"Seeed Studio Expansion Base for XIAO"),". There is a slight difference between the pins and refer to the Pinout it is easy to manage."),(0,o.kt)("p",null,"Seeed Studio XIAO SAMD21 , Seeed Studio XIAO RP2040, and Seeed Studio XIAO nRF52840 are compatible to the Seeed Studio Expansion Base for XIAO."),(0,o.kt)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,o.kt)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,o.kt)("strong",null,(0,o.kt)("span",null,(0,o.kt)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))),(0,o.kt)("h2",{id:"features"},(0,o.kt)("strong",{parentName:"h2"},"Features")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Quick Prototyping:")," Easy debug and Reset with RESET button and SWD pin led out to male header. 0.96\u201dOLED, enables visual data display without PC serial monitor; Convenient plug and play Grove connectors support multiple data protocols, including IIC, Uart, Analog/Digital; No soldering needed with all pin led out.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Rich peripherals:")," OLED display, RTC, expandable memory space, passive buzzer, user button, on board battery management chip.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"No Soldering Needed:")," All pin led out. Convenient plug and play Grove connectors support multiple data protocols, including IIC, Uart, Analog/Digital.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Circuit Python Supported:")," Well supports circuit python. MicroSD card slot enables memory space expand, making it possible to allocate more libraries needed in prototyping and project building.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Mini Size:")," Compact and elegant with only half Raspberry Pi 4 size, especially suitable for projects require mini size."))),(0,o.kt)("h2",{id:"specification"},(0,o.kt)("strong",{parentName:"h2"},"Specification")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Item"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Operating voltage"),(0,o.kt)("td",{parentName:"tr",align:null},"5V / 3.7V Lithium Battery")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Charging current"),(0,o.kt)("td",{parentName:"tr",align:null},"460mA (Max)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RTC timer precision"),(0,o.kt)("td",{parentName:"tr",align:null},"\xb1 1.5S/DAY(25\xb0C)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"RTC battery"),(0,o.kt)("td",{parentName:"tr",align:null},"CR1220")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Display"),(0,o.kt)("td",{parentName:"tr",align:null},'0.96" OLED display')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Expandable memory"),(0,o.kt)("td",{parentName:"tr",align:null},"MicroSD card")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Grove Interface"),(0,o.kt)("td",{parentName:"tr",align:null},"Grove IIC",(0,o.kt)("em",{parentName:"td"},"2, Grove UART"),"1, A0/D0 Grove*1")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Other External Equipment"),(0,o.kt)("td",{parentName:"tr",align:null},"Passive buzzer, user button, 5V servo connector")))),(0,o.kt)("h2",{id:"applications"},(0,o.kt)("strong",{parentName:"h2"},"Applications")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"SWD debug"),(0,o.kt)("li",{parentName:"ul"},"Rapid prototyping"),(0,o.kt)("li",{parentName:"ul"},"Data display"),(0,o.kt)("li",{parentName:"ul"},"Mini Size Project")),(0,o.kt)("h2",{id:"part-list"},(0,o.kt)("strong",{parentName:"h2"},"Part List")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Item"),(0,o.kt)("th",{parentName:"tr",align:null},"Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Seeed Studio Expansion Base for XIAO"),(0,o.kt)("td",{parentName:"tr",align:null},"*1")))),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This product does not include Seeed Studio XIAO and battery, please click this link to get ",(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html?gclid=Cj0KCQjwufn8BRCwARIsAKzP695mYBI8wwzrR8rXiJgv9QBK5DeTJGCU9bzXvzGUheFVZxqHcuw0SgYaAqDqEALw_wcB"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio XIAO SAMD21")))),(0,o.kt)("h2",{id:"getting-started"},(0,o.kt)("strong",{parentName:"h2"},"Getting Started")),(0,o.kt)("h3",{id:"materials-required"},(0,o.kt)("strong",{parentName:"h3"},"Materials Required")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Seeed Studio XIAO SAMD21 (Pre-solder)"),(0,o.kt)("th",{parentName:"tr",align:null},"Seeed Studio Expansion Base for XIAO"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,(0,o.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/102010388_Preview-07.png",alt:"pir",width:600,height:"auto"}))),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,(0,o.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/zheng1.jpg",alt:"pir",width:600,height:"auto"})))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html"},(0,o.kt)("strong",{parentName:"a"},"Get ONE Now"))),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,o.kt)("strong",{parentName:"a"},"Get ONE Now")))))),(0,o.kt)("h3",{id:"hardware-overview"},(0,o.kt)("strong",{parentName:"h3"},"Hardware Overview")),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/2222222222222222222222222222221.jpg"})),(0,o.kt)("p",null,"There are an external MicroSD card slot and RTC Battery Holder, the MicroSD card mostly is used for saving and run the ",(0,o.kt)("inlineCode",{parentName:"p"},"python.py")," file, the RTC is for tracks the current time and can be used to program actions at a specific time."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/1111111111111111111111110.jpg"})),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/ssssssssssccccccccc.png"})),(0,o.kt)("h3",{id:"pinout-diagram"},(0,o.kt)("strong",{parentName:"h3"},"Pinout Diagram")),(0,o.kt)("p",null,"External headers-pin description for Grove-Shield for Seeed Studio XIAO ."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:800,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/pinpinpin4.jpg"})),(0,o.kt)("h2",{id:"expansion-board-usage"},(0,o.kt)("strong",{parentName:"h2"},"Expansion Board Usage")),(0,o.kt)("h3",{id:"connection"},(0,o.kt)("strong",{parentName:"h3"},"Connection")),(0,o.kt)("p",null,"Put the Seeed Studio XIAO SAMD21 on the expansion board, the Seeed Studio XIAO SAMD21 green LED should light up."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:400,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/XIAO-to-board.png"})),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Please plug the Seeed Studio XIAO on the expansion board first, then plug Type-C, Remember pluing Seeed Studio XIAO into the ",(0,o.kt)("strong",{parentName:"p"},"middle of the two female header connectors"),", otherwise you will damage the Seeed Studio XIAO and the expansion board.")),(0,o.kt)("h2",{id:"battery-usage"},(0,o.kt)("strong",{parentName:"h2"},"Battery usage")),(0,o.kt)("p",null,"The Seeed Studio Expansion Base for XIAO can be powered by a battery, so if you do some demo that needs to be moved, that battery will help you to solve the power supply issue. when you plug the battery please watch out for the positive and negative anodes, follow the picture to connect the battery in case of damage the board."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/battery-board.png"})),(0,o.kt)("p",null,"In addition, the board charged the battery when you plug the battery cable and the type-C cable and switch the button to on."),(0,o.kt)("p",null,"As the below picture, if the LED flashing which means the battery does not charge or the board does not connect battery if the LED keeps light on which is mean the battery is charging."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/XIAO_flash_light.png"})),(0,o.kt)("h2",{id:"modules-on-the-expansion-board"},(0,o.kt)("strong",{parentName:"h2"},"Modules on the expansion board")),(0,o.kt)("p",null,"Rich peripherals on board including:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"OLED display:")," Visual data display without connecting to PC, which enables debug in a more efficient way, and builds application such as a sensor hub, data monitor system, etc.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"RESET button:")," No more jumper wire and short circuit, easy reset with just one click.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"SWD debug:")," SWD pin led out as male pin header, making debugger connection and firmware download much easier.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"High precision RTC:")," High precision real-time clock with battery backup, enable maintain accurate time when the main power is turned off.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Expandable memory:")," With a MicroSD card slot on the back, no worry on memory limit any more when adding libraries and using circuit python.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"User button:")," Besides the RESET button, also provide with another user-defined button.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Passive buzzer:"),' Same passive buzzer on Wio Terminal, with which you could change the PMW frequency to award different beep sound to get a "buzzer music".')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Grove connectors:")," All pin led out, plug and play grove connectors support common data protocols (Grove IIC",(0,o.kt)("em",{parentName:"p"},"2, Grove UART"),"1, A0/D0 Grove*1)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Lipo Battery Charging:")," JST2.0mm standard lipo battery connector and battery management system, supports both USB and lipo battery power supply, and easy onboard battery recharge.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"5V servo connector:")," 5V output led out to male header for 5V servo and sensor connection."))),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/444.png"})),(0,o.kt)("h3",{id:"oled-display"},(0,o.kt)("strong",{parentName:"h3"},"OLED Display")),(0,o.kt)("p",null,"This example introduces how to use the OLED display on the Seeed Studio Expansion Base for XIAO."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:550,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Hello_world11.jpg"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Install the Seeed Studio XIAO SAMD21 on the Expansion board then conect the Type-C cable."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Install the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/olikraus/U8g2_Arduino"},(0,o.kt)("strong",{parentName:"a"},"u8g2"))," library, this is the guide ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},(0,o.kt)("strong",{parentName:"a"},"how to install the library")),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3"),". Copy the code and stick on the Ardiono IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"OLED Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},'#include <Arduino.h>\n#include <U8x8lib.h>\n#include <Wire.h>\n\nU8X8_SSD1306_128X64_NONAME_HW_I2C u8x8(/* clock=*/ PIN_WIRE_SCL, /* data=*/ PIN_WIRE_SDA, /* reset=*/ U8X8_PIN_NONE);   // OLEDs without Reset of the Display\n\nvoid setup(void) {\n  u8x8.begin();\n  u8x8.setFlipMode(1);   // set number from 1 to 3, the screen word will rotary 180\n}\n\nvoid loop(void) {\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 0);\n  u8x8.print("Hello World!");\n}\n')),(0,o.kt)("h3",{id:"led-control-by-user-button"},(0,o.kt)("strong",{parentName:"h3"},"LED control by User Button")),(0,o.kt)("p",null,"This example introduces how to use the button on the Seeed Studio Expansion Base for XIAO to control the LED on the Seeed Studio XIAO SAMD21."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/LED_botton.gif"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Install the Seeed Studio XIAO SAMD21 on the Expansion board then conect the Type-C cable."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Open Arduino IDE, Copy the code and stick on the Ardiono IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},"const int buttonPin = 1;     // the number of the pushbutton pin\nint buttonState = 0;         // variable for reading the pushbutton status\n\nvoid setup() {\n  // initialize the LED pin as an output:\n  pinMode(LED_BUILTIN, OUTPUT);\n  // initialize the pushbutton pin as an input:\n  pinMode(buttonPin, INPUT_PULLUP);\n\n}\n\nvoid loop() {\n  // read the state of the pushbutton value:\n  buttonState = digitalRead(buttonPin);\n\n  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:\n  if (buttonState == HIGH) {\n    // turn LED on:\n    digitalWrite(LED_BUILTIN, HIGH);\n  } else {\n    // turn LED off:\n    digitalWrite(LED_BUILTIN, LOW);\n  }\n\n}\n")),(0,o.kt)("h3",{id:"buzzer"},(0,o.kt)("strong",{parentName:"h3"},"Buzzer")),(0,o.kt)("p",null,"The Buzzer is default connected to the Pin A3, if you want to remove the buzzer function, just follow the below picture, cut off the line."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:800,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/111123232325.png"})),(0,o.kt)("h4",{id:"play-song-with-passive-buzzer"},(0,o.kt)("strong",{parentName:"h4"},"Play Song with Passive Buzzer")),(0,o.kt)("p",null,"This example uses Buzzer on the Seeed Studio Expansion Base for XIAO to play Happy birthday."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Install the Seeed Studio XIAO SAMD21 on the Expansion board then conect the Type-C cable."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Open Arduino IDE, Copy the code and stick on the Ardiono IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},"int speakerPin = A3;\nint length = 28; // the number of notes\nchar notes[] = \"GGAGcB GGAGdc GGxecBA yyecdc\";\nint beats[] = { 2, 2, 8, 8, 8, 16, 1, 2, 2, 8, 8, 8, 16, 1, 2, 2, 8, 8, 8, 8, 16, 1, 2, 2, 8, 8, 8, 16 };\nint tempo = 150;\nvoid playTone(int tone, int duration) {\n  for (long i = 0; i < duration * 1000L; i += tone * 2) {\n    digitalWrite(speakerPin, HIGH);\n    delayMicroseconds(tone);\n    digitalWrite(speakerPin, LOW);\n    delayMicroseconds(tone);\n  }\n}\n\nvoid playNote(char note, int duration) {\n  char names[] = {'C', 'D', 'E', 'F', 'G', 'A', 'B',\n                  'c', 'd', 'e', 'f', 'g', 'a', 'b',\n                  'x', 'y'\n                 };\n  int tones[] = { 1915, 1700, 1519, 1432, 1275, 1136, 1014,\n                  956,  834,  765,  593,  468,  346,  224,\n                  655 , 715\n                };\n  int SPEE = 5;\n\n  // play the tone corresponding to the note name\n\n  for (int i = 0; i < 16; i++) {\n    if (names[i] == note) {\n      int newduration = duration / SPEE;\n      playTone(tones[i], newduration);\n    }\n  }\n}\n\nvoid setup() {\n  pinMode(speakerPin, OUTPUT);\n}\n\nvoid loop() {\n  for (int i = 0; i < length; i++) {\n    if (notes[i] == ' ') {\n      delay(beats[i] * tempo); // rest\n    } else {\n      playNote(notes[i], beats[i] * tempo);\n    }\n    // pause between notes\n    delay(tempo);\n  }\n}\n")),(0,o.kt)("h3",{id:"servo-control-by-rotary-angle-sensor"},(0,o.kt)("strong",{parentName:"h3"},"Servo Control by Rotary Angle Sensor")),(0,o.kt)("p",null,"This example uses a rotary angle sensor to control servo via integration ports on the Seeed Studio Expansion Base for XIAO."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:700,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/rotary_servo.gif"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Install the Seeed Studio XIAO SAMD21 on the Expansion board then conect the Type-C cable."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Connect the Servo cable to ",(0,o.kt)("strong",{parentName:"p"},"I2C")," port, rotary angle sensor to ",(0,o.kt)("strong",{parentName:"p"},"D0"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3"),". Open Arduino IDE, Copy the code and stick on the Ardiono IDE then upload it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},'#include <Servo.h>\n#include <Arduino.h>\n#include <Wire.h>\n\n#define ROTARY_ANGLE_SENSOR A0\n#define ADC_REF 3 //reference voltage of ADC is 3v.If the Vcc switch on the seeeduino\n#define GROVE_VCC 3 //VCC of the grove interface is normally 3v\n#define FULL_ANGLE 300 //full value of the rotary angle is 300 degrees\n\nServo myservo;  // create servo object to control a servo\n// twelve servo objects can be created on most boards\n\nint pos = 0;    // variable to store the servo position\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(ROTARY_ANGLE_SENSOR, INPUT);\n  myservo.attach(5);  // attaches the servo on pin 9 to the servo object\n}\n\nvoid loop() {\n\n  float voltage;\n  int sensor_value = analogRead(ROTARY_ANGLE_SENSOR);\n  voltage = (float)sensor_value * ADC_REF / 1023;\n  float degrees = (voltage * FULL_ANGLE) / GROVE_VCC;\n  Serial.println("The angle between the mark and the starting position:");\n  Serial.println(degrees);\n  delay(50);\n  myservo.write(degrees);\n}\n')),(0,o.kt)("h3",{id:"rtc-clock-display"},(0,o.kt)("strong",{parentName:"h3"},"RTC clock display")),(0,o.kt)("p",null,"This example uses RTC to display the clock on the OLED."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/time_clock.gif"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Install the Seeed Studio XIAO SAMD21 on the Expansion board then conect the Type-C cable."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Install the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/olikraus/U8g2_Arduino"},(0,o.kt)("strong",{parentName:"a"},"u8g2"))," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Bill2462/PCF8563-Arduino-Library"},(0,o.kt)("strong",{parentName:"a"},"PCF8563"))," library, this is the guide ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},(0,o.kt)("strong",{parentName:"a"},"how to install the library")),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3"),". Copy the code and stick on the Ardiono IDE then upload it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},'#include <Arduino.h>\n#include <U8x8lib.h>\n#include <PCF8563.h>\nPCF8563 pcf;\n#include <Wire.h>\n\nU8X8_SSD1306_128X64_NONAME_HW_I2C u8x8(/* clock=*/ PIN_WIRE_SCL, /* data=*/ PIN_WIRE_SDA, /* reset=*/ U8X8_PIN_NONE);   // OLEDs without Reset of the Display\n\nvoid setup() {\n  Serial.begin(115200);\n  u8x8.begin();\n  u8x8.setFlipMode(1);\n  Wire.begin();\n  pcf.init();//initialize the clock\n  pcf.stopClock();//stop the clock\n  pcf.setYear(20);//set year\n  pcf.setMonth(10);//set month\n  pcf.setDay(23);//set dat\n  pcf.setHour(17);//set hour\n  pcf.setMinut(33);//set minut\n  pcf.setSecond(0);//set second\n  pcf.startClock();//start the clock\n}\n\nvoid loop() {\n  Time nowTime = pcf.getTime();//get current time\n  u8x8.setFont(u8x8_font_chroma48medium8_r);   // choose a suitable font\n\n  u8x8.setCursor(0, 0);\n  u8x8.print(nowTime.day);\n  u8x8.print("/");\n  u8x8.print(nowTime.month);\n  u8x8.print("/");\n  u8x8.print("20");\n  u8x8.print(nowTime.year);\n  u8x8.setCursor(0, 1);\n  u8x8.print(nowTime.hour);\n  u8x8.print(":");\n  u8x8.print(nowTime.minute);\n  u8x8.print(":");\n  u8x8.println(nowTime.second);\n  delay(1000);\n}\n')),(0,o.kt)("h2",{id:"acrylic-case-for-seeed-studio-seeed-studio-expansion-base-for-xiao"},"Acrylic Case for Seeed Studio Seeed Studio Expansion Base for XIAO"),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Acrylic_Case/110010024_Preview-08.png"})),(0,o.kt)("p",{style:{textAlign:"center"}},(0,o.kt)("a",{href:"https://www.seeedstudio.com/XIAO-p-4812.html",target:"_blank"},(0,o.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/get_one_now.png",border:0}))),(0,o.kt)("p",null,"We made this ",(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/XIAO-p-4812.html"},(0,o.kt)("strong",{parentName:"a"},"acrylic case"))," for protecting the Seeed Studio Expansion Base for XIAO, those are acrylic case components."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Acrylic_Case/componets.png"})),(0,o.kt)("p",null,"Compare with the Grove Shield for Seeed Studio XIAO , the Seeed Studio Expansion Base for XIAO added a lot useful modules for the users."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Acrylic_Case/board_compare.png"})),(0,o.kt)("p",null,"This Acrylic case easy to build it up and it also can dress the case look neater."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Acrylic_Case/build_up.gif"})),(0,o.kt)("h2",{id:"circuitpython-on-seeed-studio-xiao-samd21-with-expansion-board"},(0,o.kt)("strong",{parentName:"h2"},"Circuitpython on Seeed Studio XIAO SAMD21 with expansion board")),(0,o.kt)("p",null,"This wiki introduce how to install and run the official ",(0,o.kt)("a",{parentName:"p",href:"https://circuitpython.org/"},(0,o.kt)("strong",{parentName:"a"},"CircuitPython"))," by Adafruit Industries on the ",(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Pre-Soldered-p-4747.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio XIAO SAMD21 development board"))," !"),(0,o.kt)("p",null,"CircuitPython is a programming language designed to simplify experimenting and learning to program on low-cost microcontroller boards. It makes getting started easier than ever with no upfront desktop downloads needed. Once you get your board set up, open any text editor, and get started editing code. For more info, please refer to ",(0,o.kt)("a",{parentName:"p",href:"https://learn.adafruit.com/welcome-to-circuitpython/what-is-circuitpython"},(0,o.kt)("strong",{parentName:"a"},"here")),"."),(0,o.kt)("h2",{id:"installing-circuitpython"},(0,o.kt)("strong",{parentName:"h2"},"Installing CircuitPython")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1.")," Install the Seeed Studio XIAO SAMD21 on the Expansion board then conect the Type-C cable."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2.")," Download the official ",(0,o.kt)("a",{parentName:"p",href:"https://circuitpython.org/board/seeeduino_xiao/"},(0,o.kt)("strong",{parentName:"a"},"CircuitPython Bootloader for Seeed Studio XIAO SAMD21 ")),". A ",(0,o.kt)("inlineCode",{parentName:"p"},".uf2")," , the flie will be store in your PC download."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:850,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/circutpyhthon.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3.")," Entering the DFU bootloader mode by press the reset button twice quickly on the Seeed Studio Expansion Base for XIAO, then your PC will appear Arduino drive."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/reboot_XIAO.gif"})),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:850,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/arduino_boot.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4.")," An external drive named ",(0,o.kt)("inlineCode",{parentName:"p"},"Arduino")," should appear in your PC. Drag the downloaded CircuitPython uf2 files to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Arduino")," drive."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:850,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/python_to_arduino.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 5.")," Once loaded the CircuitPython bootloader, unplug the USB Type-C and re-connect. A new external drive called ",(0,o.kt)("inlineCode",{parentName:"p"},"CIRCUITPY")," should be appear."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:850,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Circuitpy.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 6.")," Now, CircuitPython is loaded on Seeed Studio XIAO SAMD21 ! All you need to do it's to write you python program and name it ",(0,o.kt)("inlineCode",{parentName:"p"},"main.py")," and drag it onto the ",(0,o.kt)("inlineCode",{parentName:"p"},"CIRCUITPY")," drive."),(0,o.kt)("h3",{id:"circuitpyhton-blink-example"},(0,o.kt)("strong",{parentName:"h3"},"CircuitPyhton Blink example")),(0,o.kt)("p",null,"There is a simple example introduce how to use the CirsuitPython on the Seeed Studio XIAO ."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1")," Create a txt file name ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," on the  ",(0,o.kt)("inlineCode",{parentName:"p"},"CIRCUITPY")," drive."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:850,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/circuit_python_pic/main_create.png"})),(0,o.kt)("br",null),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," name is one of these: ",(0,o.kt)("strong",{parentName:"p"},"code.txt"),", ",(0,o.kt)("strong",{parentName:"p"},"code.py"),", ",(0,o.kt)("strong",{parentName:"p"},"main.py"),", ",(0,o.kt)("strong",{parentName:"p"},"main.txt"),", there is more detail about ",(0,o.kt)("a",{parentName:"p",href:"https://circuitpython.readthedocs.io/en/6.0.x/README.html#behavior"},(0,o.kt)("strong",{parentName:"a"},"this behavior")),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2")," Paste the code on the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," file then save it, you will see the orange LED blinking on the Seeed Studio XIAO SAMD21 board."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"import time\nimport board\nfrom digitalio import DigitalInOut, Direction\n\nled = DigitalInOut(board.D13)\nled.direction = Direction.OUTPUT\n\nwhile True:\n    led.value = True\n    time.sleep(1)\n    led.value = False\n    time.sleep(1)\n")),(0,o.kt)("h3",{id:"microsd-card-for-circuitpython"},(0,o.kt)("strong",{parentName:"h3"},"MicroSD card for circuitpython")),(0,o.kt)("p",null,"The Seeed Studio XIAO SAMD21 build-in about 40 KB flash, but it may have not enough space to store the large size python code file, fortunately, Seeed Studio XIAO SAMD21 Expansion board built-in an MicroSD card slot for extending the store space, so you can follow this instruction to learn how to run the circuitpython on the MicroSD card."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The MicroSD card system format is FAT or exFAT. If you use other MicroSD card system format that will cause the MicroSD card can not be recognized.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1.")," Prepare a micro SD Card to plug in the Seeed Studio XIAO SAMD21 expansion board."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2.")," Assume you do not download the ",(0,o.kt)("a",{parentName:"p",href:"https://circuitpython.org/board/seeeduino_xiao/"},(0,o.kt)("strong",{parentName:"a"},"circuitPython file"))," yet, please refer to ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Seeeduino-XIAO-Expansion-Board/#installing-circuitpython"},(0,o.kt)("strong",{parentName:"a"},"Installing CircuitPython"))," chapter."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3.")," Download ",(0,o.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/lib.zip"},(0,o.kt)("strong",{parentName:"a"},"lib"))," unzips the file, then replace it with the new lib in the  ",(0,o.kt)("inlineCode",{parentName:"p"},"CIRCUITPY"),"."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:850,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/circuit_python_pic/lib_replace.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4.")," Download the ",(0,o.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/main.py"},(0,o.kt)("strong",{parentName:"a"},"main.py"))," file in the ",(0,o.kt)("inlineCode",{parentName:"p"},"CIRCUITPY")," drive."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The ",(0,o.kt)("inlineCode",{parentName:"strong"},"main.py")," code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},'import sd\nf = open("/sd/hello.txt", "r")   ## read the file from SD card\nprint(f.read())\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 5.")," Download the ",(0,o.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/sd.py"},(0,o.kt)("strong",{parentName:"a"},"sd.py"))," file in the ",(0,o.kt)("inlineCode",{parentName:"p"},"CIRCUITPY")," drive."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The ",(0,o.kt)("inlineCode",{parentName:"strong"},"sd.py")," code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},'import os\nimport adafruit_sdcard\nimport board\nimport busio\nimport digitalio\nimport storage\nimport sys\n\n# Connect to the card and mount the filesystem for Seeed Studio XIAO .\nspi = busio.SPI(board.SCK, board.MOSI, board.MISO)\ncs = digitalio.DigitalInOut(board.D2)\nsdcard = adafruit_sdcard.SDCard(spi, cs)\nvfs = storage.VfsFat(sdcard)\nstorage.mount(vfs, "/sd")\nsys.path.append("/sd")\nsys.path.append("/sd/lib")  ## switch to the path to SD card\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Buzzer Example")),(0,o.kt)("p",null,"This example for test the buzzer via the run the ",(0,o.kt)("inlineCode",{parentName:"p"},"buzzer.py")," in the MicroSD card."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1.")," You can just paste ",(0,o.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/buzzer.py"},(0,o.kt)("strong",{parentName:"a"},"buzzer.py"))," in the MicroSD card."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:850,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/circuit_python_pic/sd_card_store.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2.")," Open ",(0,o.kt)("inlineCode",{parentName:"p"},"main.py")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"CIRCUITPY")," drive."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:850,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/circuit_python_pic/main.PY.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3.")," Add ",(0,o.kt)("inlineCode",{parentName:"p"},"import buzzer")," in the main.py file."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:650,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/add_buzzer.png"})),(0,o.kt)("p",null,"When you finish all the step, the buzzer will work. If you to run other python files in the MicroSD card, please imitate the example."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If you want back to Arduino mode, you just need to upload any programme on the Arduino IDE.")),(0,o.kt)("h2",{id:"demo"},(0,o.kt)("strong",{parentName:"h2"},"Demo")),(0,o.kt)("h3",{id:"project-1---remote-control-fan"},(0,o.kt)("strong",{parentName:"h3"},"Project 1 - Remote control fan")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Overview")),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:600,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/remoteFan-g.gif"})),(0,o.kt)("p",null,"This wiki introduce how to make a Mini fan to plase on your room keep cool."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Feature")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Automatic swing fan")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Component required")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio XIAO SAMD21 ")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-Mini-Fan-v1-1.html"},(0,o.kt)("strong",{parentName:"a"},"Grove mini fan")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-Servo.html"},(0,o.kt)("strong",{parentName:"a"},"Grove-Servo")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-Infrared-Receiver.html"},(0,o.kt)("strong",{parentName:"a"},"Grove - IR (Infrared) Receiver"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hardware Connection")),(0,o.kt)("p",null,"Please follow the same color line to connect each sensor on the board. Please connect the fan grove cable to D0, servo grove cable to ",(0,o.kt)("strong",{parentName:"p"},"I2C"),", IR grove cable to ",(0,o.kt)("strong",{parentName:"p"},"D7"),"."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:700,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/remote_fan_pic.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arduino Instructions")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Follow the connection picture connect all the sensor on the board."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Install the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_IRSendRev"},(0,o.kt)("strong",{parentName:"a"},"Arduino-IRremote"))," library, this is the guide ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},(0,o.kt)("strong",{parentName:"a"},"how to install the library")),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4"),". Copy the code stick on the Aruino IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 5"),". Place the Fan in the safety position, try to press the button make sure it can work safely."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},"#include <IRremote.h>\n#include <Servo.h>\n\nServo myservo;  // create servo object to control a servo\nint RECV_PIN = 7; // set pin 2 as IR control\n\nIRrecv irrecv(RECV_PIN);\n\ndecode_results results;\n\nint pos = 90;    // variable to store the servo position\nint fanPin = 0;  // set D6 as control switch\nint fanState = LOW;\nint IO = 0;\n\nvoid setup()\n{\n  Serial.begin(9600);\n  Serial.println(\"Enabling IRin\");  // remind enabling IR\n  irrecv.enableIRIn(); // Start the receiver\n  Serial.println(\"Enabled IRin\");\n  myservo.attach(5);  // attaches the servo on pin 2 to the servo object\n  pinMode(fanPin, OUTPUT);\n\n}\n\nvoid loop() {\n  if (irrecv.decode(&results)) { //checking IR signal\n    if (results.value == 2155829415) {    // Power off/on\n      IO++;\n      if (IO % 2 == 0) {\n        fanState = HIGH;\n        digitalWrite(fanPin, fanState);\n        delay(100);\n      }\n      else {\n        fanState = LOW;\n        digitalWrite(fanPin, fanState);\n        delay(100);\n      }\n    }\n\n    if (results.value == 2155821255 ) {    // fan swing to left\n      for (pos; pos <= 89; pos += 1) { // goes from 0 degrees to 90 degrees\n        // in steps of 1 degree\n        myservo.write(pos);              // tell servo to go to position in variable 'pos'\n\n        delay(40);                       // waits 15ms for the servo to reach the position\n        if (irrecv.decode(&results)) {\n          irrecv.resume();\n          if (results.value == 2155870215)\n            break;\n        }\n      }\n    }\n\n    if (results.value == 2155870215 ) {    // fan swing to right\n      for (pos; pos >= 1; pos -= 1) { // goes from 90 degrees to 0 degrees\n        myservo.write(pos);              // tell servo to go to position in variable 'pos'\n        delay(40);                       // waits 15ms for the servo to reach the position\n\n        if (irrecv.decode(&results)) {\n          irrecv.resume();\n          if (results.value == 2155821255)\n            break;\n        }\n      }\n    }\n    Serial.println(pos);\n    Serial.println(results.value, HEX);\n    Serial.println(results.value);\n    irrecv.resume();                    //recive next intrustion\n  }\n  delay(100);\n}\n")),(0,o.kt)("h3",{id:"project-2---remote-control-car"},(0,o.kt)("strong",{parentName:"h3"},"Project 2 - Remote control car")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Overview")),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:400,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/remote_control_car.gif"})),(0,o.kt)("p",null,"This wiki introduce how to make a remote control car."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Feature")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Mini size car easy to across the narrow road")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Component required")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio XIAO ")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-I2C-Mini-Motor-Driver.html"},(0,o.kt)("strong",{parentName:"a"},"Grove - I2C Mini Motor Driver")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/130-DC-Motor-p-2023.html"},(0,o.kt)("strong",{parentName:"a"},"DC Motor")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-Infrared-Receiver.html"},(0,o.kt)("strong",{parentName:"a"},"Grove - IR (Infrared) Receiver"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hardware Connection")),(0,o.kt)("p",null,"Please follow the same color line to connect each sensor on the board. Please connect the IR sensor grove cable to D0, Mini Motor Driver grove cable to I2C."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:700,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/remote_car.jpg"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arduino Instructions")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Follow the connection picture connect all the sensor on the board."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Download the ",(0,o.kt)("a",{parentName:"p",href:"https://www.arduino.cc/en/Main/software"},(0,o.kt)("strong",{parentName:"a"},"Aruidno IDE"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3"),". Install the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_IRSendRev"},(0,o.kt)("strong",{parentName:"a"},"Arduino-IRremote"))," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Drv8830_Motor_Driver"},(0,o.kt)("strong",{parentName:"a"},"Motor driver"))," library, this is the guide ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},(0,o.kt)("strong",{parentName:"a"},"how to install the library")),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4"),". Copy the code stick on the Aruino IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CPP"},'#include <Arduino.h>\n#include <U8g2lib.h>\n#include <IRremote.h>\n#include <SparkFunMiniMoto.h>  // Include the MiniMoto library\n// Create two MiniMoto instances, with different address settings.\nMiniMoto motor0(0xC4); // A1 = 1, A0 = clear\nMiniMoto motor1(0xC0); // A1 = 1, A0 = 1 (default)\n\n#define FAULTn  1     // Pin used for fault detection.\n\nint RECV_PIN = 0; // set pin 2 as IR control\nIRrecv irrecv(RECV_PIN);\ndecode_results results;\n\nvoid setup() {\n  Serial.begin(9600);\n  Serial.println("Enabling IRin");  // remind enabling IR\n  irrecv.enableIRIn(); // Start the receiver\n  pinMode(FAULTn, INPUT);\n}\n\nvoid loop() {\n  if (irrecv.decode(&results)) { //checking IR signal\n    if (results.value == 2155862055) {\n      //Forward  2155862055\n      motor0.drive(-600);\n      motor1.drive(600);\n      delayUntil(20);\n    }\n    if (results.value == 2155813095) {\n      //Brake   2155813095\n      motor0.brake();\n      motor1.brake();\n      delay(100);\n    }\n    if (results.value == 2155823295) {\n      //backward  2155823295\n      motor0.drive(600);\n      motor1.drive(-600);\n      delayUntil(20);\n    }\n    if (results.value == 2155829415) {\n      //Stop  2155829415\n      motor0.stop();\n      motor1.stop();\n      delay(100);\n    }\n    if (results.value == 2155821255) {\n      //turn right   2155821255\n      motor0.drive(600);\n      motor1.drive(600);\n      delayUntil(20);\n    }\n    if (results.value == 2155837575) {\n      //turn left    2155837575\n      motor0.drive(-600);\n      motor1.drive(-600);\n      delayUntil(20);\n    }\n    irrecv.resume();                    //recive next intrustion\n\n  }\n  delay(100);\n}\n\nvoid delayUntil(unsigned long elapsedTime) {\n  unsigned long startTime = millis();\n  while (startTime + elapsedTime > millis()) {\n    if (digitalRead(FAULTn) == LOW) {\n      byte result = motor0.getFault();\n      result = motor1.getFault();\n    }\n  }\n}\n')),(0,o.kt)("h3",{id:"project-3---fingerprint-unlocks-treasure-box--seeed-studio-xiao"},(0,o.kt)("strong",{parentName:"h3"},"Project 3 - Fingerprint unlocks treasure box -Seeed Studio XIAO")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Overview")),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:400,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Fingerprint_unlocks/fingerprint_open.gif"})),(0,o.kt)("p",null,"This box can store your important stuff, and you are not worried about some people will take your thing, the box has the fingerprint function to protecting your thing, and if the fingerprint authorization failed, the buzzer will alarm and the LED ring will display the red colour, only your finger has registered on the board when the begin, then put your finger on the board, when fingerprint pass the authorization, the LED ring will display green colour."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Feature")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Easy to record your fingerprint"),(0,o.kt)("li",{parentName:"ul"},"LED ring can remind you the lock state"),(0,o.kt)("li",{parentName:"ul"},"The OLED screen can display the current information"),(0,o.kt)("li",{parentName:"ul"},"The buzzer can remind you the fingerprint whether pass authorization")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Component required")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio XIAO SAMD21 ")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/80263?s=BAhJIhMzNzA5MzAsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove - Capacitive Fingerprint Scanner/Sensor")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/80264?s=BAhJIhMzNzA5MzAsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove RGB LED Ring - 24")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/80265?s=BAhJIhMzNzA5MzAsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove - Servo"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hardware Connection")),(0,o.kt)("p",null,"Please follow the same color line to connect each sensor on the board. Please connect the IR sensor grove cable to D0, Mini Motor Driver grove cable to I2C."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:700,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Fingerprint_unlocks/finger_pinter.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arduino Instructions")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Follow the connection picture connect all the sensor on the board."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Download the ",(0,o.kt)("a",{parentName:"p",href:"https://www.arduino.cc/en/Main/software"},(0,o.kt)("strong",{parentName:"a"},"Aruidno IDE"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3"),". Install the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/olikraus/U8g2_Arduino"},(0,o.kt)("strong",{parentName:"a"},"u8g2")),",  ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/arduino-libraries/Servo"},(0,o.kt)("strong",{parentName:"a"},"Servo")),",  ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_KCT202"},(0,o.kt)("strong",{parentName:"a"},"Seeed_Arduino_KCT202"))," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_LED_Ring"},(0,o.kt)("strong",{parentName:"a"},"Seeed_LED_Ring"))," library, this is the guide ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},(0,o.kt)("strong",{parentName:"a"},"how to install the library")),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4"),". Copy the code stick on the Aruino IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Demonstration")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Record your fingerprint")),(0,o.kt)("p",null,"The screen will display finger recording at the begin, you just need to put your finger on the finger device, after that, the program will analyze your fingerprint, then finish registered."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:700,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Fingerprint_unlocks/fingerprint_record.gif"})),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Identity authorization(pass certification)")),(0,o.kt)("p",null,'The screen will display "Please verify", you need to put your finger on the fingerprint device, then the LED ring will turn to green colour.'),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:700,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Fingerprint_unlocks/fingerprint_open.gif"})),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Identity authorization(unpass certification)")),(0,o.kt)("p",null,'If other people put their finger on it, the LED ring will turn to red colour and the board will display "Identity deny" meanwhile the alarm will be work.'),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:700,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Fingerprint_unlocks/fingerprint_close.gif"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-C"},'#include <Servo.h>\n#include <Arduino.h>\n#include <U8x8lib.h>\n#include "ATSerial.h"\n#include "Protocol.h"\n#include "KCT202.h"\n#include "Adafruit_NeoPixel.h"\n\n#define PIXEL_PIN    2    // Digital IO pin connected to the NeoPixels.\n#define PIXEL_COUNT 24\n#define debug SerialUSB\n#define uart  Serial1\nFingerPrint_KCT202<Uart, Serial_> kct202;\nAdafruit_NeoPixel strip = Adafruit_NeoPixel(PIXEL_COUNT, PIXEL_PIN, NEO_GRB + NEO_KHZ800);\n\nServo myservo;\n\nProtocol_oprt oprt;\nuint8_t err_code = 0;\nuint8_t param[10];\nuint32_t param_len;\nint pos = 0;\nconst int buttonPin = 1;\nint buttonState = 0;\nint BuzzerPin = A3;\n\nU8X8_SSD1306_128X64_NONAME_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE);\n\nvoid setup(void) {\n  Serial.begin(115200);\n  strip.setBrightness(255);\n  strip.begin();\n  strip.show(); // Initialize all pixels to \'off\'\n  colorWipe(strip.Color(125, 0, 125), 50);\n  u8x8.begin();\n  u8x8.setFlipMode(0);\n  debug.begin(115200);\n  pinMode(buttonPin, INPUT_PULLUP);\n  pinMode(BuzzerPin, OUTPUT);\n  kct202.begin(uart, debug);\n  myservo.attach(0);\n  myservo.write(0);\n  kct202.autoRegisterFingerPrint(1, 4, LED_OFF_AFTER_GET_GRAGH | PRETREATMENT_GRAGH | NOT_RET_FOR_EVERY_STEP | OVERRIDE_CURR_FINGER_PRINT);\n\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 3);\n  u8x8.print("finger recording");\n  if (0 == kct202.getRegisterResponAndparse()) {\n    debug.println("Register ok!");\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 3);\n    u8x8.print("    be ready    ");\n    delay(500);\n    colorWipe(strip.Color(0, 125, 125), 50);\n    u8x8.setCursor(0, 3);\n    u8x8.print("   *** 3 ***    ");\n    delay(500);\n    u8x8.setCursor(0, 3);\n    u8x8.print("   *** 2 ***    ");\n    delay(500);\n    u8x8.setCursor(0, 3);\n    u8x8.print("   *** 1 ***    ");\n    delay(500);\n    u8x8.setCursor(0, 3);\n    u8x8.print("   Registered");\n    delay(800);\n  }\n}\n\nvoid loop(void) {\n  uint16_t finger_num = 0;\n\n  kct202.autoVerifyFingerPrint(CHECK_ALL_FINGER_TEMP,\n                               LED_OFF_AFTER_GET_GRAGH | PRETREATMENT_GRAGH | NOT_RET_FOR_EVERY_STEP);\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 3);\n  u8x8.print(" Please verify  ");\n\n  if (0 == kct202.getVerifyResponAndparse(finger_num)) {\n    debug.println("Verify ok!");\n    debug.print("Your finger temp id = ");\n    debug.println(finger_num, HEX);\n    colorWipe(strip.Color(0, 255, 30), 50);\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 3);\n    u8x8.print("Identity comfirm");\n    delay(800);\n\n    analogWrite(BuzzerPin, 128);\n    delay(100);\n    analogWrite(BuzzerPin, 0);\n    delay(100);\n    analogWrite(BuzzerPin, 128);\n    delay(100);\n    analogWrite(BuzzerPin, 0);\n    delay(100);\n\n    for (pos = 0; pos <= 90; pos += 1) {\n      myservo.write(pos);\n      delay(15);\n    }\n    while (1) {\n      //      pinMode(buttonPin, INPUT);\n      buttonState = digitalRead(buttonPin);\n      u8x8.setFont(u8x8_font_chroma48medium8_r);\n      u8x8.setCursor(0, 3);\n      u8x8.print("Please close    ");\n      Serial.println(pos);\n      Serial.println(buttonState);\n      if (buttonState == LOW && pos == 91) {\n        for (pos = 91; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees\n          u8x8.setFont(u8x8_font_chroma48medium8_r);\n          u8x8.setCursor(0, 3);\n          u8x8.print("Lock closing    ");\n          myservo.write(pos);              // tell servo to go to position in variable \'pos\'\n          delay(15);                       // waits 15ms for the servo to reach the position\n        }\n        colorWipe(strip.Color(255, 0, 0), 50);\n        break;\n      }\n    }\n  }\n\n  else {\n    colorWipe(strip.Color(255, 0, 0), 50);\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 3);\n    u8x8.print(" Identity deny ");\n    //    myservo.write(0);\n    delay(200);\n\n  analogWrite(BuzzerPin, 250);\n  delay(2000);\n    analogWrite(BuzzerPin, 0);\n  delay(100);\n\n    u8x8.setCursor(0, 3);\n    u8x8.print("  Please retry  ");\n    delay(1500);\n  }\n}\n\nvoid colorWipe(uint32_t c, uint8_t wait) {\n  for (uint16_t i = 0; i < strip.numPixels(); i++) {\n    strip.setPixelColor(i, c);\n    strip.show();\n    delay(70);\n  }\n}\n')),(0,o.kt)("h3",{id:"project-4---seeed-studio-expansion-base-for-xiao---mjolnir"},(0,o.kt)("strong",{parentName:"h3"},"Project 4 - Seeed Studio Expansion Base for XIAO - mjolnir")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Overview")),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:400,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/mjolnir/humer1.png"})),(0,o.kt)("p",null,"This hammer is simulated Mjolnir, you need you to record your fingerprint on this device then you will become its master. The hammer needs a magnet to adsorb on the grove - electromagnet until its master to unlock via fingerprint, the hammer can take away."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Component required")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio XIAO SAMD21 ")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/81052?s=BAhJIhMzNzQxMDUsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove - Capacitive Fingerprint Scanner/Sensor")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/32769?s=BAhJIhMzNzQxMDUsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove - Electromagnet"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hardware Connection")),(0,o.kt)("p",null,"Please follow the same color line to connect each sensor on the board. Please connect the IR sensor grove cable to D0, Mini Motor Driver grove cable to I2C."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:400,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/mjolnir/66666.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arduino Instructions")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Follow the connection picture connect all the sensor on the board."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Download the ",(0,o.kt)("a",{parentName:"p",href:"https://www.arduino.cc/en/Main/software"},(0,o.kt)("strong",{parentName:"a"},"Aruidno IDE"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3"),". Install the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/olikraus/U8g2_Arduino"},(0,o.kt)("strong",{parentName:"a"},"u8g2"))," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_KCT202"},(0,o.kt)("strong",{parentName:"a"},"Seeed_Arduino_KCT202"))," library, this is the guide ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},(0,o.kt)("strong",{parentName:"a"},"how to install the library")),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4"),". Copy the code stick on the Aruino IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-C"},'#include <U8x8lib.h>\n#include "ATSerial.h"\n#include "Protocol.h"\n#include "KCT202.h"\n\n#define debug SerialUSB\n#define uart  Serial1\nFingerPrint_KCT202<Uart, Serial_> kct202;\n\nProtocol_oprt oprt;\nuint8_t err_code = 0;\nuint8_t param[10];\nuint32_t param_len;\n\nint Electromagnet = 0;\n\nU8X8_SSD1306_128X64_NONAME_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE);\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n  // initialize the digital pin as an output.\n\n  u8x8.begin();\n  u8x8.setFlipMode(0);\n  debug.begin(115200);\n  pinMode(Electromagnet, OUTPUT);\n  digitalWrite(Electromagnet, HIGH);  // turn the Electromagnet on (HIGH is the voltage level)\n  kct202.begin(uart, debug);\n  kct202.autoRegisterFingerPrint(1, 4, LED_OFF_AFTER_GET_GRAGH | PRETREATMENT_GRAGH | NOT_RET_FOR_EVERY_STEP | OVERRIDE_CURR_FINGER_PRINT);\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 3);\n  u8x8.print("finger recording");\n  if (0 == kct202.getRegisterResponAndparse()) {\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 3);\n    u8x8.print("    be ready    ");\n    delay(500);\n    u8x8.setCursor(0, 3);\n    u8x8.print("   *** 3 ***    ");\n    delay(500);\n    u8x8.setCursor(0, 3);\n    u8x8.print("   *** 2 ***    ");\n    delay(500);\n    u8x8.setCursor(0, 3);\n    u8x8.print("   *** 1 ***    ");\n    delay(500);\n    u8x8.setCursor(0, 3);\n    u8x8.print("   Registered");\n    delay(800);\n  }\n\n}\n\n  // the loop routine runs over and over again forever:\n  void loop() {\n\n    uint16_t finger_num = 0;\n    kct202.autoVerifyFingerPrint(CHECK_ALL_FINGER_TEMP, LED_OFF_AFTER_GET_GRAGH | PRETREATMENT_GRAGH | NOT_RET_FOR_EVERY_STEP);\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 3);\n    u8x8.print(" Please verify  ");\n\n    if (0 == kct202.getVerifyResponAndparse(finger_num)) {\n      u8x8.setFont(u8x8_font_chroma48medium8_r);\n      u8x8.setCursor(0, 3);\n      u8x8.print("Identity comfirm");\n      delay(800);\n      digitalWrite(Electromagnet, LOW);  // turn the Electromagnet on (HIGH is the voltage level)\n      delay(5000);\n      digitalWrite(Electromagnet, HIGH);\n    }\n\n    else {\n      u8x8.setFont(u8x8_font_chroma48medium8_r);\n      u8x8.setCursor(0, 3);\n      u8x8.print(" Identity deny ");\n      //    myservo.write(0);\n      delay(200);\n\n      u8x8.setCursor(0, 3);\n      u8x8.print("  Please retry  ");\n      delay(1500);\n      digitalWrite(Electromagnet, HIGH);  // turn the Electromagnet on (HIGH is the voltage level)\n\n    }\n  }\n')),(0,o.kt)("h3",{id:"project-5---air-quality-sensor-hub---seeed-studio-expansion-base-for-xiao"},(0,o.kt)("strong",{parentName:"h3"},"Project 5 - Air Quality Sensor Hub - Seeed Studio Expansion Base for XIAO")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Overview")),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:400,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Air_Quality_Sensor_Hub/environment_detect_g.gif"})),(0,o.kt)("p",null,"This is an environment detect device to collect PM2.5, PM10, temperature, humidity, CO2 and dust particle via Grove - Laser PM2.5 Sensor, Grove - CO2 & Temperature & Humidity sensor and Grove - dust Sensor respectively."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Component required")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio XIAO SAMD21 ")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/80471?s=BAhJIhMzNzE2NzQsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove - CO2 & Temperature & Humidity Sensor for Arduino (SCD30) - 3-in-1")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/80472?s=BAhJIhMzNzE2NzQsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove - Laser PM2.5 Dust Sensor - Arduino Compatible - HM3301")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/30140?s=BAhJIhMzNzE2NzQsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove - Dust Sensor\uff08PPD42NS\uff09"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hardware Connection")),(0,o.kt)("p",null,"Please follow the same color line to connect each sensor on the board. Please connect the IR sensor grove cable to D0, Mini Motor Driver grove cable to I2C."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:450,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Air_Quality_Sensor_Hub/environment_detect_g.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arduino Instructions")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Follow the connection picture connect all the sensor on the board."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Download the ",(0,o.kt)("a",{parentName:"p",href:"https://www.arduino.cc/en/Main/software"},(0,o.kt)("strong",{parentName:"a"},"Aruidno IDE"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3"),". Install the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/olikraus/U8g2_Arduino"},(0,o.kt)("strong",{parentName:"a"},"u8g2")),",  ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_PM2_5_sensor_HM3301"},(0,o.kt)("strong",{parentName:"a"},"Seeed_PM2_5_sensor_HM3301"))," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_SCD30"},(0,o.kt)("strong",{parentName:"a"},"Seeed_SCD30"))," library, this is the guide ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},(0,o.kt)("strong",{parentName:"a"},"how to install the library")),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4"),". Copy the code stick on the Aruino IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-C"},'#include <Arduino.h>\n#include <U8x8lib.h>\n#include <Seeed_HM330X.h>\n#include "SCD30.h"\n\n#define SERIAL_OUTPUT SerialUSB\n#define SERIAL SerialUSB\n\nint pin = 7;\nunsigned long duration;\nunsigned long starttime;\nunsigned long sampletime_ms = 5000;//sampe 30s ;\nunsigned long lowpulseoccupancy = 0;\nfloat ratio = 0;\nfloat concentration = 0;\n\nconst int buttonPin = 1;\nint buttonState = 0;\nint memu = 0;\n\nU8X8_SSD1306_128X64_NONAME_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE);\nHM330X sensor;\nuint8_t buf[30];\n\nconst char* str[] = {"sensor num: ", "PM1.0 concentration(CF=1,Standard particulate matter,unit:ug/m3): ",\n                     "PM2.5 concentration(CF=1,Standard particulate matter,unit:ug/m3): ",\n                     "PM10 concentration(CF=1,Standard particulate matter,unit:ug/m3): ",\n                     "PM1.0 concentration(Atmospheric environment,unit:ug/m3): ",\n                     "PM2.5 concentration(Atmospheric environment,unit:ug/m3): ",\n                     "PM10 concentration(Atmospheric environment,unit:ug/m3): ",\n                    };\n\n\n///////////////////////////////////////////////////////////////////\n//PM2.5 concentration(Atmospheric environment,unit:ug/m3): value\n///////////////////////////////////////////////////////////////////\nHM330XErrorCode print_result(const char* str, uint16_t value) {\n  if (NULL == str) {\n    return ERROR_PARAM;\n  }\n  //  SERIAL_OUTPUT.print(str);\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 0);\n  u8x8.print("PM2.5: ");\n  u8x8.setCursor(7, 0);\n  u8x8.print(value);\n  u8x8.setCursor(11, 0);\n  u8x8.print("ug/m");\n  Serial.println(value);\n  return NO_ERROR;\n}\n\nHM330XErrorCode print_result_1(const char* str, uint16_t value) {\n  if (NULL == str) {\n    return ERROR_PARAM;\n  }\n  //  SERIAL_OUTPUT.print(str);\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 0);\n  u8x8.print("PM10: ");\n  u8x8.setCursor(7, 0);\n  u8x8.print(value);\n  u8x8.setCursor(11, 0);\n  u8x8.print("ug/m");\n  Serial.println(value);\n  return NO_ERROR;\n}\n\n/*parse buf with 29 uint8_t-data*/\nHM330XErrorCode parse_result(uint8_t* data) {\n  uint16_t value = 0;\n  if (NULL == data) {\n    return ERROR_PARAM;\n  }\n  value = (uint16_t) data[6 * 2] << 8 | data[6 * 2 + 1];\n  print_result(str[6 - 1], value);\n  return NO_ERROR;\n}\n\n\nHM330XErrorCode parse_result2(uint8_t* data) {\n  uint16_t value = 0;\n  if (NULL == data) {\n    return ERROR_PARAM;\n  }\n  value = (uint16_t) data[7 * 2] << 8 | data[7 * 2 + 1];\n  print_result_1(str[7 - 1], value);\n  return NO_ERROR;\n}\n\n////////////////////////////////////////////////////////////////////\n\n/*30s*/\nvoid setup() {\n  Serial.begin(115200);\n  Wire.begin();\n  u8x8.begin();\n  u8x8.setFlipMode(0);\n  scd30.initialize();\n  pinMode(pin, INPUT);\n  pinMode(buttonPin, INPUT_PULLUP);\n  starttime = millis();//get the current time;\n\n}\n\nvoid loop() {\n  float result[3] = {0};\n  duration = pulseIn(pin, LOW);\n  lowpulseoccupancy = lowpulseoccupancy + duration;\n\n  buttonState = digitalRead(buttonPin);\n\n  if (buttonState == LOW) {\n    memu++;\n    delay(15);\n    if (memu == 2) {\n      memu = 0;\n    }\n  }\n  Serial.println(memu);\n\n  if (scd30.isAvailable() && memu == 0) {\n    scd30.getCarbonDioxideConcentration(result);\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 3);\n    u8x8.print("CO2: ");\n    u8x8.setCursor(5, 3);\n    u8x8.print(result[0]);\n    u8x8.setCursor(12, 3);\n    u8x8.print("pmm");\n    delay(1000);\n  }\n\n  if (sensor.read_sensor_value(buf, 29) && memu == 0) {\n    SERIAL_OUTPUT.println("HM330X read result failed!!!");\n  }\n  if(memu == 0){\n  parse_result(buf);\n  }\n\n  if ((millis() - starttime) > sampletime_ms  && memu == 0) {\n    ratio = lowpulseoccupancy / (sampletime_ms * 10.0); // Integer percentage 0=>100\n    concentration = 1.1 * pow(ratio, 3) - 3.8 * pow(ratio, 2) + 520 * ratio + 0.62; // using spec sheet curve\n\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 6);\n    u8x8.print("Dust: ");\n\n    u8x8.setCursor(6, 6);\n    u8x8.print(concentration);\n\n    u8x8.setCursor(12, 6);\n    u8x8.print("pcs");\n\n    //    Serial.println(concentration);\n    lowpulseoccupancy = 0;\n    starttime = millis();\n  }\n\n\n\n  if (scd30.isAvailable() && memu == 1) {\n    scd30.getCarbonDioxideConcentration(result);\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 3);\n    u8x8.print("Temp: ");\n    u8x8.setCursor(6, 3);\n    u8x8.print(result[1]);\n    u8x8.setCursor(10, 3);\n    u8x8.print(" C   ");\n\n    u8x8.setCursor(0, 6);\n    u8x8.print("Humi: ");\n    u8x8.setCursor(5, 6);\n    u8x8.print(result[2]);\n    u8x8.setCursor(8, 6);\n    u8x8.print("  %     ");\n\n    delay(1000);\n  }\n\n  if (sensor.read_sensor_value(buf, 29) && memu == 1) {\n    SERIAL_OUTPUT.println("HM330X read result failed!!!");\n  }\n  if(memu == 1){\n  parse_result2(buf);\n  }\n}\n')),(0,o.kt)("h3",{id:"project-6---seeed-studio-expansion-base-for-xiao---heart-rate"},(0,o.kt)("strong",{parentName:"h3"},"Project 6 - Seeed Studio Expansion Base for XIAO - Heart Rate")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Overview")),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:400,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Heartrate_Monitor_Watch/heartRate.gif"})),(0,o.kt)("p",null,"This simple and inexpensive project is based on the Seeed Studio Expansion Base for XIAO to report the heart rate.\nThe device used has an I2C two-wire interface and therefore keeps the wiring down to a minimum."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Component required")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio XIAO SAMD21 ")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://www.hackster.io/products/buy/80359?s=BAhJIhMzNzExNzMsUHJvamVjdAY6BkVG%0A"},(0,o.kt)("strong",{parentName:"a"},"Seeed Grove - Finger-clip Heart Rate Sensor"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Hardware Connection")),(0,o.kt)("p",null,"Please follow the same color line to connect each sensor on the board. Please connect the IR sensor grove cable to D0, Mini Motor Driver grove cable to I2C."),(0,o.kt)("div",{align:"center"},(0,o.kt)("img",{width:450,src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Big_demo/Heartrate_Monitor_Watch/heart_detect.png"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arduino Instructions")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1"),". Follow the connection picture connect all the sensor on the board."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2"),". Download the ",(0,o.kt)("a",{parentName:"p",href:"https://www.arduino.cc/en/Main/software"},(0,o.kt)("strong",{parentName:"a"},"Aruidno IDE"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3"),". Install the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/olikraus/U8g2_Arduino"},(0,o.kt)("strong",{parentName:"a"},"u8g2"))," library, this is the guide ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library/"},(0,o.kt)("strong",{parentName:"a"},"how to install the library")),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4"),". Copy the code stick on the Aruino IDE then upload it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-C"},'#include <Arduino.h>\n#include <U8x8lib.h>\n\n#include <Wire.h>\n\nU8X8_SSD1306_128X64_NONAME_HW_I2C u8x8(/* reset=*/ U8X8_PIN_NONE);\n\nvoid setup() {\n  Serial.begin(9600);\n  Serial.println("heart rate sensor:");\n\n  u8x8.begin();\n  u8x8.setFlipMode(1);\n  Wire.begin();\n}\nvoid loop() {\n  Wire.requestFrom(0xA0 >> 1, 1);    // request 1 bytes from slave device\n  while (Wire.available()) {         // slave may send less than requested\n    unsigned char c = Wire.read();   // receive heart rate value (a byte)\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n//    u8x8.setCursor(0, 3);\n//    u8x8.print("blood detecting ");\n//    delay(10000);\n\n    u8x8.setCursor(0, 3);\n    u8x8.print("HeartRate: ");\n    u8x8.setCursor(10, 3);\n    u8x8.print(c);\n    u8x8.setCursor(13, 3);\n    u8x8.print("bpm");\n    Serial.println(c);\n\n  }\n  delay(500);\n}\n')),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"[PDF]"),(0,o.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/document/ETA1038.pdf"},(0,o.kt)("strong",{parentName:"a"},"ETA1038"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"[PDF]"),(0,o.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/document/ETA3410.pdf"},(0,o.kt)("strong",{parentName:"a"},"ETA3410"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"[PDF]"),(0,o.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/document/ETA6003.pdf"},(0,o.kt)("strong",{parentName:"a"},"ETA6003"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"[PDF]"),(0,o.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/document/PCF8563T.pdf"},(0,o.kt)("strong",{parentName:"a"},"PCF8563T"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"[PDF]"),(0,o.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/document/Seeeduino%20XIAO%20Expansion%20board_v1.0_SCH_200824.pdf"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO_v1.0_SCH_200824"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"[SCH]"),(0,o.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/document/Seeeduino%20XIAO%20Expansion%20board_v1.0_200824.sch"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO_v1.0_200824"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"[BRD]"),(0,o.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/document/Seeeduino%20XIAO%20Expansion%20board_v1.0_200824.brd"},(0,o.kt)("strong",{parentName:"a"},"Seeed Studio Expansion Base for XIAO_v1.0_200824")))),(0,o.kt)("h2",{id:"tech-support"},"Tech Support"),(0,o.kt)("p",null,"Please do not hesitate to submit the issue into our ",(0,o.kt)("a",{parentName:"p",href:"https://forum.seeedstudio.com/"},"forum"),"."),(0,o.kt)("br",null),(0,o.kt)("p",{style:{textAlign:"center"}},(0,o.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,o.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"}))))}u.isMDXComponent=!0}}]);