"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[65438],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,h=d["".concat(u,".").concat(m)]||d[m]||c[m]||o;return r?n.createElement(h,i(i({ref:t},s),{},{components:r})):n.createElement(h,i({ref:t},s))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},22832:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const o={title:"13.56Mhz RFID module - IOS/IEC 14443 type a",nointro:null,keywords:["docs","docusaurus"],image:"https://wiki.seeedstudio.com/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/",last_update:{date:"02/03/2022",author:"gunengyu"}},i=void 0,l={unversionedId:"Sensor/Beyond_Grove/Accessories/Input_Output/13.56Mhz_RFID_module-IOS-IEC_14443_type_a",id:"Sensor/Beyond_Grove/Accessories/Input_Output/13.56Mhz_RFID_module-IOS-IEC_14443_type_a",title:"13.56Mhz RFID module - IOS/IEC 14443 type a",description:"Specification",source:"@site/docs/Sensor/Beyond_Grove/Accessories/Input_Output/13.56Mhz_RFID_module-IOS-IEC_14443_type_a.md",sourceDirName:"Sensor/Beyond_Grove/Accessories/Input_Output",slug:"/Sensor/Beyond_Grove/Accessories/Input_Output/13.56Mhz_RFID_module-IOS-IEC_14443_type_a",permalink:"/docusaurus_wiki/Sensor/Beyond_Grove/Accessories/Input_Output/13.56Mhz_RFID_module-IOS-IEC_14443_type_a",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Sensor/Beyond_Grove/Accessories/Input_Output/13.56Mhz_RFID_module-IOS-IEC_14443_type_a.md",tags:[],version:"current",lastUpdatedBy:"gunengyu",lastUpdatedAt:1643846400,formattedLastUpdatedAt:"Feb 3, 2022",frontMatter:{title:"13.56Mhz RFID module - IOS/IEC 14443 type a",nointro:null,keywords:["docs","docusaurus"],image:"https://wiki.seeedstudio.com/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/",last_update:{date:"02/03/2022",author:"gunengyu"}},sidebar:"ProductSidebar",previous:{title:"125Khz RFID module - UART",permalink:"/docusaurus_wiki/Sensor/Beyond_Grove/Accessories/Input_Output/125Khz_RFID_module-UART"},next:{title:"AVR USB Programmer",permalink:"/docusaurus_wiki/Sensor/Beyond_Grove/Accessories/Input_Output/AVR_USB_Programmer"}},u={},p=[{value:"Specification",id:"specification",level:2},{value:"External Links",id:"external-links",level:2},{value:"Connecting to an Arduino",id:"connecting-to-an-arduino",level:2},{value:"Resource",id:"resource",level:2},{value:"Tech Support",id:"tech-support",level:2}],s={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/img/13563.jpg",alt:null})),(0,a.kt)("h2",{id:"specification"},"Specification"),(0,a.kt)("hr",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Model No.  RDM880-T-A"),(0,a.kt)("li",{parentName:"ul"},"R/W chip  MFRC500\uff0cMFRC400\uff0cMFRC531\uff0cMFRC632"),(0,a.kt)("li",{parentName:"ul"},"Standard  ISO/IEC 14443 type a"),(0,a.kt)("li",{parentName:"ul"},"Frequency  13.56MHz"),(0,a.kt)("li",{parentName:"ul"},"Baud Rate  9600-115200bit/s\uff08configurable, default9600\uff09"),(0,a.kt)("li",{parentName:"ul"},"Power supply  DC5V(5%)"),(0,a.kt)("li",{parentName:"ul"},"Current  ","<","70mA"),(0,a.kt)("li",{parentName:"ul"},"Operating range 30-100mm\uff08reading range depend on antenna and card/tag\uff09"),(0,a.kt)("li",{parentName:"ul"},"interface  TTL electrical level"),(0,a.kt)("li",{parentName:"ul"},"Working temperature -10 degree to 70 degree"),(0,a.kt)("li",{parentName:"ul"},"Storage temperature -20 degree to 80 degree"),(0,a.kt)("li",{parentName:"ul"},"Size  39",(0,a.kt)("em",{parentName:"li"},"19"),"9 mm\uff08DIP28\uff09")),(0,a.kt)("h2",{id:"external-links"},"External Links"),(0,a.kt)("p",null,"Links to external webpages which provide more application ideas, documents/datasheet or software libraries."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Basic example, use the RDM880 with a buspirate: ",(0,a.kt)("a",{parentName:"p",href:"http://neophob.com/2010/03/bus-pirate-fun-rdm880-rfid-module/"},"http://neophob.com/2010/03/bus-pirate-fun-rdm880-rfid-module/"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Python library to access the RDM880 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/synack/rfid"},"https://github.com/synack/rfid"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Maker's site ",(0,a.kt)("a",{parentName:"p",href:"http://www.datarfid.com/doce/Product/pic_69.html"},"http://www.datarfid.com/doce/Product/pic_69.html"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"http://eduardovelloso.com/2011/11/22/rfid-part-iii-high-frequency-tutorial/"},"Eduardo Velloso'blog")))),(0,a.kt)("h2",{id:"connecting-to-an-arduino"},"Connecting to an Arduino"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"The SeeedStudio 13.56Mhz RFID module is an RFID reader capable support ISO14443A, Mifare series card over a serial line. It can easely be attached\nto an arduino to have RFID fun."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Schematics")),(0,a.kt)("pre",null,"       .-----------------------------. | [1][2]      [5][4][3][2][1] | |  J3              J1         | |           RDM880 (top view) | |                  J2         | |             [5][4][3][2][1] | .-----------------------------."),(0,a.kt)("pre",null,"J1:(accessory pins) PIN 1 -- LEDG (Green led) PIN 2 -- 5V (DC) PIN 3 -- GND PIN 4 -- LEDR (Red led) PIN 5 -- BUZ (Buzzer)"),(0,a.kt)("p",null,"J1 Alt: Note that some units are arranged:"),(0,a.kt)("pre",null,"  PIN 1 -- PIN 2 -- PIN 3 -- LED1 (Green led) PIN 4 -- LED2 (RED led) PIN 5 -- BUZ (Buzzer)"),(0,a.kt)("pre",null,"J2:(Communication using serial 9600 8N1 TTL level) PIN 1 -- RESET (pull low to reset e.g. set default baudrate) PIN 2 -- RX PIN 3 -- TX PIN 4 -- GND PIN 5 -- 5V (in) J3: PIN 1 -- + Antenna PIN 2 -- - Antenna"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Connecting to an Arduino")),(0,a.kt)("p",null,"Use the J2 pin headers to connect 5 volt and the ground as shown in the picture. Connect the TX (Pin 3) to the Arduino digital pin 2 and RX to digital pin 3 as shown bellow. It is not needed to connect the reset as long as you don't change the default connection speed."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/img/Rdm880_bb.png",alt:null})),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Software")),(0,a.kt)("p",null,"[",(0,a.kt)("a",{parentName:"p",href:"https://www.google.com.hk/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CCwQFjAA&url=%68%74%74%70%3a%2f%2f%6e%65%6f%70%68%6f%62%2e%63%6f%6d%2f%66%69%6c%65%73%2f%72%66%69%64%2f%50%52%4f%54%4f%43%4f%4c%2d%38%32%31%2d%38%38%30%25%32%30%5f%32%5f%2e%70%64%66&ei=NB4LUcEWicCJB7ylgKAO&usg=AFQjCNExnbUz8nALfcRhj0I4z6tBZqgH9w&bvm=bv.41867550,d.aGc&cad=rjt"},"PROTOCOL-821-880",(0,a.kt)("em",{parentName:"a"},"2"),".pdf"),"] describes the protocol used for now we only created a small program to read the RDIF tag number when pressing enter in the Serial monitor of the Arduino IDE"),(0,a.kt)("p",null,"Warning: when writing your sketches use ",(0,a.kt)("strong",{parentName:"p"},"only")," system, Type-A and Mifare commands. ISO14443-B and ISO15693 are accepted only by RDM880-T-",(0,a.kt)("strong",{parentName:"p"},"E")," (not 'A') reader! And as of today (21 may, 2012) remember that this module ",(0,a.kt)("strong",{parentName:"p"},"does not support")," anticollision for Mifare cards -- sometimes it tells there's more than one card, but there's no way to address the non-default card. It's a firmware issue, confirmed by manufacturer."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'#include <SoftwareSerial.h>\n\nSoftwareSerial mySerial(2, 3);\nchar txrxbuffer[255];\n\nchar get_readID[] = { 0xAA , 0x00, 0x03, 0x25, 0x26, 0x00, 0x00, 0xBB };\nvoid setup()\n{\n    Serial.begin(57600);\n    Serial.println("Hit Enter to read the RFID number");\n    mySerial.begin(9600);\n}\n\nvoid loop() // run over and over\n{\n\n    int counter = 0;\n    if (mySerial.available())\n    Serial.print(mySerial.read(),HEX);\n\n    if (Serial.available()){\n        Serial.read();\n        Serial.println(">");\n        for (counter =0 ; counter < 8 ; counter++){\n            mySerial.write(get_readID[counter]);\n        }\n    }\n}\n')),(0,a.kt)("h2",{id:"resource"},"Resource"),(0,a.kt)("hr",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/res/RDM880-Spec.pdf"},"RDM880 Document"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/res/RDM880_LED_Control.doc"},"RDM880 LED Control.doc"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/res/API_and_Demo_Code_on_Windows_and_Linux_for13.56M_RFID_Reader.zip"},"API and Demo Code on Windows and Linux for13.56M RFID Reader")," (download this tools if you want to write data to your tag)"))),(0,a.kt)("h2",{id:"tech-support"},"Tech Support"),(0,a.kt)("p",null," if you have any technical issue.  submit the issue into our ",(0,a.kt)("a",{parentName:"p",href:"http://forum.seeedstudio.com/"},"forum"),". "),(0,a.kt)("div",null,(0,a.kt)("br",null),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"})))))}d.isMDXComponent=!0}}]);