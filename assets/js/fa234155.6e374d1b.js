"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2378],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=d(n),u=i,m=c["".concat(s,".").concat(u)]||c[u]||h[u]||r;return n?a.createElement(m,l(l({ref:t},p),{},{components:n})):a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},43787:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=n(87462),i=(n(67294),n(3905));const r={description:"NFC_Shield_V2.0",title:"NFC Shield V2.0",tags:["Shield","NFC"],keywords:["Shield","NFC"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"01/30/2023",author:"Eico"},no_comments:!1},l=void 0,o={unversionedId:"Top_Brand/Arduino/shield/NFC_Shield_V2.0",id:"Top_Brand/Arduino/shield/NFC_Shield_V2.0",title:"NFC Shield V2.0",description:"NFC_Shield_V2.0",source:"@site/docs/Top_Brand/Arduino/shield/NFC_Shield_V2.0.md",sourceDirName:"Top_Brand/Arduino/shield",slug:"/Top_Brand/Arduino/shield/NFC_Shield_V2.0",permalink:"/docusaurus_wiki/Top_Brand/Arduino/shield/NFC_Shield_V2.0",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Top_Brand/Arduino/shield/NFC_Shield_V2.0.md",tags:[{label:"Shield",permalink:"/docusaurus_wiki/tags/shield"},{label:"NFC",permalink:"/docusaurus_wiki/tags/nfc"}],version:"current",lastUpdatedBy:"Eico",lastUpdatedAt:1675036800,formattedLastUpdatedAt:"Jan 30, 2023",frontMatter:{description:"NFC_Shield_V2.0",title:"NFC Shield V2.0",tags:["Shield","NFC"],keywords:["Shield","NFC"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"01/30/2023",author:"Eico"},no_comments:!1},sidebar:"ProductSidebar",previous:{title:"Music Shield V2.2",permalink:"/docusaurus_wiki/Top_Brand/Arduino/shield/Music_Shield_V2.2"},next:{title:"Grove-Mega Shield",permalink:"/docusaurus_wiki/Top_Brand/Arduino/shield/Grove-Mega_Shield"}},s={},d=[{value:"Application Ideas",id:"application-ideas",level:2},{value:"NFC Shield Demo",id:"nfc-shield-demo",level:3},{value:"Features",id:"features",level:2},{value:"Hardware Overview",id:"hardware-overview",level:2},{value:"NFC Shield Setup",id:"nfc-shield-setup",level:2},{value:"Hardware Installation",id:"hardware-installation",level:3},{value:"Software Libraries Installation",id:"software-libraries-installation",level:3},{value:"NFC Shield Examples/Applications",id:"nfc-shield-examplesapplications",level:2},{value:"Example #1: NFC Tag Scan",id:"example-1-nfc-tag-scan",level:3},{value:"Code",id:"code",level:4},{value:"Example #2: NFC(keyless) Door Lock",id:"example-2-nfckeyless-door-lock",level:3},{value:"Code",id:"code-1",level:4},{value:"Example #3: How to use the Interrupt Pin (Example #2: Revisited)",id:"example-3-how-to-use-the-interrupt-pin-example-2-revisited",level:3},{value:"Hardware Modification",id:"hardware-modification",level:4},{value:"Code",id:"code-2",level:4},{value:"Example #4: Write an NDEF Message to a Tag",id:"example-4-write-an-ndef-message-to-a-tag",level:3},{value:"Code",id:"code-3",level:4},{value:"Example #5: Format a Tag as NDEF",id:"example-5-format-a-tag-as-ndef",level:3},{value:"Code",id:"code-4",level:4},{value:"Example #6: Read an NDEF Message From a Tag",id:"example-6-read-an-ndef-message-from-a-tag",level:3},{value:"Code",id:"code-5",level:4},{value:"Example #7: How to Change the Chip Select Pin From D10 to D9",id:"example-7-how-to-change-the-chip-select-pin-from-d10-to-d9",level:3},{value:"Hardware Modification",id:"hardware-modification-1",level:4},{value:"Code",id:"code-6",level:4},{value:"Example #8: Use Two NFC Shields With One Arduino Board",id:"example-8-use-two-nfc-shields-with-one-arduino-board",level:3},{value:"Hardware Modification",id:"hardware-modification-2",level:4},{value:"Code",id:"code-7",level:4},{value:"FAQs",id:"faqs",level:2},{value:"NFC Shield v2.0 Eagle File Schematic Online Viewer",id:"nfc-shield-v20-eagle-file-schematic-online-viewer",level:2},{value:"NFC Shield v2.1 Eagle File Schematic Online Viewer",id:"nfc-shield-v21-eagle-file-schematic-online-viewer",level:2},{value:"Resources",id:"resources",level:2},{value:"Project",id:"project",level:2},{value:"Tech Support",id:"tech-support",level:2}],p={toc:d};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("table",{align:"center"},(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/NFC_front.png",alt:"pir",width:200,height:"auto"}))),(0,i.kt)("td",null,(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/NFC_back.png",alt:"pir",width:200,height:"auto"})))))),(0,i.kt)("p",null,"NFC (Near Field Communication) is a technology that is widely used. Some of NFC's applications include wireless access control systems (e.g. keyless doors, and locks), and mobile device payments (e.g. store registers that receive payment information via a phone application)."),(0,i.kt)("p",null,"The NFC Shield features a transceiver module, PN532, which handles wireless communication at 13.56MHz, this means that you can read and write a 13.56MHz tag with this shield or implement point to point (P2P) data exchange between the shield and a smart phone."),(0,i.kt)("p",null,"For this new version of the shield we have created a separate, independent, PCB antenna area which allows you to more easily stretch the NFC interface outside of your main circuit enclosure."),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("a",{href:"https://www.seeedstudio.com/NFC-Shield-V2.0-p-1370.html",target:"_blank"},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/300px-Get_One_Now_Banner-ragular.png"}))),(0,i.kt)("h2",{id:"application-ideas"},"Application Ideas"),(0,i.kt)("p",null,"If you want to make some awesome projects by NFC Shield V2.0, here are some projects for reference."),(0,i.kt)("h3",{id:"nfc-shield-demo"},"NFC Shield Demo"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Paper Man, an interesting object to interact with Android"))),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Seeed-recipe-paper_man.jpg",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/recipe/40-paper-man-an-interesting-object-to-interact-with-android.html"},"Make it NOW!")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/recipe/index.php?query=NFC+Shield"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("em",{parentName:"strong"},"More Awesome Projects by NFC Shield V2.0")))),(0,i.kt)("h2",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Use of the ICSP header for SPI. This means that the shield works with the following Arduino development boards: Uno, Mega, Leonardo"),(0,i.kt)("li",{parentName:"ul"},"Wireless NFC communication at 13.56MHz"),(0,i.kt)("li",{parentName:"ul"},"SPI protocol - pin saving interface that requires only 4 pins"),(0,i.kt)("li",{parentName:"ul"},"Input Voltage: 5V from the Arduino's 5V pin"),(0,i.kt)("li",{parentName:"ul"},"Typical Current: 100mA"),(0,i.kt)("li",{parentName:"ul"},"5cm max effective range"),(0,i.kt)("li",{parentName:"ul"},"Supports P2P communication"),(0,i.kt)("li",{parentName:"ul"},"Support ISO14443 Type A and Type B protocols")),(0,i.kt)("h2",{id:"hardware-overview"},"Hardware Overview"),(0,i.kt)("p",null,"The NFC shield's pins and other terminals are described below."),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Pn532-nfc-shield-pin-description.png",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NFC shield interface")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"D10 and D9 are used for SPI chip select (CS/SS). D10 is connected by default, to connect D9 soldering the SS pad to the D9 pad and scraping off the connection between SS and D10 is required."),(0,i.kt)("li",{parentName:"ul"},'D2 can be used to receive the shield\'s interrupt request (IRQ) pin signal. The interrupt is not connect by default, soldering of the "D2/INT0" and "IRQ" pads is required.'),(0,i.kt)("li",{parentName:"ul"},"The shield gets its SPI interface (SPI MOSI, MISO, and SCK pins) from the Arduino's ICSP header directly, this means that the shield works the following Arduinos: Uno, Mega, and Leonardo."),(0,i.kt)("li",{parentName:"ul"},"The ANT1 terminal is where the NFC antenna (included with the shield) is connected to."),(0,i.kt)("li",{parentName:"ul"},"The shield is powered by 5V from the Arduino board.")),(0,i.kt)("p",null,"The NFC shield's antenna, included with the shield, is a separate PCB module that is attached to the shield via a cable. The antenna is the area used to receive and transmit information."),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/NFC_Antanna_28x30.5.jpg",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NFC antenna PCB attachment")),(0,i.kt)("h2",{id:"nfc-shield-setup"},"NFC Shield Setup"),(0,i.kt)("h3",{id:"hardware-installation"},"Hardware Installation"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Attach the NFC Antenna to the shield."),(0,i.kt)("li",{parentName:"ol"},"Stack the NFC Shield on your Arduino development board and connect the board to a PC using a USB cable.")),(0,i.kt)("h3",{id:"software-libraries-installation"},"Software Libraries Installation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Step 1."),"  Download ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_NFC"},"Seeed Arduino NFC Library"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Step 2."),"  Refer to ",(0,i.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library"},"How to install library")," to install ",(0,i.kt)("strong",{parentName:"p"},"Seeed Arduino NFC")," library for Arduino.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Step 3."),"  Download ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/PN532"},"PN532 Library")," and put it under ",(0,i.kt)("strong",{parentName:"p"},"C:\\Program Files (x86)\\Arduino\\libraries\\Seeed_Arduino_NFC-master\\src"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Step 4."),"  Open \u201cReadTag\u201d code via the path: ",(0,i.kt)("strong",{parentName:"p"},"File --\x3e Examples --\x3e ReadTag"),". ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Step 5."),"  Modify the code as below to enable SPI communication."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-CPP"},'#if 1 // use SPI\n#include <SPI.h>\n#include <PN532/PN532_SPI/PN532_SPI.h>\nPN532_SPI pn532spi(SPI, 10);\nNfcAdapter nfc = NfcAdapter(pn532spi);\n#elif 0 // use hardware serial\n\n#include <PN532/PN532_HSU/PN532_HSU.h>\nPN532_HSU pn532hsu(Serial1);\nNfcAdapter nfc(pn532hsu);\n#elif 0  // use software serial\n\n#include <PN532/PN532_SWHSU/PN532_SWHSU.h>\n#include "SoftwareSerial.h"\nSoftwareSerial SWSerial(2, 3);\nPN532_SWHSU pn532swhsu(SWSerial);\nNfcAdapter nfc(pn532swhsu);\n#else //use I2C\n\n#include <Wire.h>\n#include <PN532/PN532_I2C/PN532_I2C.h>\n\nPN532_I2C pn532_i2c(Wire);\nNfcAdapter nfc = NfcAdapter(pn532_i2c);\n#endif\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arduino available libraries menu")),(0,i.kt)("h2",{id:"nfc-shield-examplesapplications"},"NFC Shield Examples/Applications"),(0,i.kt)("h3",{id:"example-1-nfc-tag-scan"},"Example #1: NFC Tag Scan"),(0,i.kt)("p",null,"This example will show you how to use the NFC shield to scan an NFC tag and display its information/data."),(0,i.kt)("p",null,"In the Arduino IDE copy, paste, then upload the code below to your board."),(0,i.kt)("h4",{id:"code"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-CPP"},'    #include <SPI.h>\n#include <Seeed_Arduino_NFC.h>\n#include  <NfcAdapter.h>\n\nPN532_SPI pn532spi(SPI, 10);\nNfcAdapter nfc = NfcAdapter(pn532spi);\n\n\nvoid setup(void) {\n    Serial.begin(115200); // begin serial communication\n    Serial.println("NDEF Reader");\n    nfc.begin(); // begin NFC communication\n}\n\nvoid loop(void) {\n\n    Serial.println("\\nScan an NFC tag\\n");\n    if (nfc.tagPresent()) // Do an NFC scan to see if an NFC tag is present\n    {\n        NfcTag tag = nfc.read(); // read the NFC tag into an object, nfc.read() returns an NfcTag object.\n        tag.print(); // prints the NFC tags type, UID, and NDEF message (if available)\n    }\n    delay(500); // wait half a second (500ms) before scanning again (you may increment or decrement the wait time)\n}\n')),(0,i.kt)("p",null,"To test the code:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open the Arduino Serial monitor window"),(0,i.kt)("li",{parentName:"ol"},"Set the baudrate to 115200"),(0,i.kt)("li",{parentName:"ol"},"Hold an NFC tag over the NFC antenna area"),(0,i.kt)("li",{parentName:"ol"},"The NFC shield will scan the tag and you should be able to see the NFC tag\u2019s UID, tag type, and message (if available) in the serial monitor window. See the figure below.")),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Nfc-pn532-output-example-1.png",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example #1 serial communication window output when scanning an NFC tag.")),(0,i.kt)("h3",{id:"example-2-nfckeyless-door-lock"},"Example #2: NFC(keyless) Door Lock"),(0,i.kt)("p",null,"This example will show you how to use an NFC tag as a key to unlock a door or a lock. The door/lock mechanism will be left to your imagination, we'll only cover the NFC part of the code."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Do Example #1: NFC Tag Scan, above, to get your NFC tag's UID.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Optional Step - connect a green LED to pin 3 as shown in the figure/schematic below. We'll use this LED to signal a successful match in keys.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Optional Step \u2013 connect a red LED to pin 4 as shown in the figure/schematic below. We'll use this LED to signal a mismatched key."),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Example-2-red-green-led-nfc-alarm.PNG",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"NFC lock circuit")),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Example-2-red-green-led-nfc-alarm-real.png",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"NFC lock circuit"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the Arduino IDE create a new sketch and copy, paste, and upload the code below to your Arduino board replacing the myUID string constant with your tag\u2019s UID obtained from Example ","#","1."))),(0,i.kt)("h4",{id:"code-1"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-CPP"},'    #if 1 // use SPI\n    #include <SPI.h>\n    #include <PN532/PN532_SPI/PN532_SPI.h>\n    PN532_SPI pn532spi(SPI, 10);\n    NfcAdapter nfc = NfcAdapter(pn532spi);\n    #elif 0 // use hardware serial\n\n    #include <PN532/PN532_HSU/PN532_HSU.h>\n    PN532_HSU pn532hsu(Serial1);\n    NfcAdapter nfc(pn532hsu);\n    #elif 0  // use software serial\n\n    #include <PN532/PN532_SWHSU/PN532_SWHSU.h>\n    #include "SoftwareSerial.h"\n    SoftwareSerial SWSerial(2, 3);\n    PN532_SWHSU pn532swhsu(SWSerial);\n    NfcAdapter nfc(pn532swhsu);\n    #else //use I2C\n\n    #include <Wire.h>\n    #include <PN532/PN532_I2C/PN532_I2C.h>\n\n    PN532_I2C pn532_i2c(Wire);\n    NfcAdapter nfc = NfcAdapter(pn532_i2c);\n    #endif\n\n    String const myUID = "1B B3 C6 EF"; // replace this UID with your NFC tag\'s UID\n    int const greenLedPin = 3; // green led used for correct key notification\n    int const redLedPin = 4; // red led used for incorrect key notification\n\n    void setup(void) {\n        Serial.begin(115200); // start serial comm\n        Serial.println("NDEF Reader");\n        nfc.begin(); // begin NFC comm\n\n        // make LED pins outputs\n        pinMode(greenLedPin,OUTPUT);\n        pinMode(redLedPin,OUTPUT);\n\n        // turn off the LEDs\n        digitalWrite(greenLedPin,LOW);\n        digitalWrite(redLedPin,LOW);\n    }\n\n    void loop(void) {\n\n        Serial.println("Scanning...");\n        if (nfc.tagPresent()) // check if an NFC tag is present on the antenna area\n        {\n            NfcTag tag = nfc.read(); // read the NFC tag\n            String scannedUID = tag.getUidString(); // get the NFC tag\'s UID\n\n            if( myUID.compareTo(scannedUID) == 0) // compare the NFC tag\'s UID with the correct tag\'s UID (a match exists when compareTo returns 0)\n            {\n              // The correct NFC tag was used\n              Serial.println("Correct Key");\n              // Blink the green LED and make sure the RED led is off\n              digitalWrite(greenLedPin,HIGH);\n              digitalWrite(redLedPin,LOW);\n\n              delay(500);\n              digitalWrite(greenLedPin,LOW);\n              delay(500);\n              digitalWrite(greenLedPin,HIGH);\n              delay(500);\n              digitalWrite(greenLedPin,LOW);\n              // put your here to trigger the unlocking mechanism (e.g. motor, transducer)\n            }else{\n              // an incorrect NFC tag was used\n              Serial.println("Incorrect key");\n              // blink the red LED and make sure the green LED is off\n              digitalWrite(greenLedPin,LOW);\n              digitalWrite(redLedPin,HIGH);\n\n              delay(500);\n              digitalWrite(redLedPin,LOW);\n              delay(500);\n              digitalWrite(redLedPin,HIGH);\n              delay(500);\n              digitalWrite(redLedPin,LOW);\n              // DO NOT UNLOCK! an incorrect NFC tag was used.\n              // put your code here to trigger an alarm (e.g. buzzard, speaker) or do something else\n            }\n        }\n        delay(2000);\n    }\n')),(0,i.kt)("p",null,"To test the code/application:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open the Arduino's serial monitor window"),(0,i.kt)("li",{parentName:"ol"},"Hold the NFC tag with the correct key on the antenna area."),(0,i.kt)("li",{parentName:"ol"},'The green LED should light up and the serial window should print "Correct Key"'),(0,i.kt)("li",{parentName:"ol"},"Now hold a different NFC on the antenna area"),(0,i.kt)("li",{parentName:"ol"},'The red LED should light up and the serial window should print "Incorrect Key"')),(0,i.kt)("h3",{id:"example-3-how-to-use-the-interrupt-pin-example-2-revisited"},"Example #3: How to use the Interrupt Pin (Example #2: Revisited)"),(0,i.kt)("p",null,'Although the code in Example #2 above does what we need there is a more elegant approach to handling NFC tag detections. In this example we\'ll show you how to make use of the interrupt pin in the NFC shield so that instead of polling the shield (asking "is there a tag present?") we wait for the shield to tell the Arduino that a tag is available to be read. Why would you want to do this? There are many reasons and interrupts are a whole different topic, but one reason that may convince you is that your project/circuit will save battery since we are not triggering the shield circuit continuously.'),(0,i.kt)("h4",{id:"hardware-modification"},"Hardware Modification"),(0,i.kt)("p",null,'The NFC shield\u2019s interrupt pin (IRQ) is disconnect from the Arduino\'s digital pin 2 (D2), to connect the IRQ and D2 pin together go ahead and solder the pad on the shield labeled "D2/INT0 IRQ".'),(0,i.kt)("h4",{id:"code-2"},"Code"),(0,i.kt)("p",null,"Upload the following code to your Arduino board:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-CPP"},'    #if 1 // use SPI\n    #include <SPI.h>\n    #include <PN532/PN532_SPI/PN532_SPI.h>\n    PN532_SPI pn532spi(SPI, 10);\n    NfcAdapter nfc = NfcAdapter(pn532spi);\n    #elif 0 // use hardware serial\n\n    #include <PN532/PN532_HSU/PN532_HSU.h>\n    PN532_HSU pn532hsu(Serial1);\n    NfcAdapter nfc(pn532hsu);\n    #elif 0  // use software serial\n\n    #include <PN532/PN532_SWHSU/PN532_SWHSU.h>\n    #include "SoftwareSerial.h"\n    SoftwareSerial SWSerial(2, 3);\n    PN532_SWHSU pn532swhsu(SWSerial);\n    NfcAdapter nfc(pn532swhsu);\n    #else //use I2C\n\n    #include <Wire.h>\n    #include <PN532/PN532_I2C/PN532_I2C.h>\n\n    PN532_I2C pn532_i2c(Wire);\n    NfcAdapter nfc = NfcAdapter(pn532_i2c);\n    #endif\n\n    // FLAG_NONE used to signal nothing needs to be done\n    #define FLAG_NONE 0\n    // FLAG_IRQ_TRIGGERED used to signal an interrupt trigger\n    #define FLAG_IRQ_TRIGGERED 1\n    // FLAG_RESET_IRQ used to signal that the interrupt needs to be reset\n    #define FLAG_RESET_IRQ 2\n    // flags variable used to store the present flag\n    volatile int flags = FLAG_NONE;\n\n    String const myUID = "1B B3 C6 EF"; // replace this UID with your NFC tag\'s UID\n    // LED pins\n    int const greenLedPin = 3; // green led used for correct key notification\n    int const redLedPin = 4; // red led used for incorrect key notification\n\n    // the interrupt we\'ll be using (interrupt 0) is located at digital pin 2\n    int const irqPin = 2; // interrupt pin\n\n    String scannedUID = ""; // this is where we\'ll store the scanned tag\'s UID\n\n    void setup(void) {\n        // make LED pins outputs\n        pinMode(greenLedPin,OUTPUT);\n        pinMode(redLedPin,OUTPUT);\n\n        Serial.begin(115200); // start serial comm\n        Serial.println("NDEF Reader");\n        nfc.begin(); // begin NFC comm\n\n        // turn off the LEDs\n        digitalWrite(greenLedPin,LOW);\n        digitalWrite(redLedPin,LOW);\n       // attach the function "irq" to interrupt 0 on the falling edges\n       attachInterrupt(0,irq,FALLING);// digital pin 2 is interrupt 0, we\'ll call the irq function (below) on the falling edge of this pin\n    }\n\n    void loop(void) {\n        int flag = getFlag(); // get the present flag\n\n        switch(flag) // check which flag/signal we are on\n        {\n           case FLAG_NONE:\n             // nothing needs to be done\n           break;\n           case FLAG_IRQ_TRIGGERED: // the interrupt pin has been triggered\n               Serial.println("Interrupt Triggered");\n               if (nfc.tagPresent())\n               {\n                 // an NFC tag is present\n                  NfcTag tag = nfc.read(); // read the NFC tag\n                  scannedUID = tag.getUidString(); // get the NFC tag\'s UID\n                  if(myUID.compareTo(scannedUID) == 0) // compare the NFC tag\'s UID with the correct tag\'s UID (a match exists when compareTo returns 0)\n                  {\n                    // the scanned NFC tag matches the saved myUID value\n                    Serial.println("Correct tag/key");\n                    blinkLed(greenLedPin,200,4); // blink the green led\n                    // put your here to trigger the unlocking mechanism (e.g. motor, transducer)\n                  }else{\n                    // the scanned NFC tag\'s UDI does not match the myUID value\n                    Serial.println("Incorrect tag/key");\n                    blinkLed(redLedPin,200,4); // blink the red led\n                    // DO NOT UNLOCK! an incorrect NFC tag was used.\n                    // put your code here to trigger an alarm (e.g. buzzard, speaker) or do something else\n                  }\n                  // return to the original state\n                  setFlag(FLAG_NONE);\n                  reset_PN532_IRQ_pin();\n               }else{\n                 // a tag was not present (the IRQ was triggered by some other action)\n                 setFlag(FLAG_NONE);\n               }\n           break;\n           default:\n             // do any other stuff for flags not handled above\n           break;\n        }\n    }\n\n    /*\n    * Name: setFlat\n    * Description: used to set actions/flags to be executed in the loop(void) function\n    * Parameters:\n    *        int flag - the action/flag to store\n    * Returns: void\n    */\n    void setFlag(int flag)\n    {\n      flags = flag;\n    }\n\n    /*\n    * Name: getFlag\n    * Description: used to get the present flag/action\n    * Parameters: void\n    * Returns: int - the flags variable. The action/flag set by setFlag\n    */\n    int getFlag()\n    {\n      return flags;\n    }\n\n    /*\n    * Name: irq\n    * Description: Interrupt service routine (ISR). This function will be executed whenever there is a falling edge on digital pin 2 (the interrupt 0 pin)\n    * Parameters: void\n    * Returns: void\n    */\n    void irq()\n    {\n      if(getFlag()==FLAG_NONE){\n        setFlag(FLAG_IRQ_TRIGGERED);\n      }\n    }\n    /*\n    * Name: reset_PN532_IRQ_pin\n    * Description: used to reset the PN532 interrupt request (IRQ) pin\n    * Parameters: void\n    * Returns: void\n    */\n    void reset_PN532_IRQ_pin()\n    {\n      nfc.tagPresent();\n    }\n\n    /*\n    * Name: blinkLed\n    * Description: used to toggle a pin to blink an LED attached to the pin\n    * Parameters:\n    *      ledPin - the pin where the led is connected to\n    *      delayTime - the time in milliseconds between HIGH and LOW\n    *      times - the number of times to toggle the pin\n    * Returns: void\n    */\n    void blinkLed(int ledPin,int delayTime,int times)\n    {\n      for(int i=0;i<times;i++){\n        digitalWrite(ledPin,HIGH);\n        delay(delayTime);\n        digitalWrite(ledPin,LOW);\n        delay(delayTime);\n      }\n    }\n')),(0,i.kt)("p",null,"To test the code/application:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"If desired, connect the LEDs as shown in Example ","#","2 above."),(0,i.kt)("li",{parentName:"ol"},"Open the Arduino's serial monitor window"),(0,i.kt)("li",{parentName:"ol"},"Hold the NFC tag with the correct key on the antenna area."),(0,i.kt)("li",{parentName:"ol"},'The green LED should light up and the serial window should print "Correct Key"'),(0,i.kt)("li",{parentName:"ol"},"Now hold a different NFC on the antenna area"),(0,i.kt)("li",{parentName:"ol"},'The red LED should light up and the serial window should print "Incorrect Key"')),(0,i.kt)("p",null,"The serial window from our test of this code is displayed below, yours should be similar."),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Example-3-nfc-pn532-shield-interrupt-example.png",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Serial comm window output from example 3.")),(0,i.kt)("h3",{id:"example-4-write-an-ndef-message-to-a-tag"},"Example #4: Write an NDEF Message to a Tag"),(0,i.kt)("p",null,"NFC tags are capable of storing data, the amount of data is dependent on each tag. In this example we will store two strings/messages on a tag, you will then be able to read this message with the code in ",(0,i.kt)("em",{parentName:"p"},"Example ","#","6: Read an NDEF Message From a Tag"),"."),(0,i.kt)("p",null,"Upload the following code to your Arduino development board."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},'If your NFC tag is not properly formatted ("Message write failed" will be displayed in the serial comm window) you\'ll need to see if you tag can be formatted with the code in ')),(0,i.kt)("h4",{id:"code-3"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'    #if 1 // use SPI\n    #include <SPI.h>\n    #include <PN532/PN532_SPI/PN532_SPI.h>\n    PN532_SPI pn532spi(SPI, 10);\n    NfcAdapter nfc = NfcAdapter(pn532spi);\n    #elif 0 // use hardware serial\n\n    #include <PN532/PN532_HSU/PN532_HSU.h>\n    PN532_HSU pn532hsu(Serial1);\n    NfcAdapter nfc(pn532hsu);\n    #elif 0  // use software serial\n\n    #include <PN532/PN532_SWHSU/PN532_SWHSU.h>\n    #include "SoftwareSerial.h"\n    SoftwareSerial SWSerial(2, 3);\n    PN532_SWHSU pn532swhsu(SWSerial);\n    NfcAdapter nfc(pn532swhsu);\n    #else //use I2C\n\n    #include <Wire.h>\n    #include <PN532/PN532_I2C/PN532_I2C.h>\n\n    PN532_I2C pn532_i2c(Wire);\n    NfcAdapter nfc = NfcAdapter(pn532_i2c);\n    #endif\n\n    void setup(void)\n    {\n        Serial.begin(115200); // start serial comm\n        Serial.println("NDEF Reader");\n        nfc.begin(); // begin NFC comm\n    }\n\n    void loop(void)\n    {\n      Serial.println("Place a formatted Mifare Classic NFC tag on the reader.");\n      if(nfc.tagPresent())\n      {\n        NdefMessage message = NdefMessage();\n        message.addUriRecord("Hello, world!");\n        message.addUriRecord("How are you today?");\n\n        bool success = nfc.write(message);\n        if(success)\n        {\n          Serial.println("The message was successfully written to the tag.");Ho\n        }else{\n          Serial.println("Message write failed.");\n        }\n      }\n\n      delay(5000);\n    }\n')),(0,i.kt)("p",null,"To test the code above:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open an Arduino serial comm window"),(0,i.kt)("li",{parentName:"ol"},"Hold the NFC tag over the NFC shield antenna's area and wait for the success or failure message to appear as shown in the figure below."),(0,i.kt)("li",{parentName:"ol"},"Remove the NFC tag form the antenna's area as soon as the success message is displayed to prevent a rewrite.")),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Example-4-write-ndef-message-to-tag.png",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Serial comm window for NDEF message written to card example.")),(0,i.kt)("h3",{id:"example-5-format-a-tag-as-ndef"},"Example #5: Format a Tag as NDEF"),(0,i.kt)("p",null,"Your brand new NFC tag might not be NDEF formatted initially. To format a tag as NDEF upload the following code to your Arduino development board:"),(0,i.kt)("h4",{id:"code-4"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'    #if 1 // use SPI\n    #include <SPI.h>\n    #include <PN532/PN532_SPI/PN532_SPI.h>\n    PN532_SPI pn532spi(SPI, 10);\n    NfcAdapter nfc = NfcAdapter(pn532spi);\n    #elif 0 // use hardware serial\n\n    #include <PN532/PN532_HSU/PN532_HSU.h>\n    PN532_HSU pn532hsu(Serial1);\n    NfcAdapter nfc(pn532hsu);\n    #elif 0  // use software serial\n\n    #include <PN532/PN532_SWHSU/PN532_SWHSU.h>\n    #include "SoftwareSerial.h"\n    SoftwareSerial SWSerial(2, 3);\n    PN532_SWHSU pn532swhsu(SWSerial);\n    NfcAdapter nfc(pn532swhsu);\n    #else //use I2C\n\n    #include <Wire.h>\n    #include <PN532/PN532_I2C/PN532_I2C.h>\n\n    PN532_I2C pn532_i2c(Wire);\n    NfcAdapter nfc = NfcAdapter(pn532_i2c);\n    #endif\n\n    void setup(void)\n    {\n        Serial.begin(115200); // start serial comm\n        Serial.println("NDEF Reader");\n        nfc.begin(); // begin NFC comm\n    }\n\n    void loop(void)\n    {\n        Serial.println("Place an unformatted Mifare Classic tag on the reader.");\n        if (nfc.tagPresent()) {\n\n            bool success = nfc.format();\n            if (success) {\n              Serial.println("Success, tag formatted as NDEF.");\n            } else {\n              Serial.println("Format failed.");\n            }\n\n        }\n        delay(5000);\n    }\n')),(0,i.kt)("p",null,"To test/run the code:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open the Arduino serial comm window."),(0,i.kt)("li",{parentName:"ol"},"Hold the NFC tag you wish to format over the NFC shield antenna's area."),(0,i.kt)("li",{parentName:"ol"},"Wait for the success or fail message to appear as shown in the figure below."),(0,i.kt)("li",{parentName:"ol"},"Remove the NFC tag from the antenna's area to prevent a re-format.")),(0,i.kt)("div",{class:"admonition note"},(0,i.kt)("p",{class:"admonition-title"},"Note"),"If your tag failed to get formatted, try again. If it fails your tag is not capable of getting formatted as NDEF."),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Example-5-format-nfc-tag-as-ndef.png",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Serial comm window output when formatting an NFC tag to NDEF.")),(0,i.kt)("h3",{id:"example-6-read-an-ndef-message-from-a-tag"},"Example #6: Read an NDEF Message From a Tag"),(0,i.kt)("p",null,"As you have seen in the example's above, the NFC shield is capable of writing messages to NFC tags. The NFC is also capable of reading NDEF messages from tags, in this example we'll show you how."),(0,i.kt)("h4",{id:"code-5"},"Code"),(0,i.kt)("p",null,"Upload the following code to your Arduino development board."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'    #if 1 // use SPI\n    #include <SPI.h>\n    #include <PN532/PN532_SPI/PN532_SPI.h>\n    PN532_SPI pn532spi(SPI, 10);\n    NfcAdapter nfc = NfcAdapter(pn532spi);\n    #elif 0 // use hardware serial\n\n    #include <PN532/PN532_HSU/PN532_HSU.h>\n    PN532_HSU pn532hsu(Serial1);\n    NfcAdapter nfc(pn532hsu);\n    #elif 0  // use software serial\n\n    #include <PN532/PN532_SWHSU/PN532_SWHSU.h>\n    #include "SoftwareSerial.h"\n    SoftwareSerial SWSerial(2, 3);\n    PN532_SWHSU pn532swhsu(SWSerial);\n    NfcAdapter nfc(pn532swhsu);\n    #else //use I2C\n\n    #include <Wire.h>\n    #include <PN532/PN532_I2C/PN532_I2C.h>\n\n    PN532_I2C pn532_i2c(Wire);\n    NfcAdapter nfc = NfcAdapter(pn532_i2c);\n    #endif\n\n    void setup(void)\n    {\n        Serial.begin(115200); // start serial comm\n        Serial.println("NDEF Reader");\n        nfc.begin(); // begin NFC comm\n    }\n\n    void loop(void)\n    {\n      Serial.println("\\nScan an NFC tag\\n");\n      if (nfc.tagPresent()) // Do an NFC scan to see if an NFC tag is present\n      {\n          NfcTag tag = nfc.read(); // read the NFC tag\n          if(tag.hasNdefMessage())\n          {\n            NdefMessage message = tag.getNdefMessage();\n            for(int i=0;i<message.getRecordCount();i++)\n            {\n              NdefRecord record = message.getRecord(i);\n              int payloadLength = record.getPayloadLength();\n              byte payload[payloadLength];\n              record.getPayload(payload);\n              Serial.write(payload,payloadLength);\n            }\n          }\n      }\n      delay(500); // wait half a second (500ms) before scanning again (you may increment or decrement the wait time)\n    }\n')),(0,i.kt)("p",null,"To test code above:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open an Arduino serial comm window"),(0,i.kt)("li",{parentName:"ol"},"Hold the an NFC tag with an NDEF message over the NFC shield antenna's area."),(0,i.kt)("li",{parentName:"ol"},"The NDEF message written on the tag should be displayed as shown in the figure below.")),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/img/Example-6-read-ndef-message.png",alt:"pir",width:600,height:"auto"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Serial comm window output for NDEF message read")),(0,i.kt)("h3",{id:"example-7-how-to-change-the-chip-select-pin-from-d10-to-d9"},"Example #7: How to Change the Chip Select Pin From D10 to D9"),(0,i.kt)("h4",{id:"hardware-modification-1"},"Hardware Modification"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},'Scrape off the connection from the pads labeled "SS" and "D10" on the shield'),(0,i.kt)("li",{parentName:"ol"},'Connect/solder pads "SS" and "D9" on the shield.')),(0,i.kt)("p",null,"You can then use the same code in the examples above but with pin 9 instead of 10 for the PN532 interface:"),(0,i.kt)("h4",{id:"code-6"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"PN532_SPI interface(SPI, 9); // create a SPI interface for the shield with the SPI CS terminal at digital pin 9\n")),(0,i.kt)("h3",{id:"example-8-use-two-nfc-shields-with-one-arduino-board"},"Example #8: Use Two NFC Shields With One Arduino Board"),(0,i.kt)("h4",{id:"hardware-modification-2"},"Hardware Modification"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Do the hardware modification described in Example ","#","7 on one of the two shields."),(0,i.kt)("li",{parentName:"ol"},"Stack both shields on the Arduino Board.")),(0,i.kt)("p",null,"You may now create two separate NFC objects, one for each shield, as follows:"),(0,i.kt)("h4",{id:"code-7"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'    #if 1 // use SPI\n    #include <SPI.h>\n    #include <PN532/PN532_SPI/PN532_SPI.h>\n    PN532_SPI pn532spi1(SPI, 10); //create a SPI interface for the shield with the SPI CS terminal at digital pin 10\n    NfcAdapter nfc1 = NfcAdapter(pn532spi1); create an NFC adapter object for shield one\n    PN532_SPI pn532spi2(SPI, 9); //create a SPI interface for the shield with the SPI CS terminal at digital pin 9\n    NfcAdapter nfc2 = NfcAdapter(pn532spi2); create an NFC adapter object for shield two\n    \n    #elif 0 // use hardware serial\n\n    #include <PN532/PN532_HSU/PN532_HSU.h>\n    PN532_HSU pn532hsu(Serial1);\n    NfcAdapter nfc(pn532hsu);\n    #elif 0  // use software serial\n\n    #include <PN532/PN532_SWHSU/PN532_SWHSU.h>\n    #include "SoftwareSerial.h"\n    SoftwareSerial SWSerial(2, 3);\n    PN532_SWHSU pn532swhsu(SWSerial);\n    NfcAdapter nfc(pn532swhsu);\n    #else //use I2C\n\n    #include <Wire.h>\n    #include <PN532/PN532_I2C/PN532_I2C.h>\n\n    PN532_I2C pn532_i2c(Wire);\n    NfcAdapter nfc = NfcAdapter(pn532_i2c);\n    #endif\n\n')),(0,i.kt)("h2",{id:"faqs"},"FAQs"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Q1: What's the length of the cable? And how long it can be if I want a longer one?")),(0,i.kt)("p",null,"A1: The cable we sold with NFC shield is 12cm. If you want a longer one yourself, please no more than 15cm with a IPX/U.FL connector."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Q2: Can two or more antennae be added to NFC Shield V2.0 (SKU: 113030001)?")),(0,i.kt)("p",null,"A2: NFC shield v2 is based on PN532 chip. Please note that the design only supports one antenna."),(0,i.kt)("h2",{id:"nfc-shield-v20-eagle-file-schematic-online-viewer"},"NFC Shield v2.0 Eagle File Schematic Online Viewer"),(0,i.kt)("div",{className:"altium-ecad-viewer","data-project-src":"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/res/NFC_Shield_V2.0b_Eagle_files.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,i.kt)("h2",{id:"nfc-shield-v21-eagle-file-schematic-online-viewer"},"NFC Shield v2.1 Eagle File Schematic Online Viewer"),(0,i.kt)("div",{className:"altium-ecad-viewer","data-project-src":"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/res/NFC_Shield_v2.1_Eagle_File.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,i.kt)("h2",{id:"resources"},"Resources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/res/NFC_Shield_Schematic.pdf"},"NFC Shield v2.0 Schematic")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/res/NFC_Shield_V2.0b_Eagle_files.zip"},"NFC Shield v2.0 Eagle File")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/res/NFC_Shield_v2.1.pdf"},"NFC Shield v2.1 Schematic")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/res/NFC_Shield_v2.1_Eagle_File.zip"},"NFC Shield v2.1 Eagle File")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/NFC_Shield_V2.0/res/PN532.pdf"},"PN532 Datasheet")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://support.seeedstudio.com/knowledgebase/articles/462025-nfc-shield-sku-sld01097p"},"FAQ of NFC Shield")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Seeed-Studio/Seeed_Arduino_NFC"},"Seeed Arduino NFC Library")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Seeed-Studio/PN532"},"PN532 Library"))),(0,i.kt)("h2",{id:"project"},"Project"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Paper Man")," An interesting way to communicate with your Android device through the NFC technology."),(0,i.kt)("iframe",{frameBorder:0,height:"327.5",scrolling:"no",src:"https://www.hackster.io/xiaobo__/paper-man-0a6833/embed",width:350}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NFC Card Controlled Remote Car")," Challenge your coordination: build your own NFC-controlled car"),(0,i.kt)("iframe",{frameBorder:0,height:"327.5",scrolling:"no",src:"https://www.hackster.io/litliao/nfc-card-controlled-remote-car-af27c9/embed",width:350}),(0,i.kt)("h2",{id:"tech-support"},"Tech Support"),(0,i.kt)("p",null,"Please submit any technical issue into our ",(0,i.kt)("a",{parentName:"p",href:"https://forum.seeedstudio.com/"},"forum"),". "),(0,i.kt)("br",null),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,i.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"}))))}c.isMDXComponent=!0}}]);