"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4337],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),c=a,k=d["".concat(p,".").concat(c)]||d[c]||m[c]||o;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4124:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={title:"Grove-BLE_v1",nointro:null,keywords:["docs","docusaurus"],image:"https://wiki.seeedstudio.com/Grove-BLE_v1/",last_update:{date:"01/06/2022",author:"gunengyu"}},l=void 0,i={unversionedId:"Sensor/Grove/Grove_Sensors_Network/Communication/Grove-BLE_v1",id:"Sensor/Grove/Grove_Sensors_Network/Communication/Grove-BLE_v1",title:"Grove-BLE_v1",description:"Grove - BLE v1 (Grove - Bluetooth Low Energy v1) uses a Low Energy Bluetooth module -- HM-11, based on TI CC2540 chip, which has AT command support. As a Grove product it's convenient to use Grove - BLE with Arduino board via Base Shield.",source:"@site/docs/Sensor/Grove/Grove_Sensors_Network/Communication/Grove-BLE_v1.md",sourceDirName:"Sensor/Grove/Grove_Sensors_Network/Communication",slug:"/Sensor/Grove/Grove_Sensors_Network/Communication/Grove-BLE_v1",permalink:"/docusaurus_wiki/Sensor/Grove/Grove_Sensors_Network/Communication/Grove-BLE_v1",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Sensor/Grove/Grove_Sensors_Network/Communication/Grove-BLE_v1.md",tags:[],version:"current",lastUpdatedBy:"gunengyu",lastUpdatedAt:1641427200,formattedLastUpdatedAt:"Jan 6, 2022",frontMatter:{title:"Grove-BLE_v1",nointro:null,keywords:["docs","docusaurus"],image:"https://wiki.seeedstudio.com/Grove-BLE_v1/",last_update:{date:"01/06/2022",author:"gunengyu"}},sidebar:"ProductSidebar",previous:{title:"Grove-UART_Wifi_V2",permalink:"/docusaurus_wiki/Sensor/Grove/Grove_Sensors_Network/Communication/Grove-UART_Wifi_V2"},next:{title:"Grove - 4-Digit Display",permalink:"/docusaurus_wiki/Sensor/Grove/Grove_Accessories/Display/Grove-4-Digit_Display"}},p={},s=[{value:"Parameters",id:"parameters",level:2},{value:"Platforms Supported",id:"platforms-supported",level:2},{value:"Pinout",id:"pinout",level:3},{value:"Features of Design",id:"features-of-design",level:3},{value:"AT Commands",id:"at-commands",level:3},{value:"SoftwareSerial Communication",id:"softwareserial-communication",level:2},{value:"Schematic Online Viewer",id:"schematic-online-viewer",level:2},{value:"Resources",id:"resources",level:2},{value:"Tech Support",id:"tech-support",level:2}],u={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-BLE_v1/img/Grove-BLE_front.png",alt:null}),(0,a.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-BLE_v1/img/Grove-BLE_Back.png",alt:null})),(0,a.kt)("p",null,"Grove - BLE v1 (Grove - Bluetooth Low Energy v1) uses a Low Energy Bluetooth module -- ",(0,a.kt)("strong",{parentName:"p"},"HM-11"),", based on TI CC2540 chip, which has AT command support. As a Grove product it's convenient to use Grove - BLE with Arduino board via Base Shield."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-BLE-p-1929.html"},(0,a.kt)("img",{parentName:"a",src:"https://files.seeedstudio.com/wiki/common/Get_One_Now_Banner.png",alt:null}))),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Specifications"),(0,a.kt)("th",{parentName:"tr",align:null},"Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"BT Version"),(0,a.kt)("td",{parentName:"tr",align:null},"Bluetooth Specification V4.0 BLE")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Working frequency"),(0,a.kt)("td",{parentName:"tr",align:null},"2.4GHz ISM band")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Modulation method"),(0,a.kt)("td",{parentName:"tr",align:null},"GFSK(Gaussian Frequency Shift Keying)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"RF Power"),(0,a.kt)("td",{parentName:"tr",align:null},"-23dbm, -6dbm, 0dbm, 6dbm, can modify through AT Command AT+POWE")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Speed"),(0,a.kt)("td",{parentName:"tr",align:null},"Asynchronous: 6K Bytes, Synchronous: 6K Bytes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Sensitivity"),(0,a.kt)("td",{parentName:"tr",align:null},"\u2264-84dBm at 0.1% BER")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Security"),(0,a.kt)("td",{parentName:"tr",align:null},"Authentication and encryption")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Service"),(0,a.kt)("td",{parentName:"tr",align:null},"Central & Peripheral UUID FFE0,FFE1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Supply Power"),(0,a.kt)("td",{parentName:"tr",align:null},"3.3v - 5v")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Working temperature"),(0,a.kt)("td",{parentName:"tr",align:null},"\u20135 ~ +65 Centigrade")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Size"),(0,a.kt)("td",{parentName:"tr",align:null},"40cm x 20cm")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Working Current"),(0,a.kt)("td",{parentName:"tr",align:null},"<"," 10 mA")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Sourcing Current"),(0,a.kt)("td",{parentName:"tr",align:null},"<"," 20 mA")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Sleeping Current"),(0,a.kt)("td",{parentName:"tr",align:null},"<"," 1 mA")))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The supply power of HM-11 is 3.3v, but the Grove - BLE is 3.3V to 5V.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"More details about Grove modules please refer to [Grove System](https://wiki.seeedstudio.com/Grove_System/)\n"))),(0,a.kt)("h2",{id:"platforms-supported"},"Platforms Supported"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Arduino"),(0,a.kt)("th",{parentName:"tr",align:null},"Raspberry Pi"),(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null}),(0,a.kt)("th",{parentName:"tr",align:null}))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/arduino_logo.jpg",alt:null})),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/raspberry_pi_logo_n.jpg",alt:null})),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/bbg_logo_n.jpg",alt:null})),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/wio_logo_n.jpg",alt:null})),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/linkit_logo.jpg",alt:null}))))),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"The platforms mentioned above as supported is/are an indication of the module's software or theoritical compatibility. We only provide software library or code examples for Arduino platform in most cases. It is not possible to provide software library / demo code for all possible MCU platforms. Hence, users have to write their own software library.\n"))),(0,a.kt)("h3",{id:"pinout"},"Pinout"),(0,a.kt)("p",null,"Grove connector has four wires: GND, VCC, RX, TX."),(0,a.kt)("h3",{id:"features-of-design"},"Features of Design"),(0,a.kt)("p",null,"We have used TD6810 chip as the voltage regulator, so the range of the supply power can be 3.3v to 5v. Also , there's a level shift circuit which make sure the accuracy of data transmission."),(0,a.kt)("h3",{id:"at-commands"},"AT Commands"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"1\uff09Query module address")),(0,a.kt)("p",null,"Send\uff1a AT+ADDR?"),(0,a.kt)("p",null,"Receive\uff1aOK+LADD:address"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"2\uff09 Query baud rate")),(0,a.kt)("p",null,"Send\uff1aAT+BAUD?"),(0,a.kt)("p",null,"Receive\uff1aOK+Get:","[para1]"),(0,a.kt)("p",null,"Range\uff1a 0~8; 0--9600\uff0c1--19200\uff0c2--38400\uff0c3--57600\uff0c4--115200\uff0c5--4800\uff0c6--2400\uff0c7--1200\uff0c8--230400"),(0,a.kt)("p",null,"Default: 0--9600."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Set baud rate")),(0,a.kt)("p",null,"Send\uff1aAT+BAUD","[para1]"),(0,a.kt)("p",null,"Receive\uff1aOK+Set:","[para1]"),(0,a.kt)("p",null,"Ex.\uff1aSend \uff1aAT+BAUD1 \uff0cReceive\uff1aOK+Set:1. The Baud rate has been set to 19200"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If setup to a value 7, After next power on, module will not support any AT Commands, until PIO0 is pressed, Module will change Baud to 9600.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"3\uff09 Try connect an address")),(0,a.kt)("p",null,"Send\uff1aAT+CON","[para1]"),(0,a.kt)("p",null,"Receive\uff1aOK+CONN","[para2]"),(0,a.kt)("p",null,"Range \uff1aA,E,F"),(0,a.kt)("p",null,"Ex.\uff1aTry to connect an device which MAC address is 00:17:EA:09:09:09"),(0,a.kt)("p",null,"Send: AT+CON0017EA090909"),(0,a.kt)("p",null,"May receive a reply: OK+CONNA --\x3e Accept request, connecting\xa0; OK+CONNE --\x3e Connect error\xa0; OK+CONN --\x3e Connected , if AT+NOTI1 is setup\xa0; OK+CONNF --\x3e Connect Failed , After 10 seconds"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Only central role is used. If remote device has already connected to other device or shut down, \u201cOK+CONNF\u201d will received after about 10 Seconds.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"4\uff09 Clear Last Connected device address")),(0,a.kt)("p",null,"Send\uff1aAT+CLEAR"),(0,a.kt)("p",null,"Receive\uff1aOK+CLEAR"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"5\uff09 Query Module Work Mode")),(0,a.kt)("p",null,"Send\uff1aAT+MODE?"),(0,a.kt)("p",null,"Receive\uff1aOK+Get:","[para]"),(0,a.kt)("p",null,"Range\uff1a 0~2;"),(0,a.kt)("p",null,"0--Transmission Mode, 1--PIO collection Mode + Mode 0, 2--Remote Control Mode + Mode 0 ."),(0,a.kt)("p",null,"Default: 0"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Set Module Work Mode")),(0,a.kt)("p",null,"Send\uff1aAT+MODE[]"),(0,a.kt)("p",null,"Receive\uff1aOK+Set:","[para]"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"6\uff09 Query Module name")),(0,a.kt)("p",null,"Send\uff1aAT+NAME?"),(0,a.kt)("p",null,"Receive\uff1aOK+NAME","[para1]"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Set Module name")),(0,a.kt)("p",null,"Send\uff1aAT+NAME","[para1]"),(0,a.kt)("p",null,"Receive\uff1aOK+Set:","[para1]"),(0,a.kt)("p",null,"Ex.\uff1aSend: AT+NAMESeeed\uff0c Receive\xa0: OK+Set:Seeed"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Name would change after next power on.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"7\uff09 Query Pin Code")),(0,a.kt)("p",null,"Send\uff1aAT+PASS?"),(0,a.kt)("p",null,"Receive\uff1aOK+PASS:","[para1]"),(0,a.kt)("p",null,"Range\xa0: 000000~999999."),(0,a.kt)("p",null,"Default\xa0: 000000."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Set Pin Code")),(0,a.kt)("p",null,"Send: AT+PASS","[para1]"),(0,a.kt)("p",null,"Receive\uff1aOK+Set:","[para1]"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"8\uff09 Restore all setup value to factory setup")),(0,a.kt)("p",null,"Send\uff1aAT+RENEW"),(0,a.kt)("p",null,"Receive\uff1aOK+RENEW"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"9\uff09 Restart module")),(0,a.kt)("p",null,"Send\uff1aAT+RESET"),(0,a.kt)("p",null,"Receive\uff1aOK+RESET"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"10\uff09Query Master and Slaver Role")),(0,a.kt)("p",null,"Send\uff1aAT+ROLE","[para1]"),(0,a.kt)("p",null,"Receive\uff1aOK+Set:","[para1]"),(0,a.kt)("p",null,"Range\xa0: 0~1;"),(0,a.kt)("p",null,"0--Peripheral\xa0: 1--Central\xa0: Default: 0."),(0,a.kt)("p",null,"More AT commands please refer to the Datasheet of BLE module."),(0,a.kt)("h2",{id:"softwareserial-communication"},"SoftwareSerial Communication"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove-BLE_v1/img/Grove-BLE_connection1.png",alt:null})),(0,a.kt)("p",null,"Grove - BLE can be used as a master or slave, you can use the one via different demos.",(0,a.kt)("strong",{parentName:"p"},"If you are going to use the following SoftwareSerial program, please refer to the way of connection in the previous pic. TX--\x3eD2, RX--\x3eD3.")),(0,a.kt)("p",null,"Open Arduino IDE, copy the following program and upload it onto the Arduino/Seeeduino board. And then two BLE modules can communicate with each other."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Demo\xa0: BLE Slave")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    #include <SoftwareSerial.h>   //Software Serial Port\n    #define RxD 2\n    #define TxD 3\n\n    #define DEBUG_ENABLED  1\n\n    SoftwareSerial BLE(RxD,TxD);\n\n    void setup()\n    {\n      Serial.begin(9600);\n      pinMode(RxD, INPUT);\n      pinMode(TxD, OUTPUT);\n      setupBleConnection();\n\n    }\n\n    void loop()\n    {\n      char recvChar;\n      while(1){\n        if(BLE.available()){//check if there\'s any data sent from the remote BLE\n          recvChar = BLE.read();\n          Serial.print(recvChar);\n        }\n        if(Serial.available()){//check if there\'s any data sent from the local serial terminal, you can add the other applications here\n          recvChar  = Serial.read();\n          BLE.print(recvChar);\n        }\n      }\n    }\n\n    void setupBleConnection()\n    {\n      BLE.begin(9600); //Set BLE BaudRate to default baud rate 9600\n      BLE.print("AT+CLEAR"); //clear all previous setting\n      BLE.print("AT+ROLE0"); //set the bluetooth name as a slaver\n      BLE.print("AT+SAVE1");  //don\'t save the connect information\n    }\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Demo\xa0: BLE Master")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'    #include <SoftwareSerial.h>   //Software Serial Port\n    #define RxD 2\n    #define TxD 3\n\n    #define DEBUG_ENABLED  1\n\n    SoftwareSerial BLE(RxD,TxD);\n\n    void setup()\n    {\n      Serial.begin(9600);\n      pinMode(RxD, INPUT);\n      pinMode(TxD, OUTPUT);\n      setupBleConnection();\n\n    }\n\n    void loop()\n    {\n      char recvChar;\n      while(1){\n        if(BLE.available()){//check if there\'s any data sent from the remote BLE\n          recvChar = BLE.read();\n          Serial.print(recvChar);\n        }\n        if(Serial.available()){//check if there\'s any data sent from the local serial terminal, you can add the other applications here\n          recvChar  = Serial.read();\n          BLE.print(recvChar);\n        }\n      }\n    }\n\n    void setupBleConnection()\n    {\n      BLE.begin(9600); //Set BLE BaudRate to default baud rate 9600\n      BLE.print("AT+CLEAR"); //clear all previous setting\n      BLE.print("AT+ROLE1"); //set the bluetooth name as a master\n      BLE.print("AT+SAVE1");  //don\'t save the connect information\n    }\n')),(0,a.kt)("h2",{id:"schematic-online-viewer"},"Schematic Online Viewer"),(0,a.kt)("div",{className:"altium-ecad-viewer","data-project-src":"https://files.seeedstudio.com/wiki/Grove-BLE_v1/res/Grove-BLE_v1.0.zip",style:{borderRadius:"0px 0px 4px 4px",height:500,borderStyle:"solid",borderWidth:1,borderColor:"rgb(241, 241, 241)",overflow:"hidden",maxWidth:1280,maxHeight:700,boxSizing:"border-box"}}),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-BLE_v1/res/HMBLEComAssistant.rar"},"BLE_apk_for_Android")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-BLE_v1/res/Bluetooth4_en.pdf"},"Datasheet of BLE module")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove-BLE_v1/res/Grove-BLE_v1.0.zip"},"Schematic"))),(0,a.kt)("h2",{id:"tech-support"},"Tech Support"),(0,a.kt)("p",null," if you have any technical issue.  submit the issue into our ",(0,a.kt)("a",{parentName:"p",href:"http://forum.seeedstudio.com/"},"forum"),". "),(0,a.kt)("div",null,(0,a.kt)("br",null),(0,a.kt)("p",{style:{textAlign:"center"}},(0,a.kt)("a",{href:"https://www.seeedstudio.com/act-4.html?utm_source=wiki&utm_medium=wikibanner&utm_campaign=newproducts",target:"_blank"},(0,a.kt)("img",{src:"https://files.seeedstudio.com/wiki/Wiki_Banner/new_product.jpg"})))))}d.isMDXComponent=!0}}]);