"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[64739],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var r=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(a),m=i,h=d["".concat(p,".").concat(m)]||d[m]||u[m]||n;return a?r.createElement(h,o(o({ref:t},c),{},{components:a})):r.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,o=new Array(n);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<n;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9683:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var r=a(87462),i=(a(67294),a(3905));const n={description:"Getting Started with Raspberry Pi",title:"Getting Started with Raspberry Pi",keywords:["ReSpeaker_2-Mics_Pi_HAT"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/11/2023",author:"jianjing Huang"}},o=void 0,l={unversionedId:"Seeed_Elderly/reSpeaker/ReSpeaker_2-Mics_Pi_HAT/ReSpeaker_2_Mics_Pi_HAT_Raspberry",id:"Seeed_Elderly/reSpeaker/ReSpeaker_2-Mics_Pi_HAT/ReSpeaker_2_Mics_Pi_HAT_Raspberry",title:"Getting Started with Raspberry Pi",description:"Getting Started with Raspberry Pi",source:"@site/docs/Seeed_Elderly/reSpeaker/ReSpeaker_2-Mics_Pi_HAT/ReSpeaker_2_Mics_Pi_HAT_Raspberry.md",sourceDirName:"Seeed_Elderly/reSpeaker/ReSpeaker_2-Mics_Pi_HAT",slug:"/Seeed_Elderly/reSpeaker/ReSpeaker_2-Mics_Pi_HAT/ReSpeaker_2_Mics_Pi_HAT_Raspberry",permalink:"/docusaurus_wiki/Seeed_Elderly/reSpeaker/ReSpeaker_2-Mics_Pi_HAT/ReSpeaker_2_Mics_Pi_HAT_Raspberry",draft:!1,editUrl:"https://github.com/c1ev0ps/docusaurus_wiki/edit/main/docs/Seeed_Elderly/reSpeaker/ReSpeaker_2-Mics_Pi_HAT/ReSpeaker_2_Mics_Pi_HAT_Raspberry.md",tags:[],version:"current",lastUpdatedBy:"jianjing Huang",lastUpdatedAt:1673395200,formattedLastUpdatedAt:"Jan 11, 2023",frontMatter:{description:"Getting Started with Raspberry Pi",title:"Getting Started with Raspberry Pi",keywords:["ReSpeaker_2-Mics_Pi_HAT"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S.png",last_update:{date:"1/11/2023",author:"jianjing Huang"}}},p={},s=[{value:"Driver installation and configuration",id:"driver-installation-and-configuration",level:3},{value:"Usage overview",id:"usage-overview",level:2},{value:"Record sound with Python",id:"record-sound-with-python",level:3},{value:"Picovoice with ReSpeaker 2-Mic Pi HAT and Raspberry Pi",id:"picovoice-with-respeaker-2-mic-pi-hat-and-raspberry-pi",level:3},{value:"Demo Usage",id:"demo-usage",level:4},{value:"Voice Commands",id:"voice-commands",level:4},{value:"Demo Source Code",id:"demo-source-code",level:4},{value:"Different Wake Words",id:"different-wake-words",level:4},{value:"Custom Voice Commands",id:"custom-voice-commands",level:4},{value:"Multiple Wake Word Examples",id:"multiple-wake-word-examples",level:3},{value:"Porcupine",id:"porcupine",level:3},{value:"Multi Wake Word Getting Started",id:"multi-wake-word-getting-started",level:4},{value:"Multi Wake Word Usage",id:"multi-wake-word-usage",level:4},{value:"Wake Word to Colors",id:"wake-word-to-colors",level:4},{value:"Multiple Wake Word Example Source Code",id:"multiple-wake-word-example-source-code",level:4},{value:"Keyword spotting with ReSpeaker 2-Mic Pi HAT and Mycroft Precise",id:"keyword-spotting-with-respeaker-2-mic-pi-hat-and-mycroft-precise",level:2},{value:"Intelligent Assistant with ReSpeaker 2-Mic Pi HAT and Mycroft Core",id:"intelligent-assistant-with-respeaker-2-mic-pi-hat-and-mycroft-core",level:2},{value:"Picovoice with ReSpeaker 2-Mic Pi HAT and Raspberry Pi Zero Getting Started",id:"picovoice-with-respeaker-2-mic-pi-hat-and-raspberry-pi-zero-getting-started",level:2},{value:"Demo Usage",id:"demo-usage-1",level:3},{value:"Voice Commands",id:"voice-commands-1",level:3},{value:"Demo Source Code",id:"demo-source-code-1",level:3},{value:"Different Wake Words",id:"different-wake-words-1",level:3},{value:"Custom Voice Commands",id:"custom-voice-commands-1",level:3},{value:"Multiple Wake Word Examples",id:"multiple-wake-word-examples-1",level:3},{value:"Porcupine",id:"porcupine-1",level:3},{value:"Multi Wake Word Getting Started",id:"multi-wake-word-getting-started-1",level:4},{value:"Multi Wake Word Usage",id:"multi-wake-word-usage-1",level:4},{value:"Wake Word to Colors",id:"wake-word-to-colors-1",level:4},{value:"Multiple Wake Word Example Source Code",id:"multiple-wake-word-example-source-code-1",level:4},{value:"Picovoice Tech Support",id:"picovoice-tech-support",level:3},{value:"FAQ",id:"faq",level:2}],c={toc:s};function d(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"driver-installation-and-configuration"},"Driver installation and configuration"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"1. Connect ReSpeaker 2-Mics Pi HAT to Raspberry Pi")),(0,i.kt)("p",null,"Mount ReSpeaker 2-Mics Pi HAT on your Raspberry Pi, make sure that the pins are properly aligned when stacking the ReSpeaker 2-Mics Pi HAT."),(0,i.kt)("p",null,"Raspberry Pi Connection"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/MIC_HATv1.0_for_raspberrypi/img/pi.png",alt:"connection picture1"})),(0,i.kt)("p",null,"Raspberry Pi Zero Connection"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/products/107100001/01.png",alt:"connection picture2"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"2. Setup the driver on Raspberry Pi")),(0,i.kt)("p",null,"Make sure that you are running ",(0,i.kt)("a",{parentName:"p",href:"https://www.raspberrypi.org/downloads/raspbian/"},"the latest Raspberry Pi OS")," on your Pi. ",(0,i.kt)("em",{parentName:"p"},"(updated at 2021.05.01)")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Step 1. Get the Seeed voice card source code, install and reboot.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\ngit clone https://github.com/Seeed-Projects/seeed-voicecard.git\ncd seeed-voicecard\nsudo ./install.sh\nsudo reboot now\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Step 2. Check that the sound card name matches the source code seeed-voicecard by command ",(0,i.kt)("inlineCode",{parentName:"li"},"aplay -l")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"arecord -l"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pi@raspberrypi:~/Desktop/mic_hat $ aplay -l\n**** List of PLAYBACK Hardware Devices ****\ncard 0: Headphones [bcm2835 Headphones], device 0: bcm2835 Headphones [bcm2835 Headphones]\n  Subdevices: 8/8\n  Subdevice #0: subdevice #0\n  Subdevice #1: subdevice #1\n  Subdevice #2: subdevice #2\n  Subdevice #3: subdevice #3\n  Subdevice #4: subdevice #4\n  Subdevice #5: subdevice #5\n  Subdevice #6: subdevice #6\n  Subdevice #7: subdevice #7\ncard 1: vc4hdmi0 [vc4-hdmi-0], device 0: MAI PCM i2s-hifi-0 [MAI PCM i2s-hifi-0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 2: vc4hdmi1 [vc4-hdmi-1], device 0: MAI PCM i2s-hifi-0 [MAI PCM i2s-hifi-0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 3: seeed2micvoicec [seeed-2mic-voicecard], device 0: bcm2835-i2s-wm8960-hifi wm8960-hifi-0 [bcm2835-i2s-wm8960-hifi wm8960-hifi-0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n\npi@raspberrypi:~/Desktop/mic_hat $ arecord -l\n**** List of CAPTURE Hardware Devices ****\ncard 3: seeed2micvoicec [seeed-2mic-voicecard], device 0: bcm2835-i2s-wm8960-hifi wm8960-hifi-0 [bcm2835-i2s-wm8960-hifi wm8960-hifi-0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Step 3. Test, you will hear what you say to the microphones(don't forget to plug in an earphone or a speaker):")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'arecord -D "plughw:3,0" -f S16_LE -r 16000 -d 5 -t wav test.wav\naplay -D "plughw:3,0" test.wav\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:"),'  "plughw:3,0" is the recording(or playback device number) , depending on your system this number may differ (for example on Raspberry Pi 0 it will be 0, since it doesn\'t have audio jack) We can find it via "arecord -l" and "aplay -l".'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"3. Configure sound settings and adjust the volume with alsamixer")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"alsamixer")," is a graphical mixer program for the Advanced Linux Sound Architecture (ALSA) that is used to configure sound settings and adjust the volume."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pi@raspberrypi:~ $ alsamixer\n")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/MIC_HATv1.0_for_raspberrypi/img/alsamixer.png",alt:null})),(0,i.kt)("p",null,"The Left and right arrow keys are used to select the channel or device and the Up and Down Arrows control the volume for the currently selected device. Quit the program with ALT+Q, or by hitting the Esc key. ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Alsamixer"},"More information")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre"},"Please use the F6 to select seeed-2mic-voicecard device first.\n"))),(0,i.kt)("h2",{id:"usage-overview"},"Usage overview"),(0,i.kt)("p",null,"To run the following examples, clone ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/respeaker/mic_hat.git"},"https://github.com/respeaker/mic_hat.git")," repository to your Raspberry Pi"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/respeaker/mic_hat.git\ncd mic_hat\n")),(0,i.kt)("p",null,"All the Python scripts, mentioned in the examples below can be found inside this repository. To install the necessary dependencies, from mic_hat repository folder, run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install portaudio19-dev libatlas-base-dev\npip3 install -r requirements.txt\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"APA102 LEDs")),(0,i.kt)("p",null,"Each on-board APA102 LED has an additional driver chip. The driver chip takes care of receiving the desired color via its input lines, and then holding this color until a new command is received."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 interfaces/pixels.py\n")),(0,i.kt)("video",{width:512,height:384,controls:!0,preload:!0},(0,i.kt)("source",{src:"https://files.seeedstudio.com/wiki/MIC_HATv1.0_for_raspberrypi/img/led.mp4"}),(0,i.kt)("source",{src:"https://files.seeedstudio.com/wiki/MIC_HATv1.0_for_raspberrypi/img/led.webmhd.webm"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"User Button")),(0,i.kt)("p",null,"There is an on-board User Button, which is connected to GPIO17. Now we will try to detect it with python and RPi.GPIO."),(0,i.kt)("p",null,"Execute the following code from mic_hat folder repository, which you cloned at Step 4."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 interfaces/button.py\n")),(0,i.kt)("p",null,'It should display "on" when you press the button:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 button.py\n")),(0,i.kt)("p",null,"Output like"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-txt"},"pi@raspberrypi:~ $ python3 button.py\noff\noff\non\non\noff\n")),(0,i.kt)("h3",{id:"record-sound-with-python"},"Record sound with Python"),(0,i.kt)("p",null,"We use ",(0,i.kt)("a",{parentName:"p",href:"https://people.csail.mit.edu/hubert/pyaudio/"},"PyAudio python library")," to record sound with Python."),(0,i.kt)("p",null,"First, run the following script to get the device index number of 2 Mic pi hat:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 recording_examples/get_device_index.py\n")),(0,i.kt)("p",null,"You will see the device ID as below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Input Device id  2  -  seeed-2mic-voicecard: - (hw:1,0)\n")),(0,i.kt)("p",null,"To record the sound, open ",(0,i.kt)("inlineCode",{parentName:"p"},"recording_examples/record.py")," file with nano or other text editor and change  ",(0,i.kt)("inlineCode",{parentName:"p"},"RESPEAKER_INDEX = 2")," to index number of ReSpeaker on your system. Then run python script record.py to make a recording:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 recording_examples/record.py\n")),(0,i.kt)("p",null,"If you want to extract channel 0 data from 2 channels, have a look at the content of ",(0,i.kt)("inlineCode",{parentName:"p"},"record_one_channel.py"),". For other channel X, please change ","[0::2]"," to ","[X::2]","."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 recording_examples/record_one_channel.py\n")),(0,i.kt)("p",null,"To play the recorded samples you can either use aplay system utility, for example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"aplay -f cd -Dhw:1 output.wav #for Stereo sound\naplay -D plughw:1,0 output_one_channel.wav #for Mono sound from one channel\n")),(0,i.kt)("p",null,"Alternatively you can use recording_examples/play.py script to play the .wav files with PyAudio."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"python3 recording_examples/play.py path-to-wav-file\n")),(0,i.kt)("p",null,"Make sure to specify the right output device index in play.py - otherwise PyAudio will freeze!"),(0,i.kt)("h3",{id:"picovoice-with-respeaker-2-mic-pi-hat-and-raspberry-pi"},"Picovoice with ReSpeaker 2-Mic Pi HAT and Raspberry Pi"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 1.")," Follow the ",(0,i.kt)("strong",{parentName:"p"},"above step-by-step tutorial of ReSpeaker 2-Mic Pi HAT with Raspberry Pi")," before the following."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," Please make sure that the ",(0,i.kt)("inlineCode",{parentName:"p"},"APA102")," LEDs are working properly on the ReSpeaker 2-Mic Pi HAT with Raspberry Pi."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 2.")," Type the following command on the terminal to ",(0,i.kt)("strong",{parentName:"p"},"install the Picovoice demo for ReSpeaker 2-Mic Pi HAT"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install pvrespeakerdemo\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," On fresh Raspberry Pi OS installation you might notice the following warning when installing this demo:\nThe script picovoice_respeaker_demo is installed in '/home/pi/.local/bin' which is not on PATH."),(0,i.kt)("p",null,"It means that in order to run the demo, you need to add /home/pi/.local/bin to your system PATH:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"echo 'export PATH=\"$HOME/bin:$HOME/.local/bin:$PATH\"' >> ~/.bashrc\n")),(0,i.kt)("h4",{id:"demo-usage"},"Demo Usage"),(0,i.kt)("p",null,"The demo utilizes the ReSpeaker 2-Mic Pi HAT on a Raspberry Pi with Picovoice technology to control the LEDs. ",(0,i.kt)("strong",{parentName:"p"},'This demo is triggered by the wake word "',(0,i.kt)("inlineCode",{parentName:"strong"},"Picovoice"),'" and will be ready to take follow-on actions, such as turning LEDs on and off, and changing LED colors.')),(0,i.kt)("p",null,"After the installation is finished, type this command to run the demo on the terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"picovoice_respeaker_demo\n")),(0,i.kt)("h4",{id:"voice-commands"},"Voice Commands"),(0,i.kt)("p",null,"Here are voice commands for this demo:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Picovoice"))),(0,i.kt)("p",null,"The demo outputs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-txt"},"wake word\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Turn on the lights"))),(0,i.kt)("p",null,"You should see the lights turned on and the following message on the terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"{\n    is_understood : 'true',\n    intent : 'turnLights',\n    slots : {\n        'state' : 'on',\n    }\n}\n")),(0,i.kt)("p",null,"The list of commands are shown on the terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'context:\n  expressions:\n    turnLights:\n      - "[switch, turn] $state:state (all) (the) [light, lights]"\n      - "[switch, turn] (all) (the) [light, lights] $state:state"\n    changeColor:\n      - "[change, set, switch] (all) (the) (light, lights) (color) (to) $color:color"\n  slots:\n    state:\n      - "off"\n      - "on"\n    color:\n      - "blue"\n      - "green"\n      - "orange"\n      - "pink"\n      - "purple"\n      - "red"\n      - "white"\n      - "yellow"\n')),(0,i.kt)("p",null,"also, you can try this command to change the colour by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Picovoice, set the lights to orange"))),(0,i.kt)("p",null,"Turn off the lights by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Picovoice, turn off all lights"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Demo Video Demonstration")),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("iframe",{width:720,height:480,src:"https://www.youtube.com/embed/mPfZZQXjWMI",frameBorder:0,allow:"accelerometer; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,i.kt)("h4",{id:"demo-source-code"},"Demo Source Code"),(0,i.kt)("p",null,"The demo is built with the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://github.com/Picovoice/picovoice"},"Picovoice SDK")),". The demo source code is available on GitHub at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Picovoice/picovoice/tree/master/demo/respeaker"},"https://github.com/Picovoice/picovoice/tree/master/demo/respeaker"),"."),(0,i.kt)("h4",{id:"different-wake-words"},"Different Wake Words"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Picovoice/picovoice"},(0,i.kt)("strong",{parentName:"a"},"Picovoice SDK")),' includes free sample wake words licensed under Apache 2.0, including major voice assistants (e.g. "',(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Hey Google")),'", "',(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Alexa")),'") and fun ones like "',(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Computer")),'" and "',(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Jarvis")),'".'),(0,i.kt)("h4",{id:"custom-voice-commands"},"Custom Voice Commands"),(0,i.kt)("p",null,"The lighting commands are defined by a Picovoice ",(0,i.kt)("em",{parentName:"p"},"Speech-to-Intent context"),". You can design and train contexts by typing in the allowed grammar using Picovoice Console. You can test your changes in-browser as you edit with the microphone button. Go to Picovoice Console (",(0,i.kt)("a",{parentName:"p",href:"https://picovoice.ai/console/"},"https://picovoice.ai/console/"),") and sign up for an account. Use the ",(0,i.kt)("strong",{parentName:"p"},"Rhino Speech-to-Intent editor")," to make contexts, then train them for Raspberry Pi."),(0,i.kt)("div",{align:"center"},(0,i.kt)("img",{width:"{700}",src:"https://files.seeedstudio.com/wiki/ReSpeaker_4_Mic_Array_for_Raspberry_Pi/respeaker_demo_console_edit.gif"})),(0,i.kt)("h3",{id:"multiple-wake-word-examples"},"Multiple Wake Word Examples"),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("iframe",{width:720,height:480,src:"https://www.youtube.com/embed/GqxWHoQ560g",frameBorder:0,allow:"accelerometer; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,i.kt)("h3",{id:"porcupine"},"Porcupine"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Porcupine")," is a highly-accurate and lightweight wake word engine. It enables building always-listening voice-enabled\napplications. It is"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"using deep neural networks trained in real-world environments."),(0,i.kt)("li",{parentName:"ul"},"compact and computationally-efficient. It is perfect for IoT."),(0,i.kt)("li",{parentName:"ul"},"cross-platform. Raspberry Pi, BeagleBone, Android, iOS, Linux (x86_64), macOS (x86_64), Windows (x86_64), and web\nbrowsers are supported. Additionally, enterprise customers have access to the ARM Cortex-M SDK."),(0,i.kt)("li",{parentName:"ul"},"scalable. It can detect multiple always-listening voice commands with no added runtime footprint."),(0,i.kt)("li",{parentName:"ul"},"self-service. Developers can train custom wake word models using ",(0,i.kt)("a",{parentName:"li",href:"https://picovoice.ai/console/"},"Picovoice Console"),".")),(0,i.kt)("p",null,"To demonstrate the Picovoice's capability we have also prepared a multi wake word examples using ReSpeaker 2-Mic Pi HAT with Raspberry Pi! Different wake word can set to execute certain tasks."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"This package contains a command line demo for controlling ReSpeaker 2-Mic Pi HAT LEDs using Porcupine.")),(0,i.kt)("h4",{id:"multi-wake-word-getting-started"},"Multi Wake Word Getting Started"),(0,i.kt)("p",null,"Running the following command in terminal to install demo driver:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"pip3 install ppnrespeakerdemo\n")),(0,i.kt)("h4",{id:"multi-wake-word-usage"},"Multi Wake Word Usage"),(0,i.kt)("p",null,"Run the following in terminal after the driver installation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"porcupine_respeaker_demo\n")),(0,i.kt)("p",null,"Wait for the demo to initialize and print ",(0,i.kt)("inlineCode",{parentName:"p"},"[Listening]")," in the terminal. Say:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Picovoice")),(0,i.kt)("p",null,"The demo outputs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"detected 'Picovoice'\n")),(0,i.kt)("p",null,"The lights are now set to ",(0,i.kt)("inlineCode",{parentName:"p"},"green"),". Say:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Alexa")),(0,i.kt)("p",null,"The lights are set to ",(0,i.kt)("inlineCode",{parentName:"p"},"yellow")," now. Say:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Terminator")),(0,i.kt)("p",null,"to turn off the lights."),(0,i.kt)("h4",{id:"wake-word-to-colors"},"Wake Word to Colors"),(0,i.kt)("p",null,"Below are the colors associated with supported wake words for this demo:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ffff33/000000?text=+",alt:"#ffff33"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Alexa")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ff8000/000000?text=+",alt:"#ff8000"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Bumblebee")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ffffff/000000?text=+",alt:"#ffffff"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Computer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ff0000/000000?text=+",alt:"#ff0000"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Hey Google")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/800080/000000?text=+",alt:"#800080"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Hey Siri")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ff3399/000000?text=+",alt:"#ff3399"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Jarvis")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/00ff00/000000?text=+",alt:"#00ff00"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Picovoice")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/0000ff/000000?text=+",alt:"#0000ff"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Porcupine")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/000000/000000?text=+",alt:"#000000"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Terminator"))),(0,i.kt)("h4",{id:"multiple-wake-word-example-source-code"},"Multiple Wake Word Example Source Code"),(0,i.kt)("p",null,"Please see the complete source code of this example here: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Picovoice/porcupine/tree/master/demo/respeaker"},"https://github.com/Picovoice/porcupine/tree/master/demo/respeaker"),"."),(0,i.kt)("h2",{id:"keyword-spotting-with-respeaker-2-mic-pi-hat-and-mycroft-precise"},"Keyword spotting with ReSpeaker 2-Mic Pi HAT and Mycroft Precise"),(0,i.kt)("p",null,"Mycroft Precise is a completely open-source keyword detection engine. While it has more limited functionality comparing to Picovoice, it also has more permissive license (Apache 2.0), which allows modification and redistribution, including closed-source and commercial, as long as license is preserved."),(0,i.kt)("p",null,"To get started with Mycroft Precise, install latest stable version of Seeed's Mycroft Precise fork:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install libatlas-base-dev\npip3 install git+https://github.com/respeaker/mycroft_runner_simple.git\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," On fresh Raspberry Pi OS installation you might notice the following warning when installing this demo:\nThe script picovoice_respeaker_demo is installed in '/home/pi/.local/bin' which is not on PATH."),(0,i.kt)("p",null,"It means that in order to run the demo, you need to add /home/pi/.local/bin to your system PATH:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"echo 'export PATH=\"$HOME/bin:$HOME/.local/bin:$PATH\"' >> ~/.bashrc\n")),(0,i.kt)("p",null,"Then you can test Mycroft Precise installation simply by running"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mycroft-precise --model hey-mycroft\n")),(0,i.kt)("p",null,"If you'd like to integrate Mycroft Precise into your own project, check Github repository README file for more information on the API."),(0,i.kt)("h2",{id:"intelligent-assistant-with-respeaker-2-mic-pi-hat-and-mycroft-core"},"Intelligent Assistant with ReSpeaker 2-Mic Pi HAT and Mycroft Core"),(0,i.kt)("p",null,"Mycroft is a hackable open source voice assistant. It is similar in functionality to Amazon Alexa or Google Assistant, but has a more permissive license (Apache 2.0), which allows modification and redistribution, including closed-source and commercial, as long as license is preserved."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This section is currently under development, we'll add more details about using Mycroft Core with Respeaker")),(0,i.kt)("h2",{id:"picovoice-with-respeaker-2-mic-pi-hat-and-raspberry-pi-zero-getting-started"},"Picovoice with ReSpeaker 2-Mic Pi HAT and Raspberry Pi Zero Getting Started"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 1.")," Install the drivers and configure the device as described in ",(0,i.kt)("strong",{parentName:"p"},"Driver installation and configuration"),"."),(0,i.kt)("p",null,"Then git clone Picovoice github repository:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --recurse-submodules https://github.com/Picovoice/picovoice.git\ncd picovoice\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," Please make sure that the ",(0,i.kt)("inlineCode",{parentName:"p"},"APA102")," LEDs are working properly on the ReSpeaker 2-Mic Pi HAT with Raspberry Pi Zero."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 2.")," Install the ",(0,i.kt)("inlineCode",{parentName:"p"},"wiringpi")," library by typing the following on the terminal."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt-get install wiringpi\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 3.")," From the root of the repository, type the following command on the terminal to ",(0,i.kt)("strong",{parentName:"p"},"install the Picovoice demo for ReSpeaker 2-Mic Pi HAT"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"gcc -std=c99 -O3 -o demo/respeaker-rpi0/picovoice_demo_mic \\\n-I sdk/c/include/ demo/respeaker-rpi0/picovoice_demo_mic.c \\\n-ldl -lasound -lwiringPi\n")),(0,i.kt)("h3",{id:"demo-usage-1"},"Demo Usage"),(0,i.kt)("p",null,"The demo utilizes the ReSpeaker 2-Mic Pi HAT on a Raspberry Pi Zero with Picovoice technology to control the LEDs. ",(0,i.kt)("strong",{parentName:"p"},'This demo is triggered by the wake word "',(0,i.kt)("inlineCode",{parentName:"strong"},"Picovoice"),'" and will be ready to take follow-on actions, such as turning LEDs on and off, and changing LED colors.')),(0,i.kt)("p",null,"After the installation is finished, type this command from the root of the repository, to run the demo on the terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"./demo/respeaker-rpi0/picovoice_demo_mic \\\nsdk/c/lib/raspberry-pi/arm11/libpicovoice.so \\\nresources/porcupine/lib/common/porcupine_params.pv \\\nresources/porcupine/resources/keyword_files/raspberry-pi/picovoice_raspberry-pi.ppn \\\n0.65 \\\nresources/rhino/lib/common/rhino_params.pv \\\ndemo/respeaker/pvrespeakerdemo/respeaker_raspberry-pi.rhn \\\n0.5 \\\nplughw:CARD=seeed2micvoicec,DEV=0\n")),(0,i.kt)("h3",{id:"voice-commands-1"},"Voice Commands"),(0,i.kt)("p",null,"Here are voice commands for this demo:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Picovoice"))),(0,i.kt)("p",null,"The demo outputs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-txt"},"wake word\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Turn on the lights"))),(0,i.kt)("p",null,"You should see the lights turned on and the following message on the terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"{\n    is_understood : 'true',\n    intent : 'turnLights',\n    slots : {\n        'state' : 'on',\n    }\n}\n")),(0,i.kt)("p",null,"The list of commands are shown on the terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'context:\n  expressions:\n    turnLights:\n      - "[switch, turn] $state:state (all) (the) [light, lights]"\n      - "[switch, turn] (all) (the) [light, lights] $state:state"\n    changeColor:\n      - "[change, set, switch] (all) (the) (light, lights) (color) (to) $color:color"\n  slots:\n    state:\n      - "off"\n      - "on"\n    color:\n      - "blue"\n      - "green"\n      - "orange"\n      - "pink"\n      - "purple"\n      - "red"\n      - "white"\n      - "yellow"\n')),(0,i.kt)("p",null,"also, you can try this command to change the colour by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Picovoice, set the lights to orange"))),(0,i.kt)("p",null,"Turn off the lights by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Picovoice, turn off all lights"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Demo Video Demonstration")),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("iframe",{width:720,height:480,src:"https://www.youtube.com/embed/X12N2Rn-q5o",frameBorder:0,allow:"accelerometer; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,i.kt)("h3",{id:"demo-source-code-1"},"Demo Source Code"),(0,i.kt)("p",null,"The demo is built with the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://github.com/Picovoice/picovoice"},"Picovoice SDK")),". The demo source code is available on GitHub at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Picovoice/picovoice/tree/master/demo/respeaker-rpi0"},"https://github.com/Picovoice/picovoice/tree/master/demo/respeaker-rpi0"),"."),(0,i.kt)("h3",{id:"different-wake-words-1"},"Different Wake Words"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Picovoice/picovoice"},(0,i.kt)("strong",{parentName:"a"},"Picovoice SDK")),' includes free sample wake words licensed under Apache 2.0, including major voice assistants (e.g. "',(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Hey Google")),'", "',(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Alexa")),'") and fun ones like "',(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Computer")),'" and "',(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Jarvis")),'".'),(0,i.kt)("h3",{id:"custom-voice-commands-1"},"Custom Voice Commands"),(0,i.kt)("p",null,"The lighting commands are defined by a Picovoice ",(0,i.kt)("em",{parentName:"p"},"Speech-to-Intent context"),". You can design and train contexts by typing in the allowed grammar using Picovoice Console. You can test your changes in-browser as you edit with the microphone button. Go to Picovoice Console (",(0,i.kt)("a",{parentName:"p",href:"https://picovoice.ai/console/"},"https://picovoice.ai/console/"),") and sign up for an account. Use the ",(0,i.kt)("strong",{parentName:"p"},"Rhino Speech-to-Intent editor")," to make contexts, then train them for Raspberry Pi Zero."),(0,i.kt)("div",{align:"center"},(0,i.kt)("img",{width:"{700}",src:"https://files.seeedstudio.com/wiki/ReSpeaker_4_Mic_Array_for_Raspberry_Pi/respeaker_demo_console_edit.gif"})),(0,i.kt)("h3",{id:"multiple-wake-word-examples-1"},"Multiple Wake Word Examples"),(0,i.kt)("p",{style:{textAlign:"center"}},(0,i.kt)("iframe",{width:720,height:480,src:"https://www.youtube.com/embed/Fi_IJEcNr3I",frameBorder:0,allow:"accelerometer; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,i.kt)("p",null,"To demonstrate the Picovoice's capability we have also prepared a multi wake word examples using ReSpeaker 2-Mic Pi HAT with Raspberry Pi Zero! Different wake word can set to execute certain tasks."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"This package contains a command line demo for controlling ReSpeaker 2-Mic Pi HAT LEDs using Porcupine.")),(0,i.kt)("h3",{id:"porcupine-1"},"Porcupine"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Porcupine")," is a highly-accurate and lightweight wake word engine. It enables building always-listening voice-enabled\napplications. It is"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"using deep neural networks trained in real-world environments."),(0,i.kt)("li",{parentName:"ul"},"compact and computationally-efficient. It is perfect for IoT."),(0,i.kt)("li",{parentName:"ul"},"cross-platform. Raspberry Pi, BeagleBone, Android, iOS, Linux (x86_64), macOS (x86_64), Windows (x86_64), and web\nbrowsers are supported. Additionally, enterprise customers have access to the ARM Cortex-M SDK."),(0,i.kt)("li",{parentName:"ul"},"scalable. It can detect multiple always-listening voice commands with no added runtime footprint."),(0,i.kt)("li",{parentName:"ul"},"self-service. Developers can train custom wake word models using ",(0,i.kt)("a",{parentName:"li",href:"https://picovoice.ai/console/"},"Picovoice Console"),".")),(0,i.kt)("h4",{id:"multi-wake-word-getting-started-1"},"Multi Wake Word Getting Started"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 1")," Install the ",(0,i.kt)("inlineCode",{parentName:"p"},"wiringpi")," library (if you haven't installed already) by typing the following on the terminal."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt-get install wiringpi\n")),(0,i.kt)("p",null,"Then git clone Picovoice github repository:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --recurse-submodules https://github.com/Picovoice/porcupine.git\ncd picovoice\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Step 2.")," From the root of the repository, type the following command on the terminal to ",(0,i.kt)("strong",{parentName:"p"},"install the Porcupine demo for ReSpeaker 2-Mic Pi HAT"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"gcc -std=c99 -O3 -o demo/respeaker-rpi0/porcupine_demo_mic \\\n-I include/ demo/respeaker-rpi0/porcupine_demo_mic.c \\\n-ldl -lasound -lwiringPi\n")),(0,i.kt)("h4",{id:"multi-wake-word-usage-1"},"Multi Wake Word Usage"),(0,i.kt)("p",null,"Run the following in terminal from the root of the repository:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"./demo/respeaker-rpi0/porcupine_demo_mic \\\nlib/raspberry-pi/arm11/libpv_porcupine.so \\\nlib/common/porcupine_params.pv \\\n0.65 \\\nplughw:CARD=seeed2micvoicec,DEV=0 \\\nresources/keyword_files/raspberry-pi/alexa_raspberry-pi.ppn \\\nresources/keyword_files/raspberry-pi/computer_raspberry-pi.ppn \\\nresources/keyword_files/raspberry-pi/hey\\ google_raspberry-pi.ppn \\\nresources/keyword_files/raspberry-pi/hey\\ siri_raspberry-pi.ppn \\\nresources/keyword_files/raspberry-pi/jarvis_raspberry-pi.ppn \\\nresources/keyword_files/raspberry-pi/picovoice_raspberry-pi.ppn \\\nresources/keyword_files/raspberry-pi/porcupine_raspberry-pi.ppn \\\nresources/keyword_files/raspberry-pi/bumblebee_raspberry-pi.ppn \\\nresources/keyword_files/raspberry-pi/terminator_raspberry-pi.ppn\n")),(0,i.kt)("p",null,"Wait for the demo to initialize and print ",(0,i.kt)("inlineCode",{parentName:"p"},"[Listening]")," in the terminal. Say:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Picovoice")),(0,i.kt)("p",null,"The demo outputs:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"detected 'Picovoice'\n")),(0,i.kt)("p",null,"The lights are now set to ",(0,i.kt)("inlineCode",{parentName:"p"},"green"),". Say:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Alexa")),(0,i.kt)("p",null,"The lights are set to ",(0,i.kt)("inlineCode",{parentName:"p"},"yellow")," now. Say:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Terminator")),(0,i.kt)("p",null,"to turn off the lights."),(0,i.kt)("h4",{id:"wake-word-to-colors-1"},"Wake Word to Colors"),(0,i.kt)("p",null,"Below are the colors associated with supported wake words for this demo:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ffff33/000000?text=+",alt:"#ffff33"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Alexa")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ff8000/000000?text=+",alt:"#ff8000"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Bumblebee")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ffffff/000000?text=+",alt:"#ffffff"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Computer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ff0000/000000?text=+",alt:"#ff0000"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Hey Google")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/800080/000000?text=+",alt:"#800080"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Hey Siri")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/ff3399/000000?text=+",alt:"#ff3399"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Jarvis")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/00ff00/000000?text=+",alt:"#00ff00"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Picovoice")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/0000ff/000000?text=+",alt:"#0000ff"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Porcupine")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("img",{parentName:"li",src:"https://via.placeholder.com/15/000000/000000?text=+",alt:"#000000"})," ",(0,i.kt)("inlineCode",{parentName:"li"},"Terminator"))),(0,i.kt)("h4",{id:"multiple-wake-word-example-source-code-1"},"Multiple Wake Word Example Source Code"),(0,i.kt)("p",null,"Please see the complete source code of this example here: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Picovoice/porcupine/tree/master/demo/respeaker-rpi0"},"https://github.com/Picovoice/porcupine/tree/master/demo/respeaker-rpi0"),"."),(0,i.kt)("h3",{id:"picovoice-tech-support"},"Picovoice Tech Support"),(0,i.kt)("p",null,"If you encounter technical problems using Picovoice, please visit ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://github.com/Picovoice"},"Picovoice"))," for discussions."),(0,i.kt)("h2",{id:"faq"},"FAQ"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},'Q1: #include "portaudio.h" Error when run "sudo pip install pyaudio".')),(0,i.kt)("p",null,"A1: Please run below command to solve the issue."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install portaudio19-dev\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Q2: How to change the Raspbian Mirrors source?")),(0,i.kt)("p",null,"A2: Please refer to ",(0,i.kt)("a",{parentName:"p",href:"http://www.raspbian.org/RaspbianMirrors"},"Raspbian Mirrors")," and follow below instructions to modify the source at beginning."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"pi@raspberrypi ~ $ sudo nano /etc/apt/sources.list\n")),(0,i.kt)("p",null,"For example, we suggest use the Tsinghua source for China users. So please modify the sources.list as below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-d"},"deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main non-free contrib\ndeb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main non-free contrib\n")))}d.isMDXComponent=!0}}]);